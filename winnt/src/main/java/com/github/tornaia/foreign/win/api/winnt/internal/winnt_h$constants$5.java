// Generated by jextract

package com.github.tornaia.foreign.win.api.winnt.internal;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class winnt_h$constants$5 extends winnt_h$constants$4 {

    /* package-private */ winnt_h$constants$5() {}
    static final MemoryLayout _WOW64_ARCHITECTURE_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT
    ).withName("_WOW64_ARCHITECTURE_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _WOW64_ARCHITECTURE_INFORMATION$struct$LAYOUT() { return _WOW64_ARCHITECTURE_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("TargetAddress"),
        C_LONGLONG.withName("Flags")
    ).withName("_PROCESS_DYNAMIC_EH_CONTINUATION_TARGET");
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET$struct$LAYOUT() { return _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET$TargetAddress$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET$TargetAddress$LAYOUT() { return _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET$TargetAddress$LAYOUT_; }

    static final VarHandle _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET$TargetAddress$VH_ = _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TargetAddress"));
    static final java.lang.invoke.VarHandle _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET$TargetAddress$VH() { return _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET$TargetAddress$VH_; }

    static final MemoryLayout _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET$Flags$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET$Flags$LAYOUT() { return _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET$Flags$LAYOUT_; }

    static final VarHandle _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET$Flags$VH_ = _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET$Flags$VH() { return _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET$Flags$VH_; }

    static final MemoryLayout _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("NumberOfTargets"),
        C_SHORT.withName("Reserved"),
        C_LONG.withName("Reserved2"),
        C_POINTER.withName("Targets")
    ).withName("_PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$struct$LAYOUT() { return _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$NumberOfTargets$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$NumberOfTargets$LAYOUT() { return _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$NumberOfTargets$LAYOUT_; }

    static final VarHandle _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$NumberOfTargets$VH_ = _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("NumberOfTargets"));
    static final java.lang.invoke.VarHandle _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$NumberOfTargets$VH() { return _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$NumberOfTargets$VH_; }

    static final MemoryLayout _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Reserved$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Reserved$LAYOUT() { return _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Reserved$LAYOUT_; }

    static final VarHandle _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Reserved$VH_ = _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Reserved$VH() { return _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Reserved$VH_; }

    static final MemoryLayout _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Reserved2$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Reserved2$LAYOUT() { return _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Reserved2$LAYOUT_; }

    static final VarHandle _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Reserved2$VH_ = _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved2"));
    static final java.lang.invoke.VarHandle _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Reserved2$VH() { return _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Reserved2$VH_; }

    static final MemoryLayout _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Targets$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Targets$LAYOUT() { return _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Targets$LAYOUT_; }

    static final VarHandle _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Targets$VH_ = MemoryHandles.asAddressVarHandle(_PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Targets")));
    static final java.lang.invoke.VarHandle _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Targets$VH() { return _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION$Targets$VH_; }

    static final MemoryLayout _QUOTA_LIMITS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("PagedPoolLimit"),
        C_LONGLONG.withName("NonPagedPoolLimit"),
        C_LONGLONG.withName("MinimumWorkingSetSize"),
        C_LONGLONG.withName("MaximumWorkingSetSize"),
        C_LONGLONG.withName("PagefileLimit"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("TimeLimit")
    ).withName("_QUOTA_LIMITS");
    static final jdk.incubator.foreign.MemoryLayout _QUOTA_LIMITS$struct$LAYOUT() { return _QUOTA_LIMITS$struct$LAYOUT_; }

    static final MemoryLayout _QUOTA_LIMITS$PagedPoolLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _QUOTA_LIMITS$PagedPoolLimit$LAYOUT() { return _QUOTA_LIMITS$PagedPoolLimit$LAYOUT_; }

    static final VarHandle _QUOTA_LIMITS$PagedPoolLimit$VH_ = _QUOTA_LIMITS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("PagedPoolLimit"));
    static final java.lang.invoke.VarHandle _QUOTA_LIMITS$PagedPoolLimit$VH() { return _QUOTA_LIMITS$PagedPoolLimit$VH_; }

    static final MemoryLayout _QUOTA_LIMITS$NonPagedPoolLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _QUOTA_LIMITS$NonPagedPoolLimit$LAYOUT() { return _QUOTA_LIMITS$NonPagedPoolLimit$LAYOUT_; }

    static final VarHandle _QUOTA_LIMITS$NonPagedPoolLimit$VH_ = _QUOTA_LIMITS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("NonPagedPoolLimit"));
    static final java.lang.invoke.VarHandle _QUOTA_LIMITS$NonPagedPoolLimit$VH() { return _QUOTA_LIMITS$NonPagedPoolLimit$VH_; }

    static final MemoryLayout _QUOTA_LIMITS$MinimumWorkingSetSize$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _QUOTA_LIMITS$MinimumWorkingSetSize$LAYOUT() { return _QUOTA_LIMITS$MinimumWorkingSetSize$LAYOUT_; }

    static final VarHandle _QUOTA_LIMITS$MinimumWorkingSetSize$VH_ = _QUOTA_LIMITS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MinimumWorkingSetSize"));
    static final java.lang.invoke.VarHandle _QUOTA_LIMITS$MinimumWorkingSetSize$VH() { return _QUOTA_LIMITS$MinimumWorkingSetSize$VH_; }

    static final MemoryLayout _QUOTA_LIMITS$MaximumWorkingSetSize$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _QUOTA_LIMITS$MaximumWorkingSetSize$LAYOUT() { return _QUOTA_LIMITS$MaximumWorkingSetSize$LAYOUT_; }

    static final VarHandle _QUOTA_LIMITS$MaximumWorkingSetSize$VH_ = _QUOTA_LIMITS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaximumWorkingSetSize"));
    static final java.lang.invoke.VarHandle _QUOTA_LIMITS$MaximumWorkingSetSize$VH() { return _QUOTA_LIMITS$MaximumWorkingSetSize$VH_; }

    static final MemoryLayout _QUOTA_LIMITS$PagefileLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _QUOTA_LIMITS$PagefileLimit$LAYOUT() { return _QUOTA_LIMITS$PagefileLimit$LAYOUT_; }

    static final VarHandle _QUOTA_LIMITS$PagefileLimit$VH_ = _QUOTA_LIMITS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("PagefileLimit"));
    static final java.lang.invoke.VarHandle _QUOTA_LIMITS$PagefileLimit$VH() { return _QUOTA_LIMITS$PagefileLimit$VH_; }

    static final MemoryLayout _RATE_QUOTA_LIMIT$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONG.withName("RateData"),
        C_INT
    ).withName("_RATE_QUOTA_LIMIT");
    static final jdk.incubator.foreign.MemoryLayout _RATE_QUOTA_LIMIT$union$LAYOUT() { return _RATE_QUOTA_LIMIT$union$LAYOUT_; }

    static final MemoryLayout _RATE_QUOTA_LIMIT$RateData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RATE_QUOTA_LIMIT$RateData$LAYOUT() { return _RATE_QUOTA_LIMIT$RateData$LAYOUT_; }

    static final VarHandle _RATE_QUOTA_LIMIT$RateData$VH_ = _RATE_QUOTA_LIMIT$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RateData"));
    static final java.lang.invoke.VarHandle _RATE_QUOTA_LIMIT$RateData$VH() { return _RATE_QUOTA_LIMIT$RateData$VH_; }

    static final MemoryLayout _QUOTA_LIMITS_EX$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("PagedPoolLimit"),
        C_LONGLONG.withName("NonPagedPoolLimit"),
        C_LONGLONG.withName("MinimumWorkingSetSize"),
        C_LONGLONG.withName("MaximumWorkingSetSize"),
        C_LONGLONG.withName("PagefileLimit"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("TimeLimit"),
        C_LONGLONG.withName("WorkingSetLimit"),
        C_LONGLONG.withName("Reserved2"),
        C_LONGLONG.withName("Reserved3"),
        C_LONGLONG.withName("Reserved4"),
        C_LONG.withName("Flags"),
        MemoryLayout.ofUnion(
            C_LONG.withName("RateData"),
            C_INT
        ).withName("CpuRateLimit")
    ).withName("_QUOTA_LIMITS_EX");
    static final jdk.incubator.foreign.MemoryLayout _QUOTA_LIMITS_EX$struct$LAYOUT() { return _QUOTA_LIMITS_EX$struct$LAYOUT_; }

    static final MemoryLayout _QUOTA_LIMITS_EX$PagedPoolLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _QUOTA_LIMITS_EX$PagedPoolLimit$LAYOUT() { return _QUOTA_LIMITS_EX$PagedPoolLimit$LAYOUT_; }

    static final VarHandle _QUOTA_LIMITS_EX$PagedPoolLimit$VH_ = _QUOTA_LIMITS_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("PagedPoolLimit"));
    static final java.lang.invoke.VarHandle _QUOTA_LIMITS_EX$PagedPoolLimit$VH() { return _QUOTA_LIMITS_EX$PagedPoolLimit$VH_; }

    static final MemoryLayout _QUOTA_LIMITS_EX$NonPagedPoolLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _QUOTA_LIMITS_EX$NonPagedPoolLimit$LAYOUT() { return _QUOTA_LIMITS_EX$NonPagedPoolLimit$LAYOUT_; }

    static final VarHandle _QUOTA_LIMITS_EX$NonPagedPoolLimit$VH_ = _QUOTA_LIMITS_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("NonPagedPoolLimit"));
    static final java.lang.invoke.VarHandle _QUOTA_LIMITS_EX$NonPagedPoolLimit$VH() { return _QUOTA_LIMITS_EX$NonPagedPoolLimit$VH_; }

    static final MemoryLayout _QUOTA_LIMITS_EX$MinimumWorkingSetSize$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _QUOTA_LIMITS_EX$MinimumWorkingSetSize$LAYOUT() { return _QUOTA_LIMITS_EX$MinimumWorkingSetSize$LAYOUT_; }

    static final VarHandle _QUOTA_LIMITS_EX$MinimumWorkingSetSize$VH_ = _QUOTA_LIMITS_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MinimumWorkingSetSize"));
    static final java.lang.invoke.VarHandle _QUOTA_LIMITS_EX$MinimumWorkingSetSize$VH() { return _QUOTA_LIMITS_EX$MinimumWorkingSetSize$VH_; }

    static final MemoryLayout _QUOTA_LIMITS_EX$MaximumWorkingSetSize$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _QUOTA_LIMITS_EX$MaximumWorkingSetSize$LAYOUT() { return _QUOTA_LIMITS_EX$MaximumWorkingSetSize$LAYOUT_; }

    static final VarHandle _QUOTA_LIMITS_EX$MaximumWorkingSetSize$VH_ = _QUOTA_LIMITS_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaximumWorkingSetSize"));
    static final java.lang.invoke.VarHandle _QUOTA_LIMITS_EX$MaximumWorkingSetSize$VH() { return _QUOTA_LIMITS_EX$MaximumWorkingSetSize$VH_; }

    static final MemoryLayout _QUOTA_LIMITS_EX$PagefileLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _QUOTA_LIMITS_EX$PagefileLimit$LAYOUT() { return _QUOTA_LIMITS_EX$PagefileLimit$LAYOUT_; }

    static final VarHandle _QUOTA_LIMITS_EX$PagefileLimit$VH_ = _QUOTA_LIMITS_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("PagefileLimit"));
    static final java.lang.invoke.VarHandle _QUOTA_LIMITS_EX$PagefileLimit$VH() { return _QUOTA_LIMITS_EX$PagefileLimit$VH_; }

    static final MemoryLayout _QUOTA_LIMITS_EX$WorkingSetLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _QUOTA_LIMITS_EX$WorkingSetLimit$LAYOUT() { return _QUOTA_LIMITS_EX$WorkingSetLimit$LAYOUT_; }

    static final VarHandle _QUOTA_LIMITS_EX$WorkingSetLimit$VH_ = _QUOTA_LIMITS_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("WorkingSetLimit"));
    static final java.lang.invoke.VarHandle _QUOTA_LIMITS_EX$WorkingSetLimit$VH() { return _QUOTA_LIMITS_EX$WorkingSetLimit$VH_; }

    static final MemoryLayout _QUOTA_LIMITS_EX$Reserved2$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _QUOTA_LIMITS_EX$Reserved2$LAYOUT() { return _QUOTA_LIMITS_EX$Reserved2$LAYOUT_; }

    static final VarHandle _QUOTA_LIMITS_EX$Reserved2$VH_ = _QUOTA_LIMITS_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Reserved2"));
    static final java.lang.invoke.VarHandle _QUOTA_LIMITS_EX$Reserved2$VH() { return _QUOTA_LIMITS_EX$Reserved2$VH_; }

    static final MemoryLayout _QUOTA_LIMITS_EX$Reserved3$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _QUOTA_LIMITS_EX$Reserved3$LAYOUT() { return _QUOTA_LIMITS_EX$Reserved3$LAYOUT_; }

    static final VarHandle _QUOTA_LIMITS_EX$Reserved3$VH_ = _QUOTA_LIMITS_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Reserved3"));
    static final java.lang.invoke.VarHandle _QUOTA_LIMITS_EX$Reserved3$VH() { return _QUOTA_LIMITS_EX$Reserved3$VH_; }

    static final MemoryLayout _QUOTA_LIMITS_EX$Reserved4$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _QUOTA_LIMITS_EX$Reserved4$LAYOUT() { return _QUOTA_LIMITS_EX$Reserved4$LAYOUT_; }

    static final VarHandle _QUOTA_LIMITS_EX$Reserved4$VH_ = _QUOTA_LIMITS_EX$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Reserved4"));
    static final java.lang.invoke.VarHandle _QUOTA_LIMITS_EX$Reserved4$VH() { return _QUOTA_LIMITS_EX$Reserved4$VH_; }

    static final MemoryLayout _QUOTA_LIMITS_EX$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _QUOTA_LIMITS_EX$Flags$LAYOUT() { return _QUOTA_LIMITS_EX$Flags$LAYOUT_; }

    static final VarHandle _QUOTA_LIMITS_EX$Flags$VH_ = _QUOTA_LIMITS_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _QUOTA_LIMITS_EX$Flags$VH() { return _QUOTA_LIMITS_EX$Flags$VH_; }

    static final MemoryLayout _IO_COUNTERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("ReadOperationCount"),
        C_LONGLONG.withName("WriteOperationCount"),
        C_LONGLONG.withName("OtherOperationCount"),
        C_LONGLONG.withName("ReadTransferCount"),
        C_LONGLONG.withName("WriteTransferCount"),
        C_LONGLONG.withName("OtherTransferCount")
    ).withName("_IO_COUNTERS");
    static final jdk.incubator.foreign.MemoryLayout _IO_COUNTERS$struct$LAYOUT() { return _IO_COUNTERS$struct$LAYOUT_; }

    static final MemoryLayout _IO_COUNTERS$ReadOperationCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IO_COUNTERS$ReadOperationCount$LAYOUT() { return _IO_COUNTERS$ReadOperationCount$LAYOUT_; }

    static final VarHandle _IO_COUNTERS$ReadOperationCount$VH_ = _IO_COUNTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReadOperationCount"));
    static final java.lang.invoke.VarHandle _IO_COUNTERS$ReadOperationCount$VH() { return _IO_COUNTERS$ReadOperationCount$VH_; }

    static final MemoryLayout _IO_COUNTERS$WriteOperationCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IO_COUNTERS$WriteOperationCount$LAYOUT() { return _IO_COUNTERS$WriteOperationCount$LAYOUT_; }

    static final VarHandle _IO_COUNTERS$WriteOperationCount$VH_ = _IO_COUNTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("WriteOperationCount"));
    static final java.lang.invoke.VarHandle _IO_COUNTERS$WriteOperationCount$VH() { return _IO_COUNTERS$WriteOperationCount$VH_; }

    static final MemoryLayout _IO_COUNTERS$OtherOperationCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IO_COUNTERS$OtherOperationCount$LAYOUT() { return _IO_COUNTERS$OtherOperationCount$LAYOUT_; }

    static final VarHandle _IO_COUNTERS$OtherOperationCount$VH_ = _IO_COUNTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OtherOperationCount"));
    static final java.lang.invoke.VarHandle _IO_COUNTERS$OtherOperationCount$VH() { return _IO_COUNTERS$OtherOperationCount$VH_; }

    static final MemoryLayout _IO_COUNTERS$ReadTransferCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IO_COUNTERS$ReadTransferCount$LAYOUT() { return _IO_COUNTERS$ReadTransferCount$LAYOUT_; }

    static final VarHandle _IO_COUNTERS$ReadTransferCount$VH_ = _IO_COUNTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReadTransferCount"));
    static final java.lang.invoke.VarHandle _IO_COUNTERS$ReadTransferCount$VH() { return _IO_COUNTERS$ReadTransferCount$VH_; }

    static final MemoryLayout _IO_COUNTERS$WriteTransferCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IO_COUNTERS$WriteTransferCount$LAYOUT() { return _IO_COUNTERS$WriteTransferCount$LAYOUT_; }

    static final VarHandle _IO_COUNTERS$WriteTransferCount$VH_ = _IO_COUNTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("WriteTransferCount"));
    static final java.lang.invoke.VarHandle _IO_COUNTERS$WriteTransferCount$VH() { return _IO_COUNTERS$WriteTransferCount$VH_; }

    static final MemoryLayout _IO_COUNTERS$OtherTransferCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IO_COUNTERS$OtherTransferCount$LAYOUT() { return _IO_COUNTERS$OtherTransferCount$LAYOUT_; }

    static final VarHandle _IO_COUNTERS$OtherTransferCount$VH_ = _IO_COUNTERS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OtherTransferCount"));
    static final java.lang.invoke.VarHandle _IO_COUNTERS$OtherTransferCount$VH() { return _IO_COUNTERS$OtherTransferCount$VH_; }

    static final int PMCCounter() { return (int)0L; }

    static final int MaxHardwareCounterType() { return (int)1L; }

    static final int ProcessDEPPolicy() { return (int)0L; }

    static final int ProcessASLRPolicy() { return (int)1L; }

    static final int ProcessDynamicCodePolicy() { return (int)2L; }

    static final int ProcessStrictHandleCheckPolicy() { return (int)3L; }

    static final int ProcessSystemCallDisablePolicy() { return (int)4L; }

    static final int ProcessMitigationOptionsMask() { return (int)5L; }

    static final int ProcessExtensionPointDisablePolicy() { return (int)6L; }

    static final int ProcessControlFlowGuardPolicy() { return (int)7L; }

    static final int ProcessSignaturePolicy() { return (int)8L; }

    static final int ProcessFontDisablePolicy() { return (int)9L; }

    static final int ProcessImageLoadPolicy() { return (int)10L; }

    static final int ProcessSystemCallFilterPolicy() { return (int)11L; }

    static final int ProcessPayloadRestrictionPolicy() { return (int)12L; }

    static final int ProcessChildProcessPolicy() { return (int)13L; }

    static final int ProcessSideChannelIsolationPolicy() { return (int)14L; }

    static final int ProcessUserShadowStackPolicy() { return (int)15L; }

    static final int MaxProcessMitigationPolicy() { return (int)16L; }

    static final MemoryLayout _PROCESS_MITIGATION_ASLR_POLICY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        C_INT
    ).withName("_PROCESS_MITIGATION_ASLR_POLICY");
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_ASLR_POLICY$struct$LAYOUT() { return _PROCESS_MITIGATION_ASLR_POLICY$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_MITIGATION_ASLR_POLICY$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_ASLR_POLICY$Flags$LAYOUT() { return _PROCESS_MITIGATION_ASLR_POLICY$Flags$LAYOUT_; }

    static final VarHandle _PROCESS_MITIGATION_ASLR_POLICY$Flags$VH_ = _PROCESS_MITIGATION_ASLR_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PROCESS_MITIGATION_ASLR_POLICY$Flags$VH() { return _PROCESS_MITIGATION_ASLR_POLICY$Flags$VH_; }

    static final MemoryLayout _PROCESS_MITIGATION_DEP_POLICY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        C_INT,
        C_CHAR.withName("Permanent"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_PROCESS_MITIGATION_DEP_POLICY");
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_DEP_POLICY$struct$LAYOUT() { return _PROCESS_MITIGATION_DEP_POLICY$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_MITIGATION_DEP_POLICY$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_DEP_POLICY$Flags$LAYOUT() { return _PROCESS_MITIGATION_DEP_POLICY$Flags$LAYOUT_; }

    static final VarHandle _PROCESS_MITIGATION_DEP_POLICY$Flags$VH_ = _PROCESS_MITIGATION_DEP_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PROCESS_MITIGATION_DEP_POLICY$Flags$VH() { return _PROCESS_MITIGATION_DEP_POLICY$Flags$VH_; }

    static final MemoryLayout _PROCESS_MITIGATION_DEP_POLICY$Permanent$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_DEP_POLICY$Permanent$LAYOUT() { return _PROCESS_MITIGATION_DEP_POLICY$Permanent$LAYOUT_; }

    static final VarHandle _PROCESS_MITIGATION_DEP_POLICY$Permanent$VH_ = _PROCESS_MITIGATION_DEP_POLICY$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Permanent"));
    static final java.lang.invoke.VarHandle _PROCESS_MITIGATION_DEP_POLICY$Permanent$VH() { return _PROCESS_MITIGATION_DEP_POLICY$Permanent$VH_; }

    static final MemoryLayout _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        C_INT
    ).withName("_PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY");
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY$struct$LAYOUT() { return _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY$Flags$LAYOUT() { return _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY$Flags$LAYOUT_; }

    static final VarHandle _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY$Flags$VH_ = _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY$Flags$VH() { return _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY$Flags$VH_; }

    static final MemoryLayout _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        C_INT
    ).withName("_PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY");
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY$struct$LAYOUT() { return _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY$Flags$LAYOUT() { return _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY$Flags$LAYOUT_; }

    static final VarHandle _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY$Flags$VH_ = _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY$Flags$VH() { return _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY$Flags$VH_; }

    static final MemoryLayout _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        C_INT
    ).withName("_PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY");
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY$struct$LAYOUT() { return _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY$Flags$LAYOUT() { return _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY$Flags$LAYOUT_; }

    static final VarHandle _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY$Flags$VH_ = _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY$Flags$VH() { return _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY$Flags$VH_; }

    static final MemoryLayout _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        C_INT
    ).withName("_PROCESS_MITIGATION_DYNAMIC_CODE_POLICY");
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY$struct$LAYOUT() { return _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY$Flags$LAYOUT() { return _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY$Flags$LAYOUT_; }

    static final VarHandle _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY$Flags$VH_ = _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY$Flags$VH() { return _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY$Flags$VH_; }

    static final MemoryLayout _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        C_INT
    ).withName("_PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY");
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY$struct$LAYOUT() { return _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY$Flags$LAYOUT() { return _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY$Flags$LAYOUT_; }

    static final VarHandle _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY$Flags$VH_ = _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY$Flags$VH() { return _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY$Flags$VH_; }

    static final MemoryLayout _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        C_INT
    ).withName("_PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY");
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY$struct$LAYOUT() { return _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY$Flags$LAYOUT() { return _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY$Flags$LAYOUT_; }

    static final VarHandle _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY$Flags$VH_ = _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY$Flags$VH() { return _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY$Flags$VH_; }

    static final MemoryLayout _PROCESS_MITIGATION_FONT_DISABLE_POLICY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        C_INT
    ).withName("_PROCESS_MITIGATION_FONT_DISABLE_POLICY");
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_FONT_DISABLE_POLICY$struct$LAYOUT() { return _PROCESS_MITIGATION_FONT_DISABLE_POLICY$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_MITIGATION_FONT_DISABLE_POLICY$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_FONT_DISABLE_POLICY$Flags$LAYOUT() { return _PROCESS_MITIGATION_FONT_DISABLE_POLICY$Flags$LAYOUT_; }

    static final VarHandle _PROCESS_MITIGATION_FONT_DISABLE_POLICY$Flags$VH_ = _PROCESS_MITIGATION_FONT_DISABLE_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PROCESS_MITIGATION_FONT_DISABLE_POLICY$Flags$VH() { return _PROCESS_MITIGATION_FONT_DISABLE_POLICY$Flags$VH_; }

    static final MemoryLayout _PROCESS_MITIGATION_IMAGE_LOAD_POLICY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        C_INT
    ).withName("_PROCESS_MITIGATION_IMAGE_LOAD_POLICY");
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_IMAGE_LOAD_POLICY$struct$LAYOUT() { return _PROCESS_MITIGATION_IMAGE_LOAD_POLICY$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_MITIGATION_IMAGE_LOAD_POLICY$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_IMAGE_LOAD_POLICY$Flags$LAYOUT() { return _PROCESS_MITIGATION_IMAGE_LOAD_POLICY$Flags$LAYOUT_; }

    static final VarHandle _PROCESS_MITIGATION_IMAGE_LOAD_POLICY$Flags$VH_ = _PROCESS_MITIGATION_IMAGE_LOAD_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PROCESS_MITIGATION_IMAGE_LOAD_POLICY$Flags$VH() { return _PROCESS_MITIGATION_IMAGE_LOAD_POLICY$Flags$VH_; }

    static final MemoryLayout _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        C_INT
    ).withName("_PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY");
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY$struct$LAYOUT() { return _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY$Flags$LAYOUT() { return _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY$Flags$LAYOUT_; }

    static final VarHandle _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY$Flags$VH_ = _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY$Flags$VH() { return _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY$Flags$VH_; }

    static final MemoryLayout _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        C_INT
    ).withName("_PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY");
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY$struct$LAYOUT() { return _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY$Flags$LAYOUT() { return _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY$Flags$LAYOUT_; }

    static final VarHandle _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY$Flags$VH_ = _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY$Flags$VH() { return _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY$Flags$VH_; }

    static final MemoryLayout _PROCESS_MITIGATION_CHILD_PROCESS_POLICY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        C_INT
    ).withName("_PROCESS_MITIGATION_CHILD_PROCESS_POLICY");
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_CHILD_PROCESS_POLICY$struct$LAYOUT() { return _PROCESS_MITIGATION_CHILD_PROCESS_POLICY$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_MITIGATION_CHILD_PROCESS_POLICY$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_CHILD_PROCESS_POLICY$Flags$LAYOUT() { return _PROCESS_MITIGATION_CHILD_PROCESS_POLICY$Flags$LAYOUT_; }

    static final VarHandle _PROCESS_MITIGATION_CHILD_PROCESS_POLICY$Flags$VH_ = _PROCESS_MITIGATION_CHILD_PROCESS_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PROCESS_MITIGATION_CHILD_PROCESS_POLICY$Flags$VH() { return _PROCESS_MITIGATION_CHILD_PROCESS_POLICY$Flags$VH_; }

    static final MemoryLayout _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        C_INT
    ).withName("_PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY");
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY$struct$LAYOUT() { return _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY$Flags$LAYOUT() { return _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY$Flags$LAYOUT_; }

    static final VarHandle _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY$Flags$VH_ = _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY$Flags$VH() { return _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY$Flags$VH_; }

    static final MemoryLayout _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags"),
        C_INT
    ).withName("_PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY");
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY$struct$LAYOUT() { return _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY$struct$LAYOUT_; }

    static final MemoryLayout _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY$Flags$LAYOUT() { return _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY$Flags$LAYOUT_; }

    static final VarHandle _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY$Flags$VH_ = _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY$Flags$VH() { return _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY$Flags$VH_; }

    static final MemoryLayout _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("TotalUserTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("TotalKernelTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("ThisPeriodTotalUserTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("ThisPeriodTotalKernelTime"),
        C_LONG.withName("TotalPageFaultCount"),
        C_LONG.withName("TotalProcesses"),
        C_LONG.withName("ActiveProcesses"),
        C_LONG.withName("TotalTerminatedProcesses")
    ).withName("_JOBOBJECT_BASIC_ACCOUNTING_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$struct$LAYOUT() { return _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalPageFaultCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalPageFaultCount$LAYOUT() { return _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalPageFaultCount$LAYOUT_; }

    static final VarHandle _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalPageFaultCount$VH_ = _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TotalPageFaultCount"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalPageFaultCount$VH() { return _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalPageFaultCount$VH_; }

    static final MemoryLayout _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalProcesses$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalProcesses$LAYOUT() { return _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalProcesses$LAYOUT_; }

    static final VarHandle _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalProcesses$VH_ = _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TotalProcesses"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalProcesses$VH() { return _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalProcesses$VH_; }

    static final MemoryLayout _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$ActiveProcesses$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$ActiveProcesses$LAYOUT() { return _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$ActiveProcesses$LAYOUT_; }

    static final VarHandle _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$ActiveProcesses$VH_ = _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ActiveProcesses"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$ActiveProcesses$VH() { return _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$ActiveProcesses$VH_; }

    static final MemoryLayout _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalTerminatedProcesses$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalTerminatedProcesses$LAYOUT() { return _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalTerminatedProcesses$LAYOUT_; }

    static final VarHandle _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalTerminatedProcesses$VH_ = _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TotalTerminatedProcesses"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalTerminatedProcesses$VH() { return _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION$TotalTerminatedProcesses$VH_; }

    static final MemoryLayout _JOBOBJECT_BASIC_LIMIT_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("PerProcessUserTimeLimit"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("PerJobUserTimeLimit"),
        C_LONG.withName("LimitFlags"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("MinimumWorkingSetSize"),
        C_LONGLONG.withName("MaximumWorkingSetSize"),
        C_LONG.withName("ActiveProcessLimit"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("Affinity"),
        C_LONG.withName("PriorityClass"),
        C_LONG.withName("SchedulingClass")
    ).withName("_JOBOBJECT_BASIC_LIMIT_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_LIMIT_INFORMATION$struct$LAYOUT() { return _JOBOBJECT_BASIC_LIMIT_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _JOBOBJECT_BASIC_LIMIT_INFORMATION$LimitFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_LIMIT_INFORMATION$LimitFlags$LAYOUT() { return _JOBOBJECT_BASIC_LIMIT_INFORMATION$LimitFlags$LAYOUT_; }

    static final VarHandle _JOBOBJECT_BASIC_LIMIT_INFORMATION$LimitFlags$VH_ = _JOBOBJECT_BASIC_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LimitFlags"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_BASIC_LIMIT_INFORMATION$LimitFlags$VH() { return _JOBOBJECT_BASIC_LIMIT_INFORMATION$LimitFlags$VH_; }

    static final MemoryLayout _JOBOBJECT_BASIC_LIMIT_INFORMATION$MinimumWorkingSetSize$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_LIMIT_INFORMATION$MinimumWorkingSetSize$LAYOUT() { return _JOBOBJECT_BASIC_LIMIT_INFORMATION$MinimumWorkingSetSize$LAYOUT_; }

    static final VarHandle _JOBOBJECT_BASIC_LIMIT_INFORMATION$MinimumWorkingSetSize$VH_ = _JOBOBJECT_BASIC_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MinimumWorkingSetSize"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_BASIC_LIMIT_INFORMATION$MinimumWorkingSetSize$VH() { return _JOBOBJECT_BASIC_LIMIT_INFORMATION$MinimumWorkingSetSize$VH_; }

    static final MemoryLayout _JOBOBJECT_BASIC_LIMIT_INFORMATION$MaximumWorkingSetSize$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_LIMIT_INFORMATION$MaximumWorkingSetSize$LAYOUT() { return _JOBOBJECT_BASIC_LIMIT_INFORMATION$MaximumWorkingSetSize$LAYOUT_; }

    static final VarHandle _JOBOBJECT_BASIC_LIMIT_INFORMATION$MaximumWorkingSetSize$VH_ = _JOBOBJECT_BASIC_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaximumWorkingSetSize"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_BASIC_LIMIT_INFORMATION$MaximumWorkingSetSize$VH() { return _JOBOBJECT_BASIC_LIMIT_INFORMATION$MaximumWorkingSetSize$VH_; }

    static final MemoryLayout _JOBOBJECT_BASIC_LIMIT_INFORMATION$ActiveProcessLimit$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_LIMIT_INFORMATION$ActiveProcessLimit$LAYOUT() { return _JOBOBJECT_BASIC_LIMIT_INFORMATION$ActiveProcessLimit$LAYOUT_; }

    static final VarHandle _JOBOBJECT_BASIC_LIMIT_INFORMATION$ActiveProcessLimit$VH_ = _JOBOBJECT_BASIC_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ActiveProcessLimit"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_BASIC_LIMIT_INFORMATION$ActiveProcessLimit$VH() { return _JOBOBJECT_BASIC_LIMIT_INFORMATION$ActiveProcessLimit$VH_; }

    static final MemoryLayout _JOBOBJECT_BASIC_LIMIT_INFORMATION$Affinity$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_LIMIT_INFORMATION$Affinity$LAYOUT() { return _JOBOBJECT_BASIC_LIMIT_INFORMATION$Affinity$LAYOUT_; }

    static final VarHandle _JOBOBJECT_BASIC_LIMIT_INFORMATION$Affinity$VH_ = _JOBOBJECT_BASIC_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Affinity"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_BASIC_LIMIT_INFORMATION$Affinity$VH() { return _JOBOBJECT_BASIC_LIMIT_INFORMATION$Affinity$VH_; }

    static final MemoryLayout _JOBOBJECT_BASIC_LIMIT_INFORMATION$PriorityClass$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_LIMIT_INFORMATION$PriorityClass$LAYOUT() { return _JOBOBJECT_BASIC_LIMIT_INFORMATION$PriorityClass$LAYOUT_; }

    static final VarHandle _JOBOBJECT_BASIC_LIMIT_INFORMATION$PriorityClass$VH_ = _JOBOBJECT_BASIC_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PriorityClass"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_BASIC_LIMIT_INFORMATION$PriorityClass$VH() { return _JOBOBJECT_BASIC_LIMIT_INFORMATION$PriorityClass$VH_; }

    static final MemoryLayout _JOBOBJECT_BASIC_LIMIT_INFORMATION$SchedulingClass$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_LIMIT_INFORMATION$SchedulingClass$LAYOUT() { return _JOBOBJECT_BASIC_LIMIT_INFORMATION$SchedulingClass$LAYOUT_; }

    static final VarHandle _JOBOBJECT_BASIC_LIMIT_INFORMATION$SchedulingClass$VH_ = _JOBOBJECT_BASIC_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SchedulingClass"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_BASIC_LIMIT_INFORMATION$SchedulingClass$VH() { return _JOBOBJECT_BASIC_LIMIT_INFORMATION$SchedulingClass$VH_; }

    static final MemoryLayout _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            MemoryLayout.ofUnion(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("LowPart"),
                    C_LONG.withName("HighPart")
                ).withName("u"),
                C_LONGLONG.withName("QuadPart")
            ).withName("PerProcessUserTimeLimit"),
            MemoryLayout.ofUnion(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("LowPart"),
                    C_LONG.withName("HighPart")
                ).withName("u"),
                C_LONGLONG.withName("QuadPart")
            ).withName("PerJobUserTimeLimit"),
            C_LONG.withName("LimitFlags"),
            MemoryLayout.ofPaddingBits(32),
            C_LONGLONG.withName("MinimumWorkingSetSize"),
            C_LONGLONG.withName("MaximumWorkingSetSize"),
            C_LONG.withName("ActiveProcessLimit"),
            MemoryLayout.ofPaddingBits(32),
            C_LONGLONG.withName("Affinity"),
            C_LONG.withName("PriorityClass"),
            C_LONG.withName("SchedulingClass")
        ).withName("BasicLimitInformation"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("ReadOperationCount"),
            C_LONGLONG.withName("WriteOperationCount"),
            C_LONGLONG.withName("OtherOperationCount"),
            C_LONGLONG.withName("ReadTransferCount"),
            C_LONGLONG.withName("WriteTransferCount"),
            C_LONGLONG.withName("OtherTransferCount")
        ).withName("IoInfo"),
        C_LONGLONG.withName("ProcessMemoryLimit"),
        C_LONGLONG.withName("JobMemoryLimit"),
        C_LONGLONG.withName("PeakProcessMemoryUsed"),
        C_LONGLONG.withName("PeakJobMemoryUsed")
    ).withName("_JOBOBJECT_EXTENDED_LIMIT_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$struct$LAYOUT() { return _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$ProcessMemoryLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$ProcessMemoryLimit$LAYOUT() { return _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$ProcessMemoryLimit$LAYOUT_; }

    static final VarHandle _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$ProcessMemoryLimit$VH_ = _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ProcessMemoryLimit"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$ProcessMemoryLimit$VH() { return _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$ProcessMemoryLimit$VH_; }

    static final MemoryLayout _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$JobMemoryLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$JobMemoryLimit$LAYOUT() { return _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$JobMemoryLimit$LAYOUT_; }

    static final VarHandle _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$JobMemoryLimit$VH_ = _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("JobMemoryLimit"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$JobMemoryLimit$VH() { return _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$JobMemoryLimit$VH_; }

    static final MemoryLayout _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$PeakProcessMemoryUsed$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$PeakProcessMemoryUsed$LAYOUT() { return _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$PeakProcessMemoryUsed$LAYOUT_; }

    static final VarHandle _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$PeakProcessMemoryUsed$VH_ = _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("PeakProcessMemoryUsed"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$PeakProcessMemoryUsed$VH() { return _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$PeakProcessMemoryUsed$VH_; }

    static final MemoryLayout _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$PeakJobMemoryUsed$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$PeakJobMemoryUsed$LAYOUT() { return _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$PeakJobMemoryUsed$LAYOUT_; }

    static final VarHandle _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$PeakJobMemoryUsed$VH_ = _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("PeakJobMemoryUsed"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$PeakJobMemoryUsed$VH() { return _JOBOBJECT_EXTENDED_LIMIT_INFORMATION$PeakJobMemoryUsed$VH_; }

    static final MemoryLayout _JOBOBJECT_BASIC_PROCESS_ID_LIST$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("NumberOfAssignedProcesses"),
        C_LONG.withName("NumberOfProcessIdsInList"),
        MemoryLayout.ofSequence(1, C_LONGLONG).withName("ProcessIdList")
    ).withName("_JOBOBJECT_BASIC_PROCESS_ID_LIST");
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_PROCESS_ID_LIST$struct$LAYOUT() { return _JOBOBJECT_BASIC_PROCESS_ID_LIST$struct$LAYOUT_; }

    static final MemoryLayout _JOBOBJECT_BASIC_PROCESS_ID_LIST$NumberOfAssignedProcesses$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_PROCESS_ID_LIST$NumberOfAssignedProcesses$LAYOUT() { return _JOBOBJECT_BASIC_PROCESS_ID_LIST$NumberOfAssignedProcesses$LAYOUT_; }

    static final VarHandle _JOBOBJECT_BASIC_PROCESS_ID_LIST$NumberOfAssignedProcesses$VH_ = _JOBOBJECT_BASIC_PROCESS_ID_LIST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfAssignedProcesses"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_BASIC_PROCESS_ID_LIST$NumberOfAssignedProcesses$VH() { return _JOBOBJECT_BASIC_PROCESS_ID_LIST$NumberOfAssignedProcesses$VH_; }

    static final MemoryLayout _JOBOBJECT_BASIC_PROCESS_ID_LIST$NumberOfProcessIdsInList$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_PROCESS_ID_LIST$NumberOfProcessIdsInList$LAYOUT() { return _JOBOBJECT_BASIC_PROCESS_ID_LIST$NumberOfProcessIdsInList$LAYOUT_; }

    static final VarHandle _JOBOBJECT_BASIC_PROCESS_ID_LIST$NumberOfProcessIdsInList$VH_ = _JOBOBJECT_BASIC_PROCESS_ID_LIST$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfProcessIdsInList"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_BASIC_PROCESS_ID_LIST$NumberOfProcessIdsInList$VH() { return _JOBOBJECT_BASIC_PROCESS_ID_LIST$NumberOfProcessIdsInList$VH_; }

    static final MemoryLayout _JOBOBJECT_BASIC_UI_RESTRICTIONS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("UIRestrictionsClass")
    ).withName("_JOBOBJECT_BASIC_UI_RESTRICTIONS");
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_UI_RESTRICTIONS$struct$LAYOUT() { return _JOBOBJECT_BASIC_UI_RESTRICTIONS$struct$LAYOUT_; }

    static final MemoryLayout _JOBOBJECT_BASIC_UI_RESTRICTIONS$UIRestrictionsClass$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_UI_RESTRICTIONS$UIRestrictionsClass$LAYOUT() { return _JOBOBJECT_BASIC_UI_RESTRICTIONS$UIRestrictionsClass$LAYOUT_; }

    static final VarHandle _JOBOBJECT_BASIC_UI_RESTRICTIONS$UIRestrictionsClass$VH_ = _JOBOBJECT_BASIC_UI_RESTRICTIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UIRestrictionsClass"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_BASIC_UI_RESTRICTIONS$UIRestrictionsClass$VH() { return _JOBOBJECT_BASIC_UI_RESTRICTIONS$UIRestrictionsClass$VH_; }

    static final MemoryLayout _JOBOBJECT_SECURITY_LIMIT_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("SecurityLimitFlags"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("JobToken"),
        C_POINTER.withName("SidsToDisable"),
        C_POINTER.withName("PrivilegesToDelete"),
        C_POINTER.withName("RestrictedSids")
    ).withName("_JOBOBJECT_SECURITY_LIMIT_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_SECURITY_LIMIT_INFORMATION$struct$LAYOUT() { return _JOBOBJECT_SECURITY_LIMIT_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _JOBOBJECT_SECURITY_LIMIT_INFORMATION$SecurityLimitFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_SECURITY_LIMIT_INFORMATION$SecurityLimitFlags$LAYOUT() { return _JOBOBJECT_SECURITY_LIMIT_INFORMATION$SecurityLimitFlags$LAYOUT_; }

    static final VarHandle _JOBOBJECT_SECURITY_LIMIT_INFORMATION$SecurityLimitFlags$VH_ = _JOBOBJECT_SECURITY_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SecurityLimitFlags"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_SECURITY_LIMIT_INFORMATION$SecurityLimitFlags$VH() { return _JOBOBJECT_SECURITY_LIMIT_INFORMATION$SecurityLimitFlags$VH_; }

    static final MemoryLayout _JOBOBJECT_SECURITY_LIMIT_INFORMATION$JobToken$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_SECURITY_LIMIT_INFORMATION$JobToken$LAYOUT() { return _JOBOBJECT_SECURITY_LIMIT_INFORMATION$JobToken$LAYOUT_; }

    static final VarHandle _JOBOBJECT_SECURITY_LIMIT_INFORMATION$JobToken$VH_ = MemoryHandles.asAddressVarHandle(_JOBOBJECT_SECURITY_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("JobToken")));
    static final java.lang.invoke.VarHandle _JOBOBJECT_SECURITY_LIMIT_INFORMATION$JobToken$VH() { return _JOBOBJECT_SECURITY_LIMIT_INFORMATION$JobToken$VH_; }

    static final MemoryLayout _JOBOBJECT_SECURITY_LIMIT_INFORMATION$SidsToDisable$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_SECURITY_LIMIT_INFORMATION$SidsToDisable$LAYOUT() { return _JOBOBJECT_SECURITY_LIMIT_INFORMATION$SidsToDisable$LAYOUT_; }

    static final VarHandle _JOBOBJECT_SECURITY_LIMIT_INFORMATION$SidsToDisable$VH_ = MemoryHandles.asAddressVarHandle(_JOBOBJECT_SECURITY_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SidsToDisable")));
    static final java.lang.invoke.VarHandle _JOBOBJECT_SECURITY_LIMIT_INFORMATION$SidsToDisable$VH() { return _JOBOBJECT_SECURITY_LIMIT_INFORMATION$SidsToDisable$VH_; }

    static final MemoryLayout _JOBOBJECT_SECURITY_LIMIT_INFORMATION$PrivilegesToDelete$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_SECURITY_LIMIT_INFORMATION$PrivilegesToDelete$LAYOUT() { return _JOBOBJECT_SECURITY_LIMIT_INFORMATION$PrivilegesToDelete$LAYOUT_; }

    static final VarHandle _JOBOBJECT_SECURITY_LIMIT_INFORMATION$PrivilegesToDelete$VH_ = MemoryHandles.asAddressVarHandle(_JOBOBJECT_SECURITY_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("PrivilegesToDelete")));
    static final java.lang.invoke.VarHandle _JOBOBJECT_SECURITY_LIMIT_INFORMATION$PrivilegesToDelete$VH() { return _JOBOBJECT_SECURITY_LIMIT_INFORMATION$PrivilegesToDelete$VH_; }

    static final MemoryLayout _JOBOBJECT_SECURITY_LIMIT_INFORMATION$RestrictedSids$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_SECURITY_LIMIT_INFORMATION$RestrictedSids$LAYOUT() { return _JOBOBJECT_SECURITY_LIMIT_INFORMATION$RestrictedSids$LAYOUT_; }

    static final VarHandle _JOBOBJECT_SECURITY_LIMIT_INFORMATION$RestrictedSids$VH_ = MemoryHandles.asAddressVarHandle(_JOBOBJECT_SECURITY_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RestrictedSids")));
    static final java.lang.invoke.VarHandle _JOBOBJECT_SECURITY_LIMIT_INFORMATION$RestrictedSids$VH() { return _JOBOBJECT_SECURITY_LIMIT_INFORMATION$RestrictedSids$VH_; }

    static final MemoryLayout _JOBOBJECT_END_OF_JOB_TIME_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("EndOfJobTimeAction")
    ).withName("_JOBOBJECT_END_OF_JOB_TIME_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_END_OF_JOB_TIME_INFORMATION$struct$LAYOUT() { return _JOBOBJECT_END_OF_JOB_TIME_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _JOBOBJECT_END_OF_JOB_TIME_INFORMATION$EndOfJobTimeAction$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_END_OF_JOB_TIME_INFORMATION$EndOfJobTimeAction$LAYOUT() { return _JOBOBJECT_END_OF_JOB_TIME_INFORMATION$EndOfJobTimeAction$LAYOUT_; }

    static final VarHandle _JOBOBJECT_END_OF_JOB_TIME_INFORMATION$EndOfJobTimeAction$VH_ = _JOBOBJECT_END_OF_JOB_TIME_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EndOfJobTimeAction"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_END_OF_JOB_TIME_INFORMATION$EndOfJobTimeAction$VH() { return _JOBOBJECT_END_OF_JOB_TIME_INFORMATION$EndOfJobTimeAction$VH_; }

    static final MemoryLayout _JOBOBJECT_ASSOCIATE_COMPLETION_PORT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("CompletionKey"),
        C_POINTER.withName("CompletionPort")
    ).withName("_JOBOBJECT_ASSOCIATE_COMPLETION_PORT");
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_ASSOCIATE_COMPLETION_PORT$struct$LAYOUT() { return _JOBOBJECT_ASSOCIATE_COMPLETION_PORT$struct$LAYOUT_; }

    static final MemoryLayout _JOBOBJECT_ASSOCIATE_COMPLETION_PORT$CompletionKey$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_ASSOCIATE_COMPLETION_PORT$CompletionKey$LAYOUT() { return _JOBOBJECT_ASSOCIATE_COMPLETION_PORT$CompletionKey$LAYOUT_; }

    static final VarHandle _JOBOBJECT_ASSOCIATE_COMPLETION_PORT$CompletionKey$VH_ = MemoryHandles.asAddressVarHandle(_JOBOBJECT_ASSOCIATE_COMPLETION_PORT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CompletionKey")));
    static final java.lang.invoke.VarHandle _JOBOBJECT_ASSOCIATE_COMPLETION_PORT$CompletionKey$VH() { return _JOBOBJECT_ASSOCIATE_COMPLETION_PORT$CompletionKey$VH_; }

    static final MemoryLayout _JOBOBJECT_ASSOCIATE_COMPLETION_PORT$CompletionPort$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_ASSOCIATE_COMPLETION_PORT$CompletionPort$LAYOUT() { return _JOBOBJECT_ASSOCIATE_COMPLETION_PORT$CompletionPort$LAYOUT_; }

    static final VarHandle _JOBOBJECT_ASSOCIATE_COMPLETION_PORT$CompletionPort$VH_ = MemoryHandles.asAddressVarHandle(_JOBOBJECT_ASSOCIATE_COMPLETION_PORT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CompletionPort")));
    static final java.lang.invoke.VarHandle _JOBOBJECT_ASSOCIATE_COMPLETION_PORT$CompletionPort$VH() { return _JOBOBJECT_ASSOCIATE_COMPLETION_PORT$CompletionPort$VH_; }

    static final MemoryLayout _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            MemoryLayout.ofUnion(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("LowPart"),
                    C_LONG.withName("HighPart")
                ).withName("u"),
                C_LONGLONG.withName("QuadPart")
            ).withName("TotalUserTime"),
            MemoryLayout.ofUnion(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("LowPart"),
                    C_LONG.withName("HighPart")
                ).withName("u"),
                C_LONGLONG.withName("QuadPart")
            ).withName("TotalKernelTime"),
            MemoryLayout.ofUnion(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("LowPart"),
                    C_LONG.withName("HighPart")
                ).withName("u"),
                C_LONGLONG.withName("QuadPart")
            ).withName("ThisPeriodTotalUserTime"),
            MemoryLayout.ofUnion(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("LowPart"),
                    C_LONG.withName("HighPart")
                ).withName("u"),
                C_LONGLONG.withName("QuadPart")
            ).withName("ThisPeriodTotalKernelTime"),
            C_LONG.withName("TotalPageFaultCount"),
            C_LONG.withName("TotalProcesses"),
            C_LONG.withName("ActiveProcesses"),
            C_LONG.withName("TotalTerminatedProcesses")
        ).withName("BasicInfo"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("ReadOperationCount"),
            C_LONGLONG.withName("WriteOperationCount"),
            C_LONGLONG.withName("OtherOperationCount"),
            C_LONGLONG.withName("ReadTransferCount"),
            C_LONGLONG.withName("WriteTransferCount"),
            C_LONGLONG.withName("OtherTransferCount")
        ).withName("IoInfo")
    ).withName("_JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION$struct$LAYOUT() { return _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _JOBOBJECT_JOBSET_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("MemberLevel")
    ).withName("_JOBOBJECT_JOBSET_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_JOBSET_INFORMATION$struct$LAYOUT() { return _JOBOBJECT_JOBSET_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _JOBOBJECT_JOBSET_INFORMATION$MemberLevel$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_JOBSET_INFORMATION$MemberLevel$LAYOUT() { return _JOBOBJECT_JOBSET_INFORMATION$MemberLevel$LAYOUT_; }

    static final VarHandle _JOBOBJECT_JOBSET_INFORMATION$MemberLevel$VH_ = _JOBOBJECT_JOBSET_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MemberLevel"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_JOBSET_INFORMATION$MemberLevel$VH() { return _JOBOBJECT_JOBSET_INFORMATION$MemberLevel$VH_; }

    static final int ToleranceLow() { return (int)1L; }

    static final int ToleranceMedium() { return (int)2L; }

    static final int ToleranceHigh() { return (int)3L; }

    static final int ToleranceIntervalShort() { return (int)1L; }

    static final int ToleranceIntervalMedium() { return (int)2L; }

    static final int ToleranceIntervalLong() { return (int)3L; }

    static final MemoryLayout _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("IoReadBytesLimit"),
        C_LONGLONG.withName("IoWriteBytesLimit"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("PerJobUserTimeLimit"),
        C_LONGLONG.withName("JobMemoryLimit"),
        C_INT.withName("RateControlTolerance"),
        C_INT.withName("RateControlToleranceInterval"),
        C_LONG.withName("LimitFlags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$struct$LAYOUT() { return _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$IoReadBytesLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$IoReadBytesLimit$LAYOUT() { return _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$IoReadBytesLimit$LAYOUT_; }

    static final VarHandle _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$IoReadBytesLimit$VH_ = _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IoReadBytesLimit"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$IoReadBytesLimit$VH() { return _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$IoReadBytesLimit$VH_; }

    static final MemoryLayout _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$IoWriteBytesLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$IoWriteBytesLimit$LAYOUT() { return _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$IoWriteBytesLimit$LAYOUT_; }

    static final VarHandle _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$IoWriteBytesLimit$VH_ = _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IoWriteBytesLimit"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$IoWriteBytesLimit$VH() { return _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$IoWriteBytesLimit$VH_; }

    static final MemoryLayout _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$JobMemoryLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$JobMemoryLimit$LAYOUT() { return _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$JobMemoryLimit$LAYOUT_; }

    static final VarHandle _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$JobMemoryLimit$VH_ = _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("JobMemoryLimit"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$JobMemoryLimit$VH() { return _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$JobMemoryLimit$VH_; }

    static final MemoryLayout _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$RateControlTolerance$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$RateControlTolerance$LAYOUT() { return _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$RateControlTolerance$LAYOUT_; }

    static final VarHandle _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$RateControlTolerance$VH_ = _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RateControlTolerance"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$RateControlTolerance$VH() { return _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$RateControlTolerance$VH_; }

    static final MemoryLayout _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$RateControlToleranceInterval$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$RateControlToleranceInterval$LAYOUT() { return _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$RateControlToleranceInterval$LAYOUT_; }

    static final VarHandle _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$RateControlToleranceInterval$VH_ = _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RateControlToleranceInterval"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$RateControlToleranceInterval$VH() { return _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$RateControlToleranceInterval$VH_; }

    static final MemoryLayout _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$LimitFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$LimitFlags$LAYOUT() { return _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$LimitFlags$LAYOUT_; }

    static final VarHandle _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$LimitFlags$VH_ = _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LimitFlags"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$LimitFlags$VH() { return _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION$LimitFlags$VH_; }

    static final MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("IoReadBytesLimit"),
        C_LONGLONG.withName("IoWriteBytesLimit"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("PerJobUserTimeLimit"),
        C_LONGLONG.withName("JobHighMemoryLimit"),
        C_LONGLONG.withName("JobMemoryLimit"),
        C_INT.withName("RateControlTolerance"),
        C_INT.withName("CpuRateControlTolerance"),
        C_INT.withName("RateControlToleranceInterval"),
        C_INT.withName("CpuRateControlToleranceInterval"),
        C_LONG.withName("LimitFlags"),
        C_INT.withName("IoRateControlTolerance"),
        C_LONGLONG.withName("JobLowMemoryLimit"),
        C_INT.withName("IoRateControlToleranceInterval"),
        C_INT.withName("NetRateControlTolerance"),
        C_INT.withName("NetRateControlToleranceInterval"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2");
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$struct$LAYOUT() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$struct$LAYOUT_; }

    static final MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoReadBytesLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoReadBytesLimit$LAYOUT() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoReadBytesLimit$LAYOUT_; }

    static final VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoReadBytesLimit$VH_ = JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IoReadBytesLimit"));
    static final java.lang.invoke.VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoReadBytesLimit$VH() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoReadBytesLimit$VH_; }

    static final MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoWriteBytesLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoWriteBytesLimit$LAYOUT() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoWriteBytesLimit$LAYOUT_; }

    static final VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoWriteBytesLimit$VH_ = JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IoWriteBytesLimit"));
    static final java.lang.invoke.VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoWriteBytesLimit$VH() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoWriteBytesLimit$VH_; }

    static final MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobHighMemoryLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobHighMemoryLimit$LAYOUT() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobHighMemoryLimit$LAYOUT_; }

    static final VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobHighMemoryLimit$VH_ = JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("JobHighMemoryLimit"));
    static final java.lang.invoke.VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobHighMemoryLimit$VH() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobHighMemoryLimit$VH_; }

    static final MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobMemoryLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobMemoryLimit$LAYOUT() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobMemoryLimit$LAYOUT_; }

    static final VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobMemoryLimit$VH_ = JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("JobMemoryLimit"));
    static final java.lang.invoke.VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobMemoryLimit$VH() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobMemoryLimit$VH_; }

    static final MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$RateControlTolerance$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$RateControlTolerance$LAYOUT() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$RateControlTolerance$LAYOUT_; }

    static final VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$RateControlTolerance$VH_ = JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RateControlTolerance"));
    static final java.lang.invoke.VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$RateControlTolerance$VH() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$RateControlTolerance$VH_; }

    static final MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$CpuRateControlTolerance$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$CpuRateControlTolerance$LAYOUT() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$CpuRateControlTolerance$LAYOUT_; }

    static final VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$CpuRateControlTolerance$VH_ = JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CpuRateControlTolerance"));
    static final java.lang.invoke.VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$CpuRateControlTolerance$VH() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$CpuRateControlTolerance$VH_; }

    static final MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$RateControlToleranceInterval$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$RateControlToleranceInterval$LAYOUT() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$RateControlToleranceInterval$LAYOUT_; }

    static final VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$RateControlToleranceInterval$VH_ = JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RateControlToleranceInterval"));
    static final java.lang.invoke.VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$RateControlToleranceInterval$VH() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$RateControlToleranceInterval$VH_; }

    static final MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$CpuRateControlToleranceInterval$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$CpuRateControlToleranceInterval$LAYOUT() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$CpuRateControlToleranceInterval$LAYOUT_; }

    static final VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$CpuRateControlToleranceInterval$VH_ = JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CpuRateControlToleranceInterval"));
    static final java.lang.invoke.VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$CpuRateControlToleranceInterval$VH() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$CpuRateControlToleranceInterval$VH_; }

    static final MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$LimitFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$LimitFlags$LAYOUT() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$LimitFlags$LAYOUT_; }

    static final VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$LimitFlags$VH_ = JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LimitFlags"));
    static final java.lang.invoke.VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$LimitFlags$VH() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$LimitFlags$VH_; }

    static final MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoRateControlTolerance$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoRateControlTolerance$LAYOUT() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoRateControlTolerance$LAYOUT_; }

    static final VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoRateControlTolerance$VH_ = JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IoRateControlTolerance"));
    static final java.lang.invoke.VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoRateControlTolerance$VH() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoRateControlTolerance$VH_; }

    static final MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobLowMemoryLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobLowMemoryLimit$LAYOUT() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobLowMemoryLimit$LAYOUT_; }

    static final VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobLowMemoryLimit$VH_ = JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("JobLowMemoryLimit"));
    static final java.lang.invoke.VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobLowMemoryLimit$VH() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$JobLowMemoryLimit$VH_; }

    static final MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoRateControlToleranceInterval$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoRateControlToleranceInterval$LAYOUT() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoRateControlToleranceInterval$LAYOUT_; }

    static final VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoRateControlToleranceInterval$VH_ = JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IoRateControlToleranceInterval"));
    static final java.lang.invoke.VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoRateControlToleranceInterval$VH() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$IoRateControlToleranceInterval$VH_; }

    static final MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$NetRateControlTolerance$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$NetRateControlTolerance$LAYOUT() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$NetRateControlTolerance$LAYOUT_; }

    static final VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$NetRateControlTolerance$VH_ = JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NetRateControlTolerance"));
    static final java.lang.invoke.VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$NetRateControlTolerance$VH() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$NetRateControlTolerance$VH_; }

    static final MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$NetRateControlToleranceInterval$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$NetRateControlToleranceInterval$LAYOUT() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$NetRateControlToleranceInterval$LAYOUT_; }

    static final VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$NetRateControlToleranceInterval$VH_ = JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NetRateControlToleranceInterval"));
    static final java.lang.invoke.VarHandle JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$NetRateControlToleranceInterval$VH() { return JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2$NetRateControlToleranceInterval$VH_; }

    static final MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("LimitFlags"),
        C_LONG.withName("ViolationLimitFlags"),
        C_LONGLONG.withName("IoReadBytes"),
        C_LONGLONG.withName("IoReadBytesLimit"),
        C_LONGLONG.withName("IoWriteBytes"),
        C_LONGLONG.withName("IoWriteBytesLimit"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("PerJobUserTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("PerJobUserTimeLimit"),
        C_LONGLONG.withName("JobMemory"),
        C_LONGLONG.withName("JobMemoryLimit"),
        C_INT.withName("RateControlTolerance"),
        C_INT.withName("RateControlToleranceLimit")
    ).withName("_JOBOBJECT_LIMIT_VIOLATION_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$struct$LAYOUT() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$LimitFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$LimitFlags$LAYOUT() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$LimitFlags$LAYOUT_; }

    static final VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$LimitFlags$VH_ = _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LimitFlags"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$LimitFlags$VH() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$LimitFlags$VH_; }

    static final MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$ViolationLimitFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$ViolationLimitFlags$LAYOUT() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$ViolationLimitFlags$LAYOUT_; }

    static final VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$ViolationLimitFlags$VH_ = _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ViolationLimitFlags"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$ViolationLimitFlags$VH() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$ViolationLimitFlags$VH_; }

    static final MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoReadBytes$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoReadBytes$LAYOUT() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoReadBytes$LAYOUT_; }

    static final VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoReadBytes$VH_ = _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IoReadBytes"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoReadBytes$VH() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoReadBytes$VH_; }

    static final MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoReadBytesLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoReadBytesLimit$LAYOUT() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoReadBytesLimit$LAYOUT_; }

    static final VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoReadBytesLimit$VH_ = _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IoReadBytesLimit"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoReadBytesLimit$VH() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoReadBytesLimit$VH_; }

    static final MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoWriteBytes$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoWriteBytes$LAYOUT() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoWriteBytes$LAYOUT_; }

    static final VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoWriteBytes$VH_ = _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IoWriteBytes"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoWriteBytes$VH() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoWriteBytes$VH_; }

    static final MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoWriteBytesLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoWriteBytesLimit$LAYOUT() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoWriteBytesLimit$LAYOUT_; }

    static final VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoWriteBytesLimit$VH_ = _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IoWriteBytesLimit"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoWriteBytesLimit$VH() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$IoWriteBytesLimit$VH_; }

    static final MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$JobMemory$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$JobMemory$LAYOUT() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$JobMemory$LAYOUT_; }

    static final VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$JobMemory$VH_ = _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("JobMemory"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$JobMemory$VH() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$JobMemory$VH_; }

    static final MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$JobMemoryLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$JobMemoryLimit$LAYOUT() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$JobMemoryLimit$LAYOUT_; }

    static final VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$JobMemoryLimit$VH_ = _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("JobMemoryLimit"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$JobMemoryLimit$VH() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$JobMemoryLimit$VH_; }

    static final MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$RateControlTolerance$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$RateControlTolerance$LAYOUT() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$RateControlTolerance$LAYOUT_; }

    static final VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$RateControlTolerance$VH_ = _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RateControlTolerance"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$RateControlTolerance$VH() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$RateControlTolerance$VH_; }

    static final MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$RateControlToleranceLimit$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$RateControlToleranceLimit$LAYOUT() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$RateControlToleranceLimit$LAYOUT_; }

    static final VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$RateControlToleranceLimit$VH_ = _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RateControlToleranceLimit"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$RateControlToleranceLimit$VH() { return _JOBOBJECT_LIMIT_VIOLATION_INFORMATION$RateControlToleranceLimit$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("LimitFlags"),
        C_LONG.withName("ViolationLimitFlags"),
        C_LONGLONG.withName("IoReadBytes"),
        C_LONGLONG.withName("IoReadBytesLimit"),
        C_LONGLONG.withName("IoWriteBytes"),
        C_LONGLONG.withName("IoWriteBytesLimit"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("PerJobUserTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("PerJobUserTimeLimit"),
        C_LONGLONG.withName("JobMemory"),
        C_LONGLONG.withName("JobHighMemoryLimit"),
        C_LONGLONG.withName("JobMemoryLimit"),
        C_INT.withName("RateControlTolerance"),
        C_INT.withName("CpuRateControlTolerance"),
        C_INT.withName("RateControlToleranceLimit"),
        C_INT.withName("CpuRateControlToleranceLimit"),
        C_LONGLONG.withName("JobLowMemoryLimit"),
        C_INT.withName("IoRateControlTolerance"),
        C_INT.withName("IoRateControlToleranceLimit"),
        C_INT.withName("NetRateControlTolerance"),
        C_INT.withName("NetRateControlToleranceLimit")
    ).withName("JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2");
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$LimitFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$LimitFlags$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$LimitFlags$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$LimitFlags$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LimitFlags"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$LimitFlags$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$LimitFlags$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$ViolationLimitFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$ViolationLimitFlags$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$ViolationLimitFlags$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$ViolationLimitFlags$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ViolationLimitFlags"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$ViolationLimitFlags$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$ViolationLimitFlags$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoReadBytes$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoReadBytes$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoReadBytes$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoReadBytes$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IoReadBytes"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoReadBytes$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoReadBytes$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoReadBytesLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoReadBytesLimit$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoReadBytesLimit$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoReadBytesLimit$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IoReadBytesLimit"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoReadBytesLimit$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoReadBytesLimit$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoWriteBytes$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoWriteBytes$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoWriteBytes$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoWriteBytes$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IoWriteBytes"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoWriteBytes$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoWriteBytes$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoWriteBytesLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoWriteBytesLimit$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoWriteBytesLimit$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoWriteBytesLimit$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IoWriteBytesLimit"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoWriteBytesLimit$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoWriteBytesLimit$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobMemory$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobMemory$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobMemory$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobMemory$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("JobMemory"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobMemory$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobMemory$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobHighMemoryLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobHighMemoryLimit$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobHighMemoryLimit$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobHighMemoryLimit$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("JobHighMemoryLimit"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobHighMemoryLimit$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobHighMemoryLimit$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobMemoryLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobMemoryLimit$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobMemoryLimit$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobMemoryLimit$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("JobMemoryLimit"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobMemoryLimit$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobMemoryLimit$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$RateControlTolerance$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$RateControlTolerance$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$RateControlTolerance$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$RateControlTolerance$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RateControlTolerance"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$RateControlTolerance$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$RateControlTolerance$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$CpuRateControlTolerance$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$CpuRateControlTolerance$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$CpuRateControlTolerance$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$CpuRateControlTolerance$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CpuRateControlTolerance"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$CpuRateControlTolerance$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$CpuRateControlTolerance$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$RateControlToleranceLimit$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$RateControlToleranceLimit$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$RateControlToleranceLimit$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$RateControlToleranceLimit$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RateControlToleranceLimit"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$RateControlToleranceLimit$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$RateControlToleranceLimit$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$CpuRateControlToleranceLimit$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$CpuRateControlToleranceLimit$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$CpuRateControlToleranceLimit$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$CpuRateControlToleranceLimit$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CpuRateControlToleranceLimit"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$CpuRateControlToleranceLimit$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$CpuRateControlToleranceLimit$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobLowMemoryLimit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobLowMemoryLimit$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobLowMemoryLimit$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobLowMemoryLimit$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("JobLowMemoryLimit"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobLowMemoryLimit$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$JobLowMemoryLimit$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoRateControlTolerance$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoRateControlTolerance$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoRateControlTolerance$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoRateControlTolerance$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IoRateControlTolerance"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoRateControlTolerance$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoRateControlTolerance$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoRateControlToleranceLimit$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoRateControlToleranceLimit$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoRateControlToleranceLimit$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoRateControlToleranceLimit$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IoRateControlToleranceLimit"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoRateControlToleranceLimit$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$IoRateControlToleranceLimit$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$NetRateControlTolerance$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$NetRateControlTolerance$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$NetRateControlTolerance$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$NetRateControlTolerance$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NetRateControlTolerance"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$NetRateControlTolerance$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$NetRateControlTolerance$VH_; }

    static final MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$NetRateControlToleranceLimit$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$NetRateControlToleranceLimit$LAYOUT() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$NetRateControlToleranceLimit$LAYOUT_; }

    static final VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$NetRateControlToleranceLimit$VH_ = JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NetRateControlToleranceLimit"));
    static final java.lang.invoke.VarHandle JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$NetRateControlToleranceLimit$VH() { return JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2$NetRateControlToleranceLimit$VH_; }

    static final MemoryLayout _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ControlFlags"),
        C_LONG.withName("CpuRate"),
        C_LONG.withName("Weight"),
        C_SHORT.withName("MinRate"),
        C_SHORT.withName("MaxRate")
    ).withName("_JOBOBJECT_CPU_RATE_CONTROL_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$struct$LAYOUT() { return _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$ControlFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$ControlFlags$LAYOUT() { return _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$ControlFlags$LAYOUT_; }

    static final VarHandle _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$ControlFlags$VH_ = _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ControlFlags"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$ControlFlags$VH() { return _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$ControlFlags$VH_; }

    static final MemoryLayout _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$CpuRate$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$CpuRate$LAYOUT() { return _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$CpuRate$LAYOUT_; }

    static final VarHandle _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$CpuRate$VH_ = _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CpuRate"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$CpuRate$VH() { return _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$CpuRate$VH_; }

    static final MemoryLayout _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$Weight$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$Weight$LAYOUT() { return _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$Weight$LAYOUT_; }

    static final VarHandle _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$Weight$VH_ = _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Weight"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$Weight$VH() { return _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$Weight$VH_; }

    static final MemoryLayout _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$MinRate$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$MinRate$LAYOUT() { return _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$MinRate$LAYOUT_; }

    static final VarHandle _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$MinRate$VH_ = _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MinRate"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$MinRate$VH() { return _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$MinRate$VH_; }

    static final MemoryLayout _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$MaxRate$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$MaxRate$LAYOUT() { return _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$MaxRate$LAYOUT_; }

    static final VarHandle _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$MaxRate$VH_ = _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MaxRate"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$MaxRate$VH() { return _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION$MaxRate$VH_; }

    static final int JOB_OBJECT_NET_RATE_CONTROL_ENABLE() { return (int)1L; }

    static final int JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH() { return (int)2L; }

    static final int JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG() { return (int)4L; }

    static final int JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS() { return (int)7L; }

    static final MemoryLayout JOBOBJECT_NET_RATE_CONTROL_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("MaxBandwidth"),
        C_INT.withName("ControlFlags"),
        C_CHAR.withName("DscpTag"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("JOBOBJECT_NET_RATE_CONTROL_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NET_RATE_CONTROL_INFORMATION$struct$LAYOUT() { return JOBOBJECT_NET_RATE_CONTROL_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout JOBOBJECT_NET_RATE_CONTROL_INFORMATION$MaxBandwidth$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NET_RATE_CONTROL_INFORMATION$MaxBandwidth$LAYOUT() { return JOBOBJECT_NET_RATE_CONTROL_INFORMATION$MaxBandwidth$LAYOUT_; }

    static final VarHandle JOBOBJECT_NET_RATE_CONTROL_INFORMATION$MaxBandwidth$VH_ = JOBOBJECT_NET_RATE_CONTROL_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaxBandwidth"));
    static final java.lang.invoke.VarHandle JOBOBJECT_NET_RATE_CONTROL_INFORMATION$MaxBandwidth$VH() { return JOBOBJECT_NET_RATE_CONTROL_INFORMATION$MaxBandwidth$VH_; }

    static final MemoryLayout JOBOBJECT_NET_RATE_CONTROL_INFORMATION$ControlFlags$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NET_RATE_CONTROL_INFORMATION$ControlFlags$LAYOUT() { return JOBOBJECT_NET_RATE_CONTROL_INFORMATION$ControlFlags$LAYOUT_; }

    static final VarHandle JOBOBJECT_NET_RATE_CONTROL_INFORMATION$ControlFlags$VH_ = JOBOBJECT_NET_RATE_CONTROL_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ControlFlags"));
    static final java.lang.invoke.VarHandle JOBOBJECT_NET_RATE_CONTROL_INFORMATION$ControlFlags$VH() { return JOBOBJECT_NET_RATE_CONTROL_INFORMATION$ControlFlags$VH_; }

    static final MemoryLayout JOBOBJECT_NET_RATE_CONTROL_INFORMATION$DscpTag$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_NET_RATE_CONTROL_INFORMATION$DscpTag$LAYOUT() { return JOBOBJECT_NET_RATE_CONTROL_INFORMATION$DscpTag$LAYOUT_; }

    static final VarHandle JOBOBJECT_NET_RATE_CONTROL_INFORMATION$DscpTag$VH_ = JOBOBJECT_NET_RATE_CONTROL_INFORMATION$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("DscpTag"));
    static final java.lang.invoke.VarHandle JOBOBJECT_NET_RATE_CONTROL_INFORMATION$DscpTag$VH() { return JOBOBJECT_NET_RATE_CONTROL_INFORMATION$DscpTag$VH_; }

    static final int JOB_OBJECT_IO_RATE_CONTROL_ENABLE() { return (int)1L; }

    static final int JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME() { return (int)2L; }

    static final int JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL() { return (int)4L; }

    static final int JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP() { return (int)8L; }

    static final int JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS() { return (int)15L; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("MaxIops"),
        C_LONGLONG.withName("MaxBandwidth"),
        C_LONGLONG.withName("ReservationIops"),
        C_POINTER.withName("VolumeName"),
        C_LONG.withName("BaseIoSize"),
        C_INT.withName("ControlFlags"),
        C_SHORT.withName("VolumeNameLength"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE");
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$struct$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$struct$LAYOUT_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$MaxIops$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$MaxIops$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$MaxIops$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$MaxIops$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaxIops"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$MaxIops$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$MaxIops$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$MaxBandwidth$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$MaxBandwidth$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$MaxBandwidth$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$MaxBandwidth$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaxBandwidth"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$MaxBandwidth$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$MaxBandwidth$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$ReservationIops$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$ReservationIops$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$ReservationIops$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$ReservationIops$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReservationIops"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$ReservationIops$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$ReservationIops$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$VolumeName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$VolumeName$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$VolumeName$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$VolumeName$VH_ = MemoryHandles.asAddressVarHandle(JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("VolumeName")));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$VolumeName$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$VolumeName$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$BaseIoSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$BaseIoSize$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$BaseIoSize$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$BaseIoSize$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BaseIoSize"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$BaseIoSize$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$BaseIoSize$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$ControlFlags$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$ControlFlags$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$ControlFlags$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$ControlFlags$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ControlFlags"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$ControlFlags$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$ControlFlags$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$VolumeNameLength$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$VolumeNameLength$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$VolumeNameLength$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$VolumeNameLength$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("VolumeNameLength"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$VolumeNameLength$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE$VolumeNameLength$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("MaxIops"),
        C_LONGLONG.withName("MaxBandwidth"),
        C_LONGLONG.withName("ReservationIops"),
        C_POINTER.withName("VolumeName"),
        C_LONG.withName("BaseIoSize"),
        C_INT.withName("ControlFlags"),
        C_SHORT.withName("VolumeNameLength"),
        MemoryLayout.ofPaddingBits(48),
        C_LONGLONG.withName("CriticalReservationIops"),
        C_LONGLONG.withName("ReservationBandwidth"),
        C_LONGLONG.withName("CriticalReservationBandwidth"),
        C_LONGLONG.withName("MaxTimePercent"),
        C_LONGLONG.withName("ReservationTimePercent"),
        C_LONGLONG.withName("CriticalReservationTimePercent")
    ).withName("JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2");
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$struct$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$struct$LAYOUT_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxIops$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxIops$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxIops$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxIops$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaxIops"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxIops$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxIops$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxBandwidth$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxBandwidth$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxBandwidth$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxBandwidth$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaxBandwidth"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxBandwidth$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxBandwidth$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationIops$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationIops$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationIops$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationIops$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReservationIops"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationIops$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationIops$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$VolumeName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$VolumeName$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$VolumeName$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$VolumeName$VH_ = MemoryHandles.asAddressVarHandle(JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("VolumeName")));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$VolumeName$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$VolumeName$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$BaseIoSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$BaseIoSize$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$BaseIoSize$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$BaseIoSize$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BaseIoSize"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$BaseIoSize$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$BaseIoSize$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ControlFlags$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ControlFlags$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ControlFlags$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ControlFlags$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ControlFlags"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ControlFlags$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ControlFlags$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$VolumeNameLength$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$VolumeNameLength$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$VolumeNameLength$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$VolumeNameLength$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("VolumeNameLength"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$VolumeNameLength$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$VolumeNameLength$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationIops$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationIops$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationIops$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationIops$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CriticalReservationIops"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationIops$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationIops$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationBandwidth$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationBandwidth$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationBandwidth$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationBandwidth$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReservationBandwidth"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationBandwidth$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationBandwidth$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationBandwidth$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationBandwidth$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationBandwidth$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationBandwidth$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CriticalReservationBandwidth"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationBandwidth$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationBandwidth$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxTimePercent$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxTimePercent$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxTimePercent$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxTimePercent$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaxTimePercent"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxTimePercent$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$MaxTimePercent$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationTimePercent$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationTimePercent$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationTimePercent$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationTimePercent$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReservationTimePercent"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationTimePercent$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$ReservationTimePercent$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationTimePercent$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationTimePercent$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationTimePercent$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationTimePercent$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CriticalReservationTimePercent"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationTimePercent$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2$CriticalReservationTimePercent$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("MaxIops"),
        C_LONGLONG.withName("MaxBandwidth"),
        C_LONGLONG.withName("ReservationIops"),
        C_POINTER.withName("VolumeName"),
        C_LONG.withName("BaseIoSize"),
        C_INT.withName("ControlFlags"),
        C_SHORT.withName("VolumeNameLength"),
        MemoryLayout.ofPaddingBits(48),
        C_LONGLONG.withName("CriticalReservationIops"),
        C_LONGLONG.withName("ReservationBandwidth"),
        C_LONGLONG.withName("CriticalReservationBandwidth"),
        C_LONGLONG.withName("MaxTimePercent"),
        C_LONGLONG.withName("ReservationTimePercent"),
        C_LONGLONG.withName("CriticalReservationTimePercent"),
        C_LONGLONG.withName("SoftMaxIops"),
        C_LONGLONG.withName("SoftMaxBandwidth"),
        C_LONGLONG.withName("SoftMaxTimePercent"),
        C_LONGLONG.withName("LimitExcessNotifyIops"),
        C_LONGLONG.withName("LimitExcessNotifyBandwidth"),
        C_LONGLONG.withName("LimitExcessNotifyTimePercent")
    ).withName("JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3");
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxIops$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxIops$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxIops$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxIops$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaxIops"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxIops$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxIops$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxBandwidth$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxBandwidth$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxBandwidth$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxBandwidth$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaxBandwidth"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxBandwidth$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxBandwidth$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationIops$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationIops$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationIops$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationIops$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReservationIops"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationIops$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationIops$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$VolumeName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$VolumeName$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$VolumeName$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$VolumeName$VH_ = MemoryHandles.asAddressVarHandle(JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("VolumeName")));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$VolumeName$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$VolumeName$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$BaseIoSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$BaseIoSize$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$BaseIoSize$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$BaseIoSize$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BaseIoSize"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$BaseIoSize$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$BaseIoSize$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ControlFlags$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ControlFlags$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ControlFlags$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ControlFlags$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ControlFlags"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ControlFlags$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ControlFlags$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$VolumeNameLength$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$VolumeNameLength$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$VolumeNameLength$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$VolumeNameLength$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("VolumeNameLength"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$VolumeNameLength$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$VolumeNameLength$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationIops$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationIops$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationIops$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationIops$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CriticalReservationIops"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationIops$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationIops$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationBandwidth$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationBandwidth$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationBandwidth$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationBandwidth$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReservationBandwidth"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationBandwidth$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationBandwidth$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationBandwidth$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationBandwidth$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationBandwidth$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationBandwidth$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CriticalReservationBandwidth"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationBandwidth$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationBandwidth$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxTimePercent$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxTimePercent$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxTimePercent$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxTimePercent$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaxTimePercent"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxTimePercent$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$MaxTimePercent$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationTimePercent$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationTimePercent$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationTimePercent$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationTimePercent$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ReservationTimePercent"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationTimePercent$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$ReservationTimePercent$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationTimePercent$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationTimePercent$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationTimePercent$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationTimePercent$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CriticalReservationTimePercent"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationTimePercent$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$CriticalReservationTimePercent$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxIops$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxIops$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxIops$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxIops$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SoftMaxIops"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxIops$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxIops$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxBandwidth$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxBandwidth$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxBandwidth$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxBandwidth$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SoftMaxBandwidth"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxBandwidth$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxBandwidth$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxTimePercent$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxTimePercent$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxTimePercent$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxTimePercent$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SoftMaxTimePercent"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxTimePercent$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$SoftMaxTimePercent$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyIops$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyIops$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyIops$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyIops$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LimitExcessNotifyIops"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyIops$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyIops$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyBandwidth$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyBandwidth$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyBandwidth$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyBandwidth$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LimitExcessNotifyBandwidth"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyBandwidth$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyBandwidth$VH_; }

    static final MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyTimePercent$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyTimePercent$LAYOUT() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyTimePercent$LAYOUT_; }

    static final VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyTimePercent$VH_ = JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LimitExcessNotifyTimePercent"));
    static final java.lang.invoke.VarHandle JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyTimePercent$VH() { return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3$LimitExcessNotifyTimePercent$VH_; }

    static final int JOBOBJECT_IO_ATTRIBUTION_CONTROL_ENABLE() { return (int)1L; }

    static final int JOBOBJECT_IO_ATTRIBUTION_CONTROL_DISABLE() { return (int)2L; }

    static final int JOBOBJECT_IO_ATTRIBUTION_CONTROL_VALID_FLAGS() { return (int)3L; }

    static final MemoryLayout _JOBOBJECT_IO_ATTRIBUTION_STATS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("IoCount"),
        C_LONGLONG.withName("TotalNonOverlappedQueueTime"),
        C_LONGLONG.withName("TotalNonOverlappedServiceTime"),
        C_LONGLONG.withName("TotalSize")
    ).withName("_JOBOBJECT_IO_ATTRIBUTION_STATS");
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_IO_ATTRIBUTION_STATS$struct$LAYOUT() { return _JOBOBJECT_IO_ATTRIBUTION_STATS$struct$LAYOUT_; }

    static final MemoryLayout _JOBOBJECT_IO_ATTRIBUTION_STATS$IoCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_IO_ATTRIBUTION_STATS$IoCount$LAYOUT() { return _JOBOBJECT_IO_ATTRIBUTION_STATS$IoCount$LAYOUT_; }

    static final VarHandle _JOBOBJECT_IO_ATTRIBUTION_STATS$IoCount$VH_ = _JOBOBJECT_IO_ATTRIBUTION_STATS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IoCount"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_IO_ATTRIBUTION_STATS$IoCount$VH() { return _JOBOBJECT_IO_ATTRIBUTION_STATS$IoCount$VH_; }

    static final MemoryLayout _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalNonOverlappedQueueTime$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalNonOverlappedQueueTime$LAYOUT() { return _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalNonOverlappedQueueTime$LAYOUT_; }

    static final VarHandle _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalNonOverlappedQueueTime$VH_ = _JOBOBJECT_IO_ATTRIBUTION_STATS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TotalNonOverlappedQueueTime"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalNonOverlappedQueueTime$VH() { return _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalNonOverlappedQueueTime$VH_; }

    static final MemoryLayout _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalNonOverlappedServiceTime$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalNonOverlappedServiceTime$LAYOUT() { return _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalNonOverlappedServiceTime$LAYOUT_; }

    static final VarHandle _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalNonOverlappedServiceTime$VH_ = _JOBOBJECT_IO_ATTRIBUTION_STATS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TotalNonOverlappedServiceTime"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalNonOverlappedServiceTime$VH() { return _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalNonOverlappedServiceTime$VH_; }

    static final MemoryLayout _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalSize$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalSize$LAYOUT() { return _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalSize$LAYOUT_; }

    static final VarHandle _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalSize$VH_ = _JOBOBJECT_IO_ATTRIBUTION_STATS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TotalSize"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalSize$VH() { return _JOBOBJECT_IO_ATTRIBUTION_STATS$TotalSize$VH_; }

    static final MemoryLayout _JOBOBJECT_IO_ATTRIBUTION_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ControlFlags"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("IoCount"),
            C_LONGLONG.withName("TotalNonOverlappedQueueTime"),
            C_LONGLONG.withName("TotalNonOverlappedServiceTime"),
            C_LONGLONG.withName("TotalSize")
        ).withName("ReadStats"),
        MemoryLayout.ofStruct(
            C_LONGLONG.withName("IoCount"),
            C_LONGLONG.withName("TotalNonOverlappedQueueTime"),
            C_LONGLONG.withName("TotalNonOverlappedServiceTime"),
            C_LONGLONG.withName("TotalSize")
        ).withName("WriteStats")
    ).withName("_JOBOBJECT_IO_ATTRIBUTION_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_IO_ATTRIBUTION_INFORMATION$struct$LAYOUT() { return _JOBOBJECT_IO_ATTRIBUTION_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _JOBOBJECT_IO_ATTRIBUTION_INFORMATION$ControlFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _JOBOBJECT_IO_ATTRIBUTION_INFORMATION$ControlFlags$LAYOUT() { return _JOBOBJECT_IO_ATTRIBUTION_INFORMATION$ControlFlags$LAYOUT_; }

    static final VarHandle _JOBOBJECT_IO_ATTRIBUTION_INFORMATION$ControlFlags$VH_ = _JOBOBJECT_IO_ATTRIBUTION_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ControlFlags"));
    static final java.lang.invoke.VarHandle _JOBOBJECT_IO_ATTRIBUTION_INFORMATION$ControlFlags$VH() { return _JOBOBJECT_IO_ATTRIBUTION_INFORMATION$ControlFlags$VH_; }

    static final int JobObjectBasicAccountingInformation() { return (int)1L; }

    static final int JobObjectBasicLimitInformation() { return (int)2L; }

    static final int JobObjectBasicProcessIdList() { return (int)3L; }

    static final int JobObjectBasicUIRestrictions() { return (int)4L; }

    static final int JobObjectSecurityLimitInformation() { return (int)5L; }

    static final int JobObjectEndOfJobTimeInformation() { return (int)6L; }

    static final int JobObjectAssociateCompletionPortInformation() { return (int)7L; }

    static final int JobObjectBasicAndIoAccountingInformation() { return (int)8L; }

    static final int JobObjectExtendedLimitInformation() { return (int)9L; }

    static final int JobObjectJobSetInformation() { return (int)10L; }

    static final int JobObjectGroupInformation() { return (int)11L; }

    static final int JobObjectNotificationLimitInformation() { return (int)12L; }

    static final int JobObjectLimitViolationInformation() { return (int)13L; }

    static final int JobObjectGroupInformationEx() { return (int)14L; }

    static final int JobObjectCpuRateControlInformation() { return (int)15L; }

    static final int JobObjectCompletionFilter() { return (int)16L; }

    static final int JobObjectCompletionCounter() { return (int)17L; }

    static final int JobObjectReserved1Information() { return (int)18L; }

    static final int JobObjectReserved2Information() { return (int)19L; }

    static final int JobObjectReserved3Information() { return (int)20L; }

    static final int JobObjectReserved4Information() { return (int)21L; }

    static final int JobObjectReserved5Information() { return (int)22L; }

    static final int JobObjectReserved6Information() { return (int)23L; }

    static final int JobObjectReserved7Information() { return (int)24L; }

    static final int JobObjectReserved8Information() { return (int)25L; }

    static final int JobObjectReserved9Information() { return (int)26L; }

    static final int JobObjectReserved10Information() { return (int)27L; }

    static final int JobObjectReserved11Information() { return (int)28L; }

    static final int JobObjectReserved12Information() { return (int)29L; }

    static final int JobObjectReserved13Information() { return (int)30L; }

    static final int JobObjectReserved14Information() { return (int)31L; }

    static final int JobObjectNetRateControlInformation() { return (int)32L; }

    static final int JobObjectNotificationLimitInformation2() { return (int)33L; }

    static final int JobObjectLimitViolationInformation2() { return (int)34L; }

    static final int JobObjectCreateSilo() { return (int)35L; }

    static final int JobObjectSiloBasicInformation() { return (int)36L; }

    static final int JobObjectReserved15Information() { return (int)37L; }

    static final int JobObjectReserved16Information() { return (int)38L; }

    static final int JobObjectReserved17Information() { return (int)39L; }

    static final int JobObjectReserved18Information() { return (int)40L; }

    static final int JobObjectReserved19Information() { return (int)41L; }

    static final int JobObjectReserved20Information() { return (int)42L; }

    static final int JobObjectReserved21Information() { return (int)43L; }

    static final int JobObjectReserved22Information() { return (int)44L; }

    static final int JobObjectReserved23Information() { return (int)45L; }

    static final int JobObjectReserved24Information() { return (int)46L; }

    static final int JobObjectReserved25Information() { return (int)47L; }

    static final int MaxJobObjectInfoClass() { return (int)48L; }

    static final MemoryLayout _SILOOBJECT_BASIC_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("SiloId"),
        C_LONG.withName("SiloParentId"),
        C_LONG.withName("NumberOfProcesses"),
        C_CHAR.withName("IsInServerSilo"),
        MemoryLayout.ofSequence(3, C_CHAR).withName("Reserved")
    ).withName("_SILOOBJECT_BASIC_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _SILOOBJECT_BASIC_INFORMATION$struct$LAYOUT() { return _SILOOBJECT_BASIC_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _SILOOBJECT_BASIC_INFORMATION$SiloId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SILOOBJECT_BASIC_INFORMATION$SiloId$LAYOUT() { return _SILOOBJECT_BASIC_INFORMATION$SiloId$LAYOUT_; }

    static final VarHandle _SILOOBJECT_BASIC_INFORMATION$SiloId$VH_ = _SILOOBJECT_BASIC_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SiloId"));
    static final java.lang.invoke.VarHandle _SILOOBJECT_BASIC_INFORMATION$SiloId$VH() { return _SILOOBJECT_BASIC_INFORMATION$SiloId$VH_; }

    static final MemoryLayout _SILOOBJECT_BASIC_INFORMATION$SiloParentId$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SILOOBJECT_BASIC_INFORMATION$SiloParentId$LAYOUT() { return _SILOOBJECT_BASIC_INFORMATION$SiloParentId$LAYOUT_; }

    static final VarHandle _SILOOBJECT_BASIC_INFORMATION$SiloParentId$VH_ = _SILOOBJECT_BASIC_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SiloParentId"));
    static final java.lang.invoke.VarHandle _SILOOBJECT_BASIC_INFORMATION$SiloParentId$VH() { return _SILOOBJECT_BASIC_INFORMATION$SiloParentId$VH_; }

    static final MemoryLayout _SILOOBJECT_BASIC_INFORMATION$NumberOfProcesses$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _SILOOBJECT_BASIC_INFORMATION$NumberOfProcesses$LAYOUT() { return _SILOOBJECT_BASIC_INFORMATION$NumberOfProcesses$LAYOUT_; }

    static final VarHandle _SILOOBJECT_BASIC_INFORMATION$NumberOfProcesses$VH_ = _SILOOBJECT_BASIC_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfProcesses"));
    static final java.lang.invoke.VarHandle _SILOOBJECT_BASIC_INFORMATION$NumberOfProcesses$VH() { return _SILOOBJECT_BASIC_INFORMATION$NumberOfProcesses$VH_; }

}

