// Generated by jextract

package com.github.tornaia.foreign.win.api.winnt.internal;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class winnt_h$constants$10 extends winnt_h$constants$9 {

    /* package-private */ winnt_h$constants$10() {}
    static final MemoryLayout _IMAGE_EXPORT_DIRECTORY$AddressOfNames$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_EXPORT_DIRECTORY$AddressOfNames$LAYOUT() { return _IMAGE_EXPORT_DIRECTORY$AddressOfNames$LAYOUT_; }

    static final VarHandle _IMAGE_EXPORT_DIRECTORY$AddressOfNames$VH_ = _IMAGE_EXPORT_DIRECTORY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AddressOfNames"));
    static final java.lang.invoke.VarHandle _IMAGE_EXPORT_DIRECTORY$AddressOfNames$VH() { return _IMAGE_EXPORT_DIRECTORY$AddressOfNames$VH_; }

    static final MemoryLayout _IMAGE_EXPORT_DIRECTORY$AddressOfNameOrdinals$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_EXPORT_DIRECTORY$AddressOfNameOrdinals$LAYOUT() { return _IMAGE_EXPORT_DIRECTORY$AddressOfNameOrdinals$LAYOUT_; }

    static final VarHandle _IMAGE_EXPORT_DIRECTORY$AddressOfNameOrdinals$VH_ = _IMAGE_EXPORT_DIRECTORY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AddressOfNameOrdinals"));
    static final java.lang.invoke.VarHandle _IMAGE_EXPORT_DIRECTORY$AddressOfNameOrdinals$VH() { return _IMAGE_EXPORT_DIRECTORY$AddressOfNameOrdinals$VH_; }

    static final MemoryLayout _IMAGE_IMPORT_BY_NAME$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("Hint"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("Name"),
        MemoryLayout.ofPaddingBits(8)
    ).withName("_IMAGE_IMPORT_BY_NAME");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_IMPORT_BY_NAME$struct$LAYOUT() { return _IMAGE_IMPORT_BY_NAME$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_IMPORT_BY_NAME$Hint$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_IMPORT_BY_NAME$Hint$LAYOUT() { return _IMAGE_IMPORT_BY_NAME$Hint$LAYOUT_; }

    static final VarHandle _IMAGE_IMPORT_BY_NAME$Hint$VH_ = _IMAGE_IMPORT_BY_NAME$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Hint"));
    static final java.lang.invoke.VarHandle _IMAGE_IMPORT_BY_NAME$Hint$VH() { return _IMAGE_IMPORT_BY_NAME$Hint$VH_; }

    static final MemoryLayout _IMAGE_THUNK_DATA64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONGLONG.withName("ForwarderString"),
            C_LONGLONG.withName("Function"),
            C_LONGLONG.withName("Ordinal"),
            C_LONGLONG.withName("AddressOfData")
        ).withName("u1")
    ).withName("_IMAGE_THUNK_DATA64");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_THUNK_DATA64$struct$LAYOUT() { return _IMAGE_THUNK_DATA64$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_THUNK_DATA64$u1$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONGLONG.withName("ForwarderString"),
        C_LONGLONG.withName("Function"),
        C_LONGLONG.withName("Ordinal"),
        C_LONGLONG.withName("AddressOfData")
    );
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_THUNK_DATA64$u1$union$LAYOUT() { return _IMAGE_THUNK_DATA64$u1$union$LAYOUT_; }

    static final MemoryLayout _IMAGE_THUNK_DATA64$u1$ForwarderString$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_THUNK_DATA64$u1$ForwarderString$LAYOUT() { return _IMAGE_THUNK_DATA64$u1$ForwarderString$LAYOUT_; }

    static final VarHandle _IMAGE_THUNK_DATA64$u1$ForwarderString$VH_ = _IMAGE_THUNK_DATA64$u1$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ForwarderString"));
    static final java.lang.invoke.VarHandle _IMAGE_THUNK_DATA64$u1$ForwarderString$VH() { return _IMAGE_THUNK_DATA64$u1$ForwarderString$VH_; }

    static final MemoryLayout _IMAGE_THUNK_DATA64$u1$Function$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_THUNK_DATA64$u1$Function$LAYOUT() { return _IMAGE_THUNK_DATA64$u1$Function$LAYOUT_; }

    static final VarHandle _IMAGE_THUNK_DATA64$u1$Function$VH_ = _IMAGE_THUNK_DATA64$u1$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Function"));
    static final java.lang.invoke.VarHandle _IMAGE_THUNK_DATA64$u1$Function$VH() { return _IMAGE_THUNK_DATA64$u1$Function$VH_; }

    static final MemoryLayout _IMAGE_THUNK_DATA64$u1$Ordinal$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_THUNK_DATA64$u1$Ordinal$LAYOUT() { return _IMAGE_THUNK_DATA64$u1$Ordinal$LAYOUT_; }

    static final VarHandle _IMAGE_THUNK_DATA64$u1$Ordinal$VH_ = _IMAGE_THUNK_DATA64$u1$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Ordinal"));
    static final java.lang.invoke.VarHandle _IMAGE_THUNK_DATA64$u1$Ordinal$VH() { return _IMAGE_THUNK_DATA64$u1$Ordinal$VH_; }

    static final MemoryLayout _IMAGE_THUNK_DATA64$u1$AddressOfData$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_THUNK_DATA64$u1$AddressOfData$LAYOUT() { return _IMAGE_THUNK_DATA64$u1$AddressOfData$LAYOUT_; }

    static final VarHandle _IMAGE_THUNK_DATA64$u1$AddressOfData$VH_ = _IMAGE_THUNK_DATA64$u1$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddressOfData"));
    static final java.lang.invoke.VarHandle _IMAGE_THUNK_DATA64$u1$AddressOfData$VH() { return _IMAGE_THUNK_DATA64$u1$AddressOfData$VH_; }

    static final MemoryLayout _IMAGE_THUNK_DATA32$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONG.withName("ForwarderString"),
            C_LONG.withName("Function"),
            C_LONG.withName("Ordinal"),
            C_LONG.withName("AddressOfData")
        ).withName("u1")
    ).withName("_IMAGE_THUNK_DATA32");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_THUNK_DATA32$struct$LAYOUT() { return _IMAGE_THUNK_DATA32$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_THUNK_DATA32$u1$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONG.withName("ForwarderString"),
        C_LONG.withName("Function"),
        C_LONG.withName("Ordinal"),
        C_LONG.withName("AddressOfData")
    );
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_THUNK_DATA32$u1$union$LAYOUT() { return _IMAGE_THUNK_DATA32$u1$union$LAYOUT_; }

    static final MemoryLayout _IMAGE_THUNK_DATA32$u1$ForwarderString$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_THUNK_DATA32$u1$ForwarderString$LAYOUT() { return _IMAGE_THUNK_DATA32$u1$ForwarderString$LAYOUT_; }

    static final VarHandle _IMAGE_THUNK_DATA32$u1$ForwarderString$VH_ = _IMAGE_THUNK_DATA32$u1$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ForwarderString"));
    static final java.lang.invoke.VarHandle _IMAGE_THUNK_DATA32$u1$ForwarderString$VH() { return _IMAGE_THUNK_DATA32$u1$ForwarderString$VH_; }

    static final MemoryLayout _IMAGE_THUNK_DATA32$u1$Function$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_THUNK_DATA32$u1$Function$LAYOUT() { return _IMAGE_THUNK_DATA32$u1$Function$LAYOUT_; }

    static final VarHandle _IMAGE_THUNK_DATA32$u1$Function$VH_ = _IMAGE_THUNK_DATA32$u1$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Function"));
    static final java.lang.invoke.VarHandle _IMAGE_THUNK_DATA32$u1$Function$VH() { return _IMAGE_THUNK_DATA32$u1$Function$VH_; }

    static final MemoryLayout _IMAGE_THUNK_DATA32$u1$Ordinal$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_THUNK_DATA32$u1$Ordinal$LAYOUT() { return _IMAGE_THUNK_DATA32$u1$Ordinal$LAYOUT_; }

    static final VarHandle _IMAGE_THUNK_DATA32$u1$Ordinal$VH_ = _IMAGE_THUNK_DATA32$u1$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Ordinal"));
    static final java.lang.invoke.VarHandle _IMAGE_THUNK_DATA32$u1$Ordinal$VH() { return _IMAGE_THUNK_DATA32$u1$Ordinal$VH_; }

    static final MemoryLayout _IMAGE_THUNK_DATA32$u1$AddressOfData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_THUNK_DATA32$u1$AddressOfData$LAYOUT() { return _IMAGE_THUNK_DATA32$u1$AddressOfData$LAYOUT_; }

    static final VarHandle _IMAGE_THUNK_DATA32$u1$AddressOfData$VH_ = _IMAGE_THUNK_DATA32$u1$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AddressOfData"));
    static final java.lang.invoke.VarHandle _IMAGE_THUNK_DATA32$u1$AddressOfData$VH() { return _IMAGE_THUNK_DATA32$u1$AddressOfData$VH_; }

    static final MemoryLayout _IMAGE_TLS_DIRECTORY64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("StartAddressOfRawData"),
        C_LONGLONG.withName("EndAddressOfRawData"),
        C_LONGLONG.withName("AddressOfIndex"),
        C_LONGLONG.withName("AddressOfCallBacks"),
        C_LONG.withName("SizeOfZeroFill"),
        C_LONG.withName("Characteristics"),
        C_INT
    ).withName("_IMAGE_TLS_DIRECTORY64");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_TLS_DIRECTORY64$struct$LAYOUT() { return _IMAGE_TLS_DIRECTORY64$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_TLS_DIRECTORY64$StartAddressOfRawData$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_TLS_DIRECTORY64$StartAddressOfRawData$LAYOUT() { return _IMAGE_TLS_DIRECTORY64$StartAddressOfRawData$LAYOUT_; }

    static final VarHandle _IMAGE_TLS_DIRECTORY64$StartAddressOfRawData$VH_ = _IMAGE_TLS_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StartAddressOfRawData"));
    static final java.lang.invoke.VarHandle _IMAGE_TLS_DIRECTORY64$StartAddressOfRawData$VH() { return _IMAGE_TLS_DIRECTORY64$StartAddressOfRawData$VH_; }

    static final MemoryLayout _IMAGE_TLS_DIRECTORY64$EndAddressOfRawData$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_TLS_DIRECTORY64$EndAddressOfRawData$LAYOUT() { return _IMAGE_TLS_DIRECTORY64$EndAddressOfRawData$LAYOUT_; }

    static final VarHandle _IMAGE_TLS_DIRECTORY64$EndAddressOfRawData$VH_ = _IMAGE_TLS_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EndAddressOfRawData"));
    static final java.lang.invoke.VarHandle _IMAGE_TLS_DIRECTORY64$EndAddressOfRawData$VH() { return _IMAGE_TLS_DIRECTORY64$EndAddressOfRawData$VH_; }

    static final MemoryLayout _IMAGE_TLS_DIRECTORY64$AddressOfIndex$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_TLS_DIRECTORY64$AddressOfIndex$LAYOUT() { return _IMAGE_TLS_DIRECTORY64$AddressOfIndex$LAYOUT_; }

    static final VarHandle _IMAGE_TLS_DIRECTORY64$AddressOfIndex$VH_ = _IMAGE_TLS_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddressOfIndex"));
    static final java.lang.invoke.VarHandle _IMAGE_TLS_DIRECTORY64$AddressOfIndex$VH() { return _IMAGE_TLS_DIRECTORY64$AddressOfIndex$VH_; }

    static final MemoryLayout _IMAGE_TLS_DIRECTORY64$AddressOfCallBacks$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_TLS_DIRECTORY64$AddressOfCallBacks$LAYOUT() { return _IMAGE_TLS_DIRECTORY64$AddressOfCallBacks$LAYOUT_; }

    static final VarHandle _IMAGE_TLS_DIRECTORY64$AddressOfCallBacks$VH_ = _IMAGE_TLS_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AddressOfCallBacks"));
    static final java.lang.invoke.VarHandle _IMAGE_TLS_DIRECTORY64$AddressOfCallBacks$VH() { return _IMAGE_TLS_DIRECTORY64$AddressOfCallBacks$VH_; }

    static final MemoryLayout _IMAGE_TLS_DIRECTORY64$SizeOfZeroFill$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_TLS_DIRECTORY64$SizeOfZeroFill$LAYOUT() { return _IMAGE_TLS_DIRECTORY64$SizeOfZeroFill$LAYOUT_; }

    static final VarHandle _IMAGE_TLS_DIRECTORY64$SizeOfZeroFill$VH_ = _IMAGE_TLS_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SizeOfZeroFill"));
    static final java.lang.invoke.VarHandle _IMAGE_TLS_DIRECTORY64$SizeOfZeroFill$VH() { return _IMAGE_TLS_DIRECTORY64$SizeOfZeroFill$VH_; }

    static final MemoryLayout _IMAGE_TLS_DIRECTORY64$Characteristics$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_TLS_DIRECTORY64$Characteristics$LAYOUT() { return _IMAGE_TLS_DIRECTORY64$Characteristics$LAYOUT_; }

    static final VarHandle _IMAGE_TLS_DIRECTORY64$Characteristics$VH_ = _IMAGE_TLS_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Characteristics"));
    static final java.lang.invoke.VarHandle _IMAGE_TLS_DIRECTORY64$Characteristics$VH() { return _IMAGE_TLS_DIRECTORY64$Characteristics$VH_; }

    static final MemoryLayout _IMAGE_TLS_DIRECTORY32$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("StartAddressOfRawData"),
        C_LONG.withName("EndAddressOfRawData"),
        C_LONG.withName("AddressOfIndex"),
        C_LONG.withName("AddressOfCallBacks"),
        C_LONG.withName("SizeOfZeroFill"),
        C_LONG.withName("Characteristics"),
        C_INT
    ).withName("_IMAGE_TLS_DIRECTORY32");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_TLS_DIRECTORY32$struct$LAYOUT() { return _IMAGE_TLS_DIRECTORY32$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_TLS_DIRECTORY32$StartAddressOfRawData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_TLS_DIRECTORY32$StartAddressOfRawData$LAYOUT() { return _IMAGE_TLS_DIRECTORY32$StartAddressOfRawData$LAYOUT_; }

    static final VarHandle _IMAGE_TLS_DIRECTORY32$StartAddressOfRawData$VH_ = _IMAGE_TLS_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StartAddressOfRawData"));
    static final java.lang.invoke.VarHandle _IMAGE_TLS_DIRECTORY32$StartAddressOfRawData$VH() { return _IMAGE_TLS_DIRECTORY32$StartAddressOfRawData$VH_; }

    static final MemoryLayout _IMAGE_TLS_DIRECTORY32$EndAddressOfRawData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_TLS_DIRECTORY32$EndAddressOfRawData$LAYOUT() { return _IMAGE_TLS_DIRECTORY32$EndAddressOfRawData$LAYOUT_; }

    static final VarHandle _IMAGE_TLS_DIRECTORY32$EndAddressOfRawData$VH_ = _IMAGE_TLS_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EndAddressOfRawData"));
    static final java.lang.invoke.VarHandle _IMAGE_TLS_DIRECTORY32$EndAddressOfRawData$VH() { return _IMAGE_TLS_DIRECTORY32$EndAddressOfRawData$VH_; }

    static final MemoryLayout _IMAGE_TLS_DIRECTORY32$AddressOfIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_TLS_DIRECTORY32$AddressOfIndex$LAYOUT() { return _IMAGE_TLS_DIRECTORY32$AddressOfIndex$LAYOUT_; }

    static final VarHandle _IMAGE_TLS_DIRECTORY32$AddressOfIndex$VH_ = _IMAGE_TLS_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AddressOfIndex"));
    static final java.lang.invoke.VarHandle _IMAGE_TLS_DIRECTORY32$AddressOfIndex$VH() { return _IMAGE_TLS_DIRECTORY32$AddressOfIndex$VH_; }

    static final MemoryLayout _IMAGE_TLS_DIRECTORY32$AddressOfCallBacks$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_TLS_DIRECTORY32$AddressOfCallBacks$LAYOUT() { return _IMAGE_TLS_DIRECTORY32$AddressOfCallBacks$LAYOUT_; }

    static final VarHandle _IMAGE_TLS_DIRECTORY32$AddressOfCallBacks$VH_ = _IMAGE_TLS_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AddressOfCallBacks"));
    static final java.lang.invoke.VarHandle _IMAGE_TLS_DIRECTORY32$AddressOfCallBacks$VH() { return _IMAGE_TLS_DIRECTORY32$AddressOfCallBacks$VH_; }

    static final MemoryLayout _IMAGE_TLS_DIRECTORY32$SizeOfZeroFill$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_TLS_DIRECTORY32$SizeOfZeroFill$LAYOUT() { return _IMAGE_TLS_DIRECTORY32$SizeOfZeroFill$LAYOUT_; }

    static final VarHandle _IMAGE_TLS_DIRECTORY32$SizeOfZeroFill$VH_ = _IMAGE_TLS_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SizeOfZeroFill"));
    static final java.lang.invoke.VarHandle _IMAGE_TLS_DIRECTORY32$SizeOfZeroFill$VH() { return _IMAGE_TLS_DIRECTORY32$SizeOfZeroFill$VH_; }

    static final MemoryLayout _IMAGE_TLS_DIRECTORY32$Characteristics$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_TLS_DIRECTORY32$Characteristics$LAYOUT() { return _IMAGE_TLS_DIRECTORY32$Characteristics$LAYOUT_; }

    static final VarHandle _IMAGE_TLS_DIRECTORY32$Characteristics$VH_ = _IMAGE_TLS_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Characteristics"));
    static final java.lang.invoke.VarHandle _IMAGE_TLS_DIRECTORY32$Characteristics$VH() { return _IMAGE_TLS_DIRECTORY32$Characteristics$VH_; }

    static final MemoryLayout _IMAGE_IMPORT_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Characteristics"),
        C_LONG.withName("OriginalFirstThunk"),
        C_LONG.withName("TimeDateStamp"),
        C_LONG.withName("ForwarderChain"),
        C_LONG.withName("Name"),
        C_LONG.withName("FirstThunk")
    ).withName("_IMAGE_IMPORT_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_IMPORT_DESCRIPTOR$struct$LAYOUT() { return _IMAGE_IMPORT_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_IMPORT_DESCRIPTOR$Characteristics$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_IMPORT_DESCRIPTOR$Characteristics$LAYOUT() { return _IMAGE_IMPORT_DESCRIPTOR$Characteristics$LAYOUT_; }

    static final VarHandle _IMAGE_IMPORT_DESCRIPTOR$Characteristics$VH_ = _IMAGE_IMPORT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Characteristics"));
    static final java.lang.invoke.VarHandle _IMAGE_IMPORT_DESCRIPTOR$Characteristics$VH() { return _IMAGE_IMPORT_DESCRIPTOR$Characteristics$VH_; }

    static final MemoryLayout _IMAGE_IMPORT_DESCRIPTOR$OriginalFirstThunk$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_IMPORT_DESCRIPTOR$OriginalFirstThunk$LAYOUT() { return _IMAGE_IMPORT_DESCRIPTOR$OriginalFirstThunk$LAYOUT_; }

    static final VarHandle _IMAGE_IMPORT_DESCRIPTOR$OriginalFirstThunk$VH_ = _IMAGE_IMPORT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OriginalFirstThunk"));
    static final java.lang.invoke.VarHandle _IMAGE_IMPORT_DESCRIPTOR$OriginalFirstThunk$VH() { return _IMAGE_IMPORT_DESCRIPTOR$OriginalFirstThunk$VH_; }

    static final MemoryLayout _IMAGE_IMPORT_DESCRIPTOR$TimeDateStamp$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_IMPORT_DESCRIPTOR$TimeDateStamp$LAYOUT() { return _IMAGE_IMPORT_DESCRIPTOR$TimeDateStamp$LAYOUT_; }

    static final VarHandle _IMAGE_IMPORT_DESCRIPTOR$TimeDateStamp$VH_ = _IMAGE_IMPORT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TimeDateStamp"));
    static final java.lang.invoke.VarHandle _IMAGE_IMPORT_DESCRIPTOR$TimeDateStamp$VH() { return _IMAGE_IMPORT_DESCRIPTOR$TimeDateStamp$VH_; }

    static final MemoryLayout _IMAGE_IMPORT_DESCRIPTOR$ForwarderChain$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_IMPORT_DESCRIPTOR$ForwarderChain$LAYOUT() { return _IMAGE_IMPORT_DESCRIPTOR$ForwarderChain$LAYOUT_; }

    static final VarHandle _IMAGE_IMPORT_DESCRIPTOR$ForwarderChain$VH_ = _IMAGE_IMPORT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ForwarderChain"));
    static final java.lang.invoke.VarHandle _IMAGE_IMPORT_DESCRIPTOR$ForwarderChain$VH() { return _IMAGE_IMPORT_DESCRIPTOR$ForwarderChain$VH_; }

    static final MemoryLayout _IMAGE_IMPORT_DESCRIPTOR$Name$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_IMPORT_DESCRIPTOR$Name$LAYOUT() { return _IMAGE_IMPORT_DESCRIPTOR$Name$LAYOUT_; }

    static final VarHandle _IMAGE_IMPORT_DESCRIPTOR$Name$VH_ = _IMAGE_IMPORT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Name"));
    static final java.lang.invoke.VarHandle _IMAGE_IMPORT_DESCRIPTOR$Name$VH() { return _IMAGE_IMPORT_DESCRIPTOR$Name$VH_; }

    static final MemoryLayout _IMAGE_IMPORT_DESCRIPTOR$FirstThunk$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_IMPORT_DESCRIPTOR$FirstThunk$LAYOUT() { return _IMAGE_IMPORT_DESCRIPTOR$FirstThunk$LAYOUT_; }

    static final VarHandle _IMAGE_IMPORT_DESCRIPTOR$FirstThunk$VH_ = _IMAGE_IMPORT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FirstThunk"));
    static final java.lang.invoke.VarHandle _IMAGE_IMPORT_DESCRIPTOR$FirstThunk$VH() { return _IMAGE_IMPORT_DESCRIPTOR$FirstThunk$VH_; }

    static final MemoryLayout _IMAGE_BOUND_IMPORT_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("TimeDateStamp"),
        C_SHORT.withName("OffsetModuleName"),
        C_SHORT.withName("NumberOfModuleForwarderRefs")
    ).withName("_IMAGE_BOUND_IMPORT_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_BOUND_IMPORT_DESCRIPTOR$struct$LAYOUT() { return _IMAGE_BOUND_IMPORT_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_BOUND_IMPORT_DESCRIPTOR$TimeDateStamp$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_BOUND_IMPORT_DESCRIPTOR$TimeDateStamp$LAYOUT() { return _IMAGE_BOUND_IMPORT_DESCRIPTOR$TimeDateStamp$LAYOUT_; }

    static final VarHandle _IMAGE_BOUND_IMPORT_DESCRIPTOR$TimeDateStamp$VH_ = _IMAGE_BOUND_IMPORT_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TimeDateStamp"));
    static final java.lang.invoke.VarHandle _IMAGE_BOUND_IMPORT_DESCRIPTOR$TimeDateStamp$VH() { return _IMAGE_BOUND_IMPORT_DESCRIPTOR$TimeDateStamp$VH_; }

    static final MemoryLayout _IMAGE_BOUND_IMPORT_DESCRIPTOR$OffsetModuleName$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_BOUND_IMPORT_DESCRIPTOR$OffsetModuleName$LAYOUT() { return _IMAGE_BOUND_IMPORT_DESCRIPTOR$OffsetModuleName$LAYOUT_; }

    static final VarHandle _IMAGE_BOUND_IMPORT_DESCRIPTOR$OffsetModuleName$VH_ = _IMAGE_BOUND_IMPORT_DESCRIPTOR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("OffsetModuleName"));
    static final java.lang.invoke.VarHandle _IMAGE_BOUND_IMPORT_DESCRIPTOR$OffsetModuleName$VH() { return _IMAGE_BOUND_IMPORT_DESCRIPTOR$OffsetModuleName$VH_; }

    static final MemoryLayout _IMAGE_BOUND_IMPORT_DESCRIPTOR$NumberOfModuleForwarderRefs$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_BOUND_IMPORT_DESCRIPTOR$NumberOfModuleForwarderRefs$LAYOUT() { return _IMAGE_BOUND_IMPORT_DESCRIPTOR$NumberOfModuleForwarderRefs$LAYOUT_; }

    static final VarHandle _IMAGE_BOUND_IMPORT_DESCRIPTOR$NumberOfModuleForwarderRefs$VH_ = _IMAGE_BOUND_IMPORT_DESCRIPTOR$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("NumberOfModuleForwarderRefs"));
    static final java.lang.invoke.VarHandle _IMAGE_BOUND_IMPORT_DESCRIPTOR$NumberOfModuleForwarderRefs$VH() { return _IMAGE_BOUND_IMPORT_DESCRIPTOR$NumberOfModuleForwarderRefs$VH_; }

    static final MemoryLayout _IMAGE_BOUND_FORWARDER_REF$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("TimeDateStamp"),
        C_SHORT.withName("OffsetModuleName"),
        C_SHORT.withName("Reserved")
    ).withName("_IMAGE_BOUND_FORWARDER_REF");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_BOUND_FORWARDER_REF$struct$LAYOUT() { return _IMAGE_BOUND_FORWARDER_REF$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_BOUND_FORWARDER_REF$TimeDateStamp$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_BOUND_FORWARDER_REF$TimeDateStamp$LAYOUT() { return _IMAGE_BOUND_FORWARDER_REF$TimeDateStamp$LAYOUT_; }

    static final VarHandle _IMAGE_BOUND_FORWARDER_REF$TimeDateStamp$VH_ = _IMAGE_BOUND_FORWARDER_REF$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TimeDateStamp"));
    static final java.lang.invoke.VarHandle _IMAGE_BOUND_FORWARDER_REF$TimeDateStamp$VH() { return _IMAGE_BOUND_FORWARDER_REF$TimeDateStamp$VH_; }

    static final MemoryLayout _IMAGE_BOUND_FORWARDER_REF$OffsetModuleName$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_BOUND_FORWARDER_REF$OffsetModuleName$LAYOUT() { return _IMAGE_BOUND_FORWARDER_REF$OffsetModuleName$LAYOUT_; }

    static final VarHandle _IMAGE_BOUND_FORWARDER_REF$OffsetModuleName$VH_ = _IMAGE_BOUND_FORWARDER_REF$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("OffsetModuleName"));
    static final java.lang.invoke.VarHandle _IMAGE_BOUND_FORWARDER_REF$OffsetModuleName$VH() { return _IMAGE_BOUND_FORWARDER_REF$OffsetModuleName$VH_; }

    static final MemoryLayout _IMAGE_BOUND_FORWARDER_REF$Reserved$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_BOUND_FORWARDER_REF$Reserved$LAYOUT() { return _IMAGE_BOUND_FORWARDER_REF$Reserved$LAYOUT_; }

    static final VarHandle _IMAGE_BOUND_FORWARDER_REF$Reserved$VH_ = _IMAGE_BOUND_FORWARDER_REF$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _IMAGE_BOUND_FORWARDER_REF$Reserved$VH() { return _IMAGE_BOUND_FORWARDER_REF$Reserved$VH_; }

    static final MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONG.withName("AllAttributes"),
            C_INT
        ).withName("Attributes"),
        C_LONG.withName("DllNameRVA"),
        C_LONG.withName("ModuleHandleRVA"),
        C_LONG.withName("ImportAddressTableRVA"),
        C_LONG.withName("ImportNameTableRVA"),
        C_LONG.withName("BoundImportAddressTableRVA"),
        C_LONG.withName("UnloadInformationTableRVA"),
        C_LONG.withName("TimeDateStamp")
    ).withName("_IMAGE_DELAYLOAD_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$struct$LAYOUT() { return _IMAGE_DELAYLOAD_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$Attributes$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONG.withName("AllAttributes"),
        C_INT
    );
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$Attributes$union$LAYOUT() { return _IMAGE_DELAYLOAD_DESCRIPTOR$Attributes$union$LAYOUT_; }

    static final MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$Attributes$AllAttributes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$Attributes$AllAttributes$LAYOUT() { return _IMAGE_DELAYLOAD_DESCRIPTOR$Attributes$AllAttributes$LAYOUT_; }

    static final VarHandle _IMAGE_DELAYLOAD_DESCRIPTOR$Attributes$AllAttributes$VH_ = _IMAGE_DELAYLOAD_DESCRIPTOR$Attributes$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AllAttributes"));
    static final java.lang.invoke.VarHandle _IMAGE_DELAYLOAD_DESCRIPTOR$Attributes$AllAttributes$VH() { return _IMAGE_DELAYLOAD_DESCRIPTOR$Attributes$AllAttributes$VH_; }

    static final MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$DllNameRVA$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$DllNameRVA$LAYOUT() { return _IMAGE_DELAYLOAD_DESCRIPTOR$DllNameRVA$LAYOUT_; }

    static final VarHandle _IMAGE_DELAYLOAD_DESCRIPTOR$DllNameRVA$VH_ = _IMAGE_DELAYLOAD_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DllNameRVA"));
    static final java.lang.invoke.VarHandle _IMAGE_DELAYLOAD_DESCRIPTOR$DllNameRVA$VH() { return _IMAGE_DELAYLOAD_DESCRIPTOR$DllNameRVA$VH_; }

    static final MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$ModuleHandleRVA$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$ModuleHandleRVA$LAYOUT() { return _IMAGE_DELAYLOAD_DESCRIPTOR$ModuleHandleRVA$LAYOUT_; }

    static final VarHandle _IMAGE_DELAYLOAD_DESCRIPTOR$ModuleHandleRVA$VH_ = _IMAGE_DELAYLOAD_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ModuleHandleRVA"));
    static final java.lang.invoke.VarHandle _IMAGE_DELAYLOAD_DESCRIPTOR$ModuleHandleRVA$VH() { return _IMAGE_DELAYLOAD_DESCRIPTOR$ModuleHandleRVA$VH_; }

    static final MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$ImportAddressTableRVA$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$ImportAddressTableRVA$LAYOUT() { return _IMAGE_DELAYLOAD_DESCRIPTOR$ImportAddressTableRVA$LAYOUT_; }

    static final VarHandle _IMAGE_DELAYLOAD_DESCRIPTOR$ImportAddressTableRVA$VH_ = _IMAGE_DELAYLOAD_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImportAddressTableRVA"));
    static final java.lang.invoke.VarHandle _IMAGE_DELAYLOAD_DESCRIPTOR$ImportAddressTableRVA$VH() { return _IMAGE_DELAYLOAD_DESCRIPTOR$ImportAddressTableRVA$VH_; }

    static final MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$ImportNameTableRVA$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$ImportNameTableRVA$LAYOUT() { return _IMAGE_DELAYLOAD_DESCRIPTOR$ImportNameTableRVA$LAYOUT_; }

    static final VarHandle _IMAGE_DELAYLOAD_DESCRIPTOR$ImportNameTableRVA$VH_ = _IMAGE_DELAYLOAD_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImportNameTableRVA"));
    static final java.lang.invoke.VarHandle _IMAGE_DELAYLOAD_DESCRIPTOR$ImportNameTableRVA$VH() { return _IMAGE_DELAYLOAD_DESCRIPTOR$ImportNameTableRVA$VH_; }

    static final MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$BoundImportAddressTableRVA$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$BoundImportAddressTableRVA$LAYOUT() { return _IMAGE_DELAYLOAD_DESCRIPTOR$BoundImportAddressTableRVA$LAYOUT_; }

    static final VarHandle _IMAGE_DELAYLOAD_DESCRIPTOR$BoundImportAddressTableRVA$VH_ = _IMAGE_DELAYLOAD_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BoundImportAddressTableRVA"));
    static final java.lang.invoke.VarHandle _IMAGE_DELAYLOAD_DESCRIPTOR$BoundImportAddressTableRVA$VH() { return _IMAGE_DELAYLOAD_DESCRIPTOR$BoundImportAddressTableRVA$VH_; }

    static final MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$UnloadInformationTableRVA$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$UnloadInformationTableRVA$LAYOUT() { return _IMAGE_DELAYLOAD_DESCRIPTOR$UnloadInformationTableRVA$LAYOUT_; }

    static final VarHandle _IMAGE_DELAYLOAD_DESCRIPTOR$UnloadInformationTableRVA$VH_ = _IMAGE_DELAYLOAD_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UnloadInformationTableRVA"));
    static final java.lang.invoke.VarHandle _IMAGE_DELAYLOAD_DESCRIPTOR$UnloadInformationTableRVA$VH() { return _IMAGE_DELAYLOAD_DESCRIPTOR$UnloadInformationTableRVA$VH_; }

    static final MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$TimeDateStamp$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DELAYLOAD_DESCRIPTOR$TimeDateStamp$LAYOUT() { return _IMAGE_DELAYLOAD_DESCRIPTOR$TimeDateStamp$LAYOUT_; }

    static final VarHandle _IMAGE_DELAYLOAD_DESCRIPTOR$TimeDateStamp$VH_ = _IMAGE_DELAYLOAD_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TimeDateStamp"));
    static final java.lang.invoke.VarHandle _IMAGE_DELAYLOAD_DESCRIPTOR$TimeDateStamp$VH() { return _IMAGE_DELAYLOAD_DESCRIPTOR$TimeDateStamp$VH_; }

    static final MemoryLayout _IMAGE_RESOURCE_DIRECTORY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Characteristics"),
        C_LONG.withName("TimeDateStamp"),
        C_SHORT.withName("MajorVersion"),
        C_SHORT.withName("MinorVersion"),
        C_SHORT.withName("NumberOfNamedEntries"),
        C_SHORT.withName("NumberOfIdEntries")
    ).withName("_IMAGE_RESOURCE_DIRECTORY");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DIRECTORY$struct$LAYOUT() { return _IMAGE_RESOURCE_DIRECTORY$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_RESOURCE_DIRECTORY$Characteristics$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DIRECTORY$Characteristics$LAYOUT() { return _IMAGE_RESOURCE_DIRECTORY$Characteristics$LAYOUT_; }

    static final VarHandle _IMAGE_RESOURCE_DIRECTORY$Characteristics$VH_ = _IMAGE_RESOURCE_DIRECTORY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Characteristics"));
    static final java.lang.invoke.VarHandle _IMAGE_RESOURCE_DIRECTORY$Characteristics$VH() { return _IMAGE_RESOURCE_DIRECTORY$Characteristics$VH_; }

    static final MemoryLayout _IMAGE_RESOURCE_DIRECTORY$TimeDateStamp$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DIRECTORY$TimeDateStamp$LAYOUT() { return _IMAGE_RESOURCE_DIRECTORY$TimeDateStamp$LAYOUT_; }

    static final VarHandle _IMAGE_RESOURCE_DIRECTORY$TimeDateStamp$VH_ = _IMAGE_RESOURCE_DIRECTORY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TimeDateStamp"));
    static final java.lang.invoke.VarHandle _IMAGE_RESOURCE_DIRECTORY$TimeDateStamp$VH() { return _IMAGE_RESOURCE_DIRECTORY$TimeDateStamp$VH_; }

    static final MemoryLayout _IMAGE_RESOURCE_DIRECTORY$MajorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DIRECTORY$MajorVersion$LAYOUT() { return _IMAGE_RESOURCE_DIRECTORY$MajorVersion$LAYOUT_; }

    static final VarHandle _IMAGE_RESOURCE_DIRECTORY$MajorVersion$VH_ = _IMAGE_RESOURCE_DIRECTORY$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MajorVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_RESOURCE_DIRECTORY$MajorVersion$VH() { return _IMAGE_RESOURCE_DIRECTORY$MajorVersion$VH_; }

    static final MemoryLayout _IMAGE_RESOURCE_DIRECTORY$MinorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DIRECTORY$MinorVersion$LAYOUT() { return _IMAGE_RESOURCE_DIRECTORY$MinorVersion$LAYOUT_; }

    static final VarHandle _IMAGE_RESOURCE_DIRECTORY$MinorVersion$VH_ = _IMAGE_RESOURCE_DIRECTORY$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MinorVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_RESOURCE_DIRECTORY$MinorVersion$VH() { return _IMAGE_RESOURCE_DIRECTORY$MinorVersion$VH_; }

    static final MemoryLayout _IMAGE_RESOURCE_DIRECTORY$NumberOfNamedEntries$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DIRECTORY$NumberOfNamedEntries$LAYOUT() { return _IMAGE_RESOURCE_DIRECTORY$NumberOfNamedEntries$LAYOUT_; }

    static final VarHandle _IMAGE_RESOURCE_DIRECTORY$NumberOfNamedEntries$VH_ = _IMAGE_RESOURCE_DIRECTORY$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("NumberOfNamedEntries"));
    static final java.lang.invoke.VarHandle _IMAGE_RESOURCE_DIRECTORY$NumberOfNamedEntries$VH() { return _IMAGE_RESOURCE_DIRECTORY$NumberOfNamedEntries$VH_; }

    static final MemoryLayout _IMAGE_RESOURCE_DIRECTORY$NumberOfIdEntries$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DIRECTORY$NumberOfIdEntries$LAYOUT() { return _IMAGE_RESOURCE_DIRECTORY$NumberOfIdEntries$LAYOUT_; }

    static final VarHandle _IMAGE_RESOURCE_DIRECTORY$NumberOfIdEntries$VH_ = _IMAGE_RESOURCE_DIRECTORY$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("NumberOfIdEntries"));
    static final java.lang.invoke.VarHandle _IMAGE_RESOURCE_DIRECTORY$NumberOfIdEntries$VH() { return _IMAGE_RESOURCE_DIRECTORY$NumberOfIdEntries$VH_; }

    static final MemoryLayout _IMAGE_RESOURCE_DIRECTORY_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT,
        C_LONG.withName("Name"),
        C_SHORT.withName("Id"),
        C_LONG.withName("OffsetToData"),
        C_INT
    ).withName("_IMAGE_RESOURCE_DIRECTORY_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DIRECTORY_ENTRY$struct$LAYOUT() { return _IMAGE_RESOURCE_DIRECTORY_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_RESOURCE_DIRECTORY_ENTRY$Name$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DIRECTORY_ENTRY$Name$LAYOUT() { return _IMAGE_RESOURCE_DIRECTORY_ENTRY$Name$LAYOUT_; }

    static final VarHandle _IMAGE_RESOURCE_DIRECTORY_ENTRY$Name$VH_ = _IMAGE_RESOURCE_DIRECTORY_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Name"));
    static final java.lang.invoke.VarHandle _IMAGE_RESOURCE_DIRECTORY_ENTRY$Name$VH() { return _IMAGE_RESOURCE_DIRECTORY_ENTRY$Name$VH_; }

    static final MemoryLayout _IMAGE_RESOURCE_DIRECTORY_ENTRY$Id$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DIRECTORY_ENTRY$Id$LAYOUT() { return _IMAGE_RESOURCE_DIRECTORY_ENTRY$Id$LAYOUT_; }

    static final VarHandle _IMAGE_RESOURCE_DIRECTORY_ENTRY$Id$VH_ = _IMAGE_RESOURCE_DIRECTORY_ENTRY$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Id"));
    static final java.lang.invoke.VarHandle _IMAGE_RESOURCE_DIRECTORY_ENTRY$Id$VH() { return _IMAGE_RESOURCE_DIRECTORY_ENTRY$Id$VH_; }

    static final MemoryLayout _IMAGE_RESOURCE_DIRECTORY_ENTRY$OffsetToData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DIRECTORY_ENTRY$OffsetToData$LAYOUT() { return _IMAGE_RESOURCE_DIRECTORY_ENTRY$OffsetToData$LAYOUT_; }

    static final VarHandle _IMAGE_RESOURCE_DIRECTORY_ENTRY$OffsetToData$VH_ = _IMAGE_RESOURCE_DIRECTORY_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OffsetToData"));
    static final java.lang.invoke.VarHandle _IMAGE_RESOURCE_DIRECTORY_ENTRY$OffsetToData$VH() { return _IMAGE_RESOURCE_DIRECTORY_ENTRY$OffsetToData$VH_; }

    static final MemoryLayout _IMAGE_RESOURCE_DIRECTORY_STRING$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("Length"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("NameString"),
        MemoryLayout.ofPaddingBits(8)
    ).withName("_IMAGE_RESOURCE_DIRECTORY_STRING");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DIRECTORY_STRING$struct$LAYOUT() { return _IMAGE_RESOURCE_DIRECTORY_STRING$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_RESOURCE_DIRECTORY_STRING$Length$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DIRECTORY_STRING$Length$LAYOUT() { return _IMAGE_RESOURCE_DIRECTORY_STRING$Length$LAYOUT_; }

    static final VarHandle _IMAGE_RESOURCE_DIRECTORY_STRING$Length$VH_ = _IMAGE_RESOURCE_DIRECTORY_STRING$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Length"));
    static final java.lang.invoke.VarHandle _IMAGE_RESOURCE_DIRECTORY_STRING$Length$VH() { return _IMAGE_RESOURCE_DIRECTORY_STRING$Length$VH_; }

    static final MemoryLayout _IMAGE_RESOURCE_DIR_STRING_U$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("Length"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("NameString")
    ).withName("_IMAGE_RESOURCE_DIR_STRING_U");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DIR_STRING_U$struct$LAYOUT() { return _IMAGE_RESOURCE_DIR_STRING_U$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_RESOURCE_DIR_STRING_U$Length$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DIR_STRING_U$Length$LAYOUT() { return _IMAGE_RESOURCE_DIR_STRING_U$Length$LAYOUT_; }

    static final VarHandle _IMAGE_RESOURCE_DIR_STRING_U$Length$VH_ = _IMAGE_RESOURCE_DIR_STRING_U$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Length"));
    static final java.lang.invoke.VarHandle _IMAGE_RESOURCE_DIR_STRING_U$Length$VH() { return _IMAGE_RESOURCE_DIR_STRING_U$Length$VH_; }

    static final MemoryLayout _IMAGE_RESOURCE_DATA_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("OffsetToData"),
        C_LONG.withName("Size"),
        C_LONG.withName("CodePage"),
        C_LONG.withName("Reserved")
    ).withName("_IMAGE_RESOURCE_DATA_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DATA_ENTRY$struct$LAYOUT() { return _IMAGE_RESOURCE_DATA_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_RESOURCE_DATA_ENTRY$OffsetToData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DATA_ENTRY$OffsetToData$LAYOUT() { return _IMAGE_RESOURCE_DATA_ENTRY$OffsetToData$LAYOUT_; }

    static final VarHandle _IMAGE_RESOURCE_DATA_ENTRY$OffsetToData$VH_ = _IMAGE_RESOURCE_DATA_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OffsetToData"));
    static final java.lang.invoke.VarHandle _IMAGE_RESOURCE_DATA_ENTRY$OffsetToData$VH() { return _IMAGE_RESOURCE_DATA_ENTRY$OffsetToData$VH_; }

    static final MemoryLayout _IMAGE_RESOURCE_DATA_ENTRY$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DATA_ENTRY$Size$LAYOUT() { return _IMAGE_RESOURCE_DATA_ENTRY$Size$LAYOUT_; }

    static final VarHandle _IMAGE_RESOURCE_DATA_ENTRY$Size$VH_ = _IMAGE_RESOURCE_DATA_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _IMAGE_RESOURCE_DATA_ENTRY$Size$VH() { return _IMAGE_RESOURCE_DATA_ENTRY$Size$VH_; }

    static final MemoryLayout _IMAGE_RESOURCE_DATA_ENTRY$CodePage$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DATA_ENTRY$CodePage$LAYOUT() { return _IMAGE_RESOURCE_DATA_ENTRY$CodePage$LAYOUT_; }

    static final VarHandle _IMAGE_RESOURCE_DATA_ENTRY$CodePage$VH_ = _IMAGE_RESOURCE_DATA_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CodePage"));
    static final java.lang.invoke.VarHandle _IMAGE_RESOURCE_DATA_ENTRY$CodePage$VH() { return _IMAGE_RESOURCE_DATA_ENTRY$CodePage$VH_; }

    static final MemoryLayout _IMAGE_RESOURCE_DATA_ENTRY$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_RESOURCE_DATA_ENTRY$Reserved$LAYOUT() { return _IMAGE_RESOURCE_DATA_ENTRY$Reserved$LAYOUT_; }

    static final VarHandle _IMAGE_RESOURCE_DATA_ENTRY$Reserved$VH_ = _IMAGE_RESOURCE_DATA_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _IMAGE_RESOURCE_DATA_ENTRY$Reserved$VH() { return _IMAGE_RESOURCE_DATA_ENTRY$Reserved$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("Flags"),
        C_SHORT.withName("Catalog"),
        C_LONG.withName("CatalogOffset"),
        C_LONG.withName("Reserved")
    ).withName("_IMAGE_LOAD_CONFIG_CODE_INTEGRITY");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$struct$LAYOUT() { return _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Flags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Flags$LAYOUT() { return _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Flags$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Flags$VH_ = _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Flags$VH() { return _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Flags$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Catalog$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Catalog$LAYOUT() { return _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Catalog$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Catalog$VH_ = _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Catalog"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Catalog$VH() { return _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Catalog$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$CatalogOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$CatalogOffset$LAYOUT() { return _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$CatalogOffset$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$CatalogOffset$VH_ = _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CatalogOffset"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$CatalogOffset$VH() { return _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$CatalogOffset$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Reserved$LAYOUT() { return _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Reserved$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Reserved$VH_ = _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Reserved$VH() { return _IMAGE_LOAD_CONFIG_CODE_INTEGRITY$Reserved$VH_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION_TABLE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size")
    ).withName("_IMAGE_DYNAMIC_RELOCATION_TABLE");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION_TABLE$struct$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION_TABLE$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION_TABLE$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION_TABLE$Version$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION_TABLE$Version$LAYOUT_; }

    static final VarHandle _IMAGE_DYNAMIC_RELOCATION_TABLE$Version$VH_ = _IMAGE_DYNAMIC_RELOCATION_TABLE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _IMAGE_DYNAMIC_RELOCATION_TABLE$Version$VH() { return _IMAGE_DYNAMIC_RELOCATION_TABLE$Version$VH_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION_TABLE$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION_TABLE$Size$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION_TABLE$Size$LAYOUT_; }

    static final VarHandle _IMAGE_DYNAMIC_RELOCATION_TABLE$Size$VH_ = _IMAGE_DYNAMIC_RELOCATION_TABLE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _IMAGE_DYNAMIC_RELOCATION_TABLE$Size$VH() { return _IMAGE_DYNAMIC_RELOCATION_TABLE$Size$VH_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION32$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Symbol"),
        C_LONG.withName("BaseRelocSize")
    ).withName("_IMAGE_DYNAMIC_RELOCATION32");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION32$struct$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION32$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION32$Symbol$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION32$Symbol$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION32$Symbol$LAYOUT_; }

    static final VarHandle _IMAGE_DYNAMIC_RELOCATION32$Symbol$VH_ = _IMAGE_DYNAMIC_RELOCATION32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Symbol"));
    static final java.lang.invoke.VarHandle _IMAGE_DYNAMIC_RELOCATION32$Symbol$VH() { return _IMAGE_DYNAMIC_RELOCATION32$Symbol$VH_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION32$BaseRelocSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION32$BaseRelocSize$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION32$BaseRelocSize$LAYOUT_; }

    static final VarHandle _IMAGE_DYNAMIC_RELOCATION32$BaseRelocSize$VH_ = _IMAGE_DYNAMIC_RELOCATION32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BaseRelocSize"));
    static final java.lang.invoke.VarHandle _IMAGE_DYNAMIC_RELOCATION32$BaseRelocSize$VH() { return _IMAGE_DYNAMIC_RELOCATION32$BaseRelocSize$VH_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("Symbol"),
        C_LONG.withName("BaseRelocSize")
    ).withName("_IMAGE_DYNAMIC_RELOCATION64");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION64$struct$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION64$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION64$Symbol$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION64$Symbol$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION64$Symbol$LAYOUT_; }

    static final VarHandle _IMAGE_DYNAMIC_RELOCATION64$Symbol$VH_ = _IMAGE_DYNAMIC_RELOCATION64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Symbol"));
    static final java.lang.invoke.VarHandle _IMAGE_DYNAMIC_RELOCATION64$Symbol$VH() { return _IMAGE_DYNAMIC_RELOCATION64$Symbol$VH_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION64$BaseRelocSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION64$BaseRelocSize$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION64$BaseRelocSize$LAYOUT_; }

    static final VarHandle _IMAGE_DYNAMIC_RELOCATION64$BaseRelocSize$VH_ = _IMAGE_DYNAMIC_RELOCATION64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BaseRelocSize"));
    static final java.lang.invoke.VarHandle _IMAGE_DYNAMIC_RELOCATION64$BaseRelocSize$VH() { return _IMAGE_DYNAMIC_RELOCATION64$BaseRelocSize$VH_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION32_V2$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("HeaderSize"),
        C_LONG.withName("FixupInfoSize"),
        C_LONG.withName("Symbol"),
        C_LONG.withName("SymbolGroup"),
        C_LONG.withName("Flags")
    ).withName("_IMAGE_DYNAMIC_RELOCATION32_V2");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION32_V2$struct$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION32_V2$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION32_V2$HeaderSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION32_V2$HeaderSize$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION32_V2$HeaderSize$LAYOUT_; }

    static final VarHandle _IMAGE_DYNAMIC_RELOCATION32_V2$HeaderSize$VH_ = _IMAGE_DYNAMIC_RELOCATION32_V2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HeaderSize"));
    static final java.lang.invoke.VarHandle _IMAGE_DYNAMIC_RELOCATION32_V2$HeaderSize$VH() { return _IMAGE_DYNAMIC_RELOCATION32_V2$HeaderSize$VH_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION32_V2$FixupInfoSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION32_V2$FixupInfoSize$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION32_V2$FixupInfoSize$LAYOUT_; }

    static final VarHandle _IMAGE_DYNAMIC_RELOCATION32_V2$FixupInfoSize$VH_ = _IMAGE_DYNAMIC_RELOCATION32_V2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FixupInfoSize"));
    static final java.lang.invoke.VarHandle _IMAGE_DYNAMIC_RELOCATION32_V2$FixupInfoSize$VH() { return _IMAGE_DYNAMIC_RELOCATION32_V2$FixupInfoSize$VH_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION32_V2$Symbol$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION32_V2$Symbol$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION32_V2$Symbol$LAYOUT_; }

    static final VarHandle _IMAGE_DYNAMIC_RELOCATION32_V2$Symbol$VH_ = _IMAGE_DYNAMIC_RELOCATION32_V2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Symbol"));
    static final java.lang.invoke.VarHandle _IMAGE_DYNAMIC_RELOCATION32_V2$Symbol$VH() { return _IMAGE_DYNAMIC_RELOCATION32_V2$Symbol$VH_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION32_V2$SymbolGroup$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION32_V2$SymbolGroup$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION32_V2$SymbolGroup$LAYOUT_; }

    static final VarHandle _IMAGE_DYNAMIC_RELOCATION32_V2$SymbolGroup$VH_ = _IMAGE_DYNAMIC_RELOCATION32_V2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SymbolGroup"));
    static final java.lang.invoke.VarHandle _IMAGE_DYNAMIC_RELOCATION32_V2$SymbolGroup$VH() { return _IMAGE_DYNAMIC_RELOCATION32_V2$SymbolGroup$VH_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION32_V2$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION32_V2$Flags$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION32_V2$Flags$LAYOUT_; }

    static final VarHandle _IMAGE_DYNAMIC_RELOCATION32_V2$Flags$VH_ = _IMAGE_DYNAMIC_RELOCATION32_V2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _IMAGE_DYNAMIC_RELOCATION32_V2$Flags$VH() { return _IMAGE_DYNAMIC_RELOCATION32_V2$Flags$VH_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION64_V2$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("HeaderSize"),
        C_LONG.withName("FixupInfoSize"),
        C_LONGLONG.withName("Symbol"),
        C_LONG.withName("SymbolGroup"),
        C_LONG.withName("Flags")
    ).withName("_IMAGE_DYNAMIC_RELOCATION64_V2");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION64_V2$struct$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION64_V2$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION64_V2$HeaderSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION64_V2$HeaderSize$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION64_V2$HeaderSize$LAYOUT_; }

    static final VarHandle _IMAGE_DYNAMIC_RELOCATION64_V2$HeaderSize$VH_ = _IMAGE_DYNAMIC_RELOCATION64_V2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HeaderSize"));
    static final java.lang.invoke.VarHandle _IMAGE_DYNAMIC_RELOCATION64_V2$HeaderSize$VH() { return _IMAGE_DYNAMIC_RELOCATION64_V2$HeaderSize$VH_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION64_V2$FixupInfoSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION64_V2$FixupInfoSize$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION64_V2$FixupInfoSize$LAYOUT_; }

    static final VarHandle _IMAGE_DYNAMIC_RELOCATION64_V2$FixupInfoSize$VH_ = _IMAGE_DYNAMIC_RELOCATION64_V2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FixupInfoSize"));
    static final java.lang.invoke.VarHandle _IMAGE_DYNAMIC_RELOCATION64_V2$FixupInfoSize$VH() { return _IMAGE_DYNAMIC_RELOCATION64_V2$FixupInfoSize$VH_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION64_V2$Symbol$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION64_V2$Symbol$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION64_V2$Symbol$LAYOUT_; }

    static final VarHandle _IMAGE_DYNAMIC_RELOCATION64_V2$Symbol$VH_ = _IMAGE_DYNAMIC_RELOCATION64_V2$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Symbol"));
    static final java.lang.invoke.VarHandle _IMAGE_DYNAMIC_RELOCATION64_V2$Symbol$VH() { return _IMAGE_DYNAMIC_RELOCATION64_V2$Symbol$VH_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION64_V2$SymbolGroup$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION64_V2$SymbolGroup$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION64_V2$SymbolGroup$LAYOUT_; }

    static final VarHandle _IMAGE_DYNAMIC_RELOCATION64_V2$SymbolGroup$VH_ = _IMAGE_DYNAMIC_RELOCATION64_V2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SymbolGroup"));
    static final java.lang.invoke.VarHandle _IMAGE_DYNAMIC_RELOCATION64_V2$SymbolGroup$VH() { return _IMAGE_DYNAMIC_RELOCATION64_V2$SymbolGroup$VH_; }

    static final MemoryLayout _IMAGE_DYNAMIC_RELOCATION64_V2$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_DYNAMIC_RELOCATION64_V2$Flags$LAYOUT() { return _IMAGE_DYNAMIC_RELOCATION64_V2$Flags$LAYOUT_; }

    static final VarHandle _IMAGE_DYNAMIC_RELOCATION64_V2$Flags$VH_ = _IMAGE_DYNAMIC_RELOCATION64_V2$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _IMAGE_DYNAMIC_RELOCATION64_V2$Flags$VH() { return _IMAGE_DYNAMIC_RELOCATION64_V2$Flags$VH_; }

    static final MemoryLayout _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("PrologueByteCount")
    ).withName("_IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER$struct$LAYOUT() { return _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER$PrologueByteCount$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER$PrologueByteCount$LAYOUT() { return _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER$PrologueByteCount$LAYOUT_; }

    static final VarHandle _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER$PrologueByteCount$VH_ = _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("PrologueByteCount"));
    static final java.lang.invoke.VarHandle _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER$PrologueByteCount$VH() { return _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER$PrologueByteCount$VH_; }

    static final MemoryLayout _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("EpilogueCount"),
        C_CHAR.withName("EpilogueByteCount"),
        C_CHAR.withName("BranchDescriptorElementSize"),
        C_SHORT.withName("BranchDescriptorCount")
    ).withName("_IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$struct$LAYOUT() { return _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$EpilogueCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$EpilogueCount$LAYOUT() { return _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$EpilogueCount$LAYOUT_; }

    static final VarHandle _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$EpilogueCount$VH_ = _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EpilogueCount"));
    static final java.lang.invoke.VarHandle _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$EpilogueCount$VH() { return _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$EpilogueCount$VH_; }

    static final MemoryLayout _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$EpilogueByteCount$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$EpilogueByteCount$LAYOUT() { return _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$EpilogueByteCount$LAYOUT_; }

    static final VarHandle _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$EpilogueByteCount$VH_ = _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("EpilogueByteCount"));
    static final java.lang.invoke.VarHandle _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$EpilogueByteCount$VH() { return _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$EpilogueByteCount$VH_; }

    static final MemoryLayout _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$BranchDescriptorElementSize$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$BranchDescriptorElementSize$LAYOUT() { return _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$BranchDescriptorElementSize$LAYOUT_; }

    static final VarHandle _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$BranchDescriptorElementSize$VH_ = _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("BranchDescriptorElementSize"));
    static final java.lang.invoke.VarHandle _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$BranchDescriptorElementSize$VH() { return _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$BranchDescriptorElementSize$VH_; }

    static final MemoryLayout _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$BranchDescriptorCount$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$BranchDescriptorCount$LAYOUT() { return _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$BranchDescriptorCount$LAYOUT_; }

    static final VarHandle _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$BranchDescriptorCount$VH_ = _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("BranchDescriptorCount"));
    static final java.lang.invoke.VarHandle _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$BranchDescriptorCount$VH() { return _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER$BranchDescriptorCount$VH_; }

    static final MemoryLayout _IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT
    ).withName("_IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION$struct$LAYOUT() { return _IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT
    ).withName("_IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION$struct$LAYOUT() { return _IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT
    ).withName("_IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION$struct$LAYOUT() { return _IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_LONG.withName("TimeDateStamp"),
        C_SHORT.withName("MajorVersion"),
        C_SHORT.withName("MinorVersion"),
        C_LONG.withName("GlobalFlagsClear"),
        C_LONG.withName("GlobalFlagsSet"),
        C_LONG.withName("CriticalSectionDefaultTimeout"),
        C_LONG.withName("DeCommitFreeBlockThreshold"),
        C_LONG.withName("DeCommitTotalFreeThreshold"),
        C_LONG.withName("LockPrefixTable"),
        C_LONG.withName("MaximumAllocationSize"),
        C_LONG.withName("VirtualMemoryThreshold"),
        C_LONG.withName("ProcessHeapFlags"),
        C_LONG.withName("ProcessAffinityMask"),
        C_SHORT.withName("CSDVersion"),
        C_SHORT.withName("DependentLoadFlags"),
        C_LONG.withName("EditList"),
        C_LONG.withName("SecurityCookie"),
        C_LONG.withName("SEHandlerTable"),
        C_LONG.withName("SEHandlerCount"),
        C_LONG.withName("GuardCFCheckFunctionPointer"),
        C_LONG.withName("GuardCFDispatchFunctionPointer"),
        C_LONG.withName("GuardCFFunctionTable"),
        C_LONG.withName("GuardCFFunctionCount"),
        C_LONG.withName("GuardFlags"),
        MemoryLayout.ofStruct(
            C_SHORT.withName("Flags"),
            C_SHORT.withName("Catalog"),
            C_LONG.withName("CatalogOffset"),
            C_LONG.withName("Reserved")
        ).withName("CodeIntegrity"),
        C_LONG.withName("GuardAddressTakenIatEntryTable"),
        C_LONG.withName("GuardAddressTakenIatEntryCount"),
        C_LONG.withName("GuardLongJumpTargetTable"),
        C_LONG.withName("GuardLongJumpTargetCount"),
        C_LONG.withName("DynamicValueRelocTable"),
        C_LONG.withName("CHPEMetadataPointer"),
        C_LONG.withName("GuardRFFailureRoutine"),
        C_LONG.withName("GuardRFFailureRoutineFunctionPointer"),
        C_LONG.withName("DynamicValueRelocTableOffset"),
        C_SHORT.withName("DynamicValueRelocTableSection"),
        C_SHORT.withName("Reserved2"),
        C_LONG.withName("GuardRFVerifyStackPointerFunctionPointer"),
        C_LONG.withName("HotPatchTableOffset"),
        C_LONG.withName("Reserved3"),
        C_LONG.withName("EnclaveConfigurationPointer"),
        C_LONG.withName("VolatileMetadataPointer"),
        C_LONG.withName("GuardEHContinuationTable"),
        C_LONG.withName("GuardEHContinuationCount")
    ).withName("_IMAGE_LOAD_CONFIG_DIRECTORY32");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$Size$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$Size$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$Size$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$Size$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$Size$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$TimeDateStamp$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$TimeDateStamp$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$TimeDateStamp$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$TimeDateStamp$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TimeDateStamp"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$TimeDateStamp$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$TimeDateStamp$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$MajorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$MajorVersion$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$MajorVersion$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$MajorVersion$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MajorVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$MajorVersion$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$MajorVersion$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$MinorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$MinorVersion$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$MinorVersion$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$MinorVersion$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MinorVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$MinorVersion$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$MinorVersion$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsClear$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsClear$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsClear$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsClear$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GlobalFlagsClear"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsClear$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsClear$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsSet$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsSet$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsSet$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsSet$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GlobalFlagsSet"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsSet$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GlobalFlagsSet$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$CriticalSectionDefaultTimeout$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$CriticalSectionDefaultTimeout$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$CriticalSectionDefaultTimeout$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$CriticalSectionDefaultTimeout$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CriticalSectionDefaultTimeout"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$CriticalSectionDefaultTimeout$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$CriticalSectionDefaultTimeout$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitFreeBlockThreshold$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitFreeBlockThreshold$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitFreeBlockThreshold$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitFreeBlockThreshold$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DeCommitFreeBlockThreshold"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitFreeBlockThreshold$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitFreeBlockThreshold$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitTotalFreeThreshold$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitTotalFreeThreshold$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitTotalFreeThreshold$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitTotalFreeThreshold$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DeCommitTotalFreeThreshold"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitTotalFreeThreshold$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DeCommitTotalFreeThreshold$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$LockPrefixTable$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$LockPrefixTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$LockPrefixTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$LockPrefixTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LockPrefixTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$LockPrefixTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$LockPrefixTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$MaximumAllocationSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$MaximumAllocationSize$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$MaximumAllocationSize$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$MaximumAllocationSize$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaximumAllocationSize"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$MaximumAllocationSize$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$MaximumAllocationSize$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$VirtualMemoryThreshold$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$VirtualMemoryThreshold$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$VirtualMemoryThreshold$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$VirtualMemoryThreshold$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("VirtualMemoryThreshold"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$VirtualMemoryThreshold$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$VirtualMemoryThreshold$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessHeapFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessHeapFlags$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessHeapFlags$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessHeapFlags$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProcessHeapFlags"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessHeapFlags$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessHeapFlags$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessAffinityMask$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessAffinityMask$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessAffinityMask$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessAffinityMask$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProcessAffinityMask"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessAffinityMask$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$ProcessAffinityMask$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$CSDVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$CSDVersion$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$CSDVersion$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$CSDVersion$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("CSDVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$CSDVersion$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$CSDVersion$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DependentLoadFlags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DependentLoadFlags$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DependentLoadFlags$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DependentLoadFlags$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DependentLoadFlags"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DependentLoadFlags$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DependentLoadFlags$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$EditList$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$EditList$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$EditList$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$EditList$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EditList"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$EditList$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$EditList$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$SecurityCookie$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$SecurityCookie$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$SecurityCookie$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$SecurityCookie$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SecurityCookie"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$SecurityCookie$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$SecurityCookie$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerTable$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SEHandlerTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SEHandlerCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$SEHandlerCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFCheckFunctionPointer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFCheckFunctionPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFCheckFunctionPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFCheckFunctionPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardCFCheckFunctionPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFCheckFunctionPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFCheckFunctionPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFDispatchFunctionPointer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFDispatchFunctionPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFDispatchFunctionPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFDispatchFunctionPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardCFDispatchFunctionPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFDispatchFunctionPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFDispatchFunctionPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionTable$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardCFFunctionTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardCFFunctionCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardCFFunctionCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardFlags$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardFlags$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardFlags$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardFlags"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardFlags$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardFlags$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryTable$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardAddressTakenIatEntryTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardAddressTakenIatEntryCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardAddressTakenIatEntryCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetTable$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardLongJumpTargetTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardLongJumpTargetCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardLongJumpTargetCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTable$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DynamicValueRelocTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$CHPEMetadataPointer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$CHPEMetadataPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$CHPEMetadataPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$CHPEMetadataPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CHPEMetadataPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$CHPEMetadataPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$CHPEMetadataPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutine$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutine$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutine$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutine$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardRFFailureRoutine"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutine$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutine$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutineFunctionPointer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutineFunctionPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutineFunctionPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutineFunctionPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardRFFailureRoutineFunctionPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutineFunctionPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFFailureRoutineFunctionPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableOffset$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableOffset$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableOffset$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DynamicValueRelocTableOffset"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableOffset$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableOffset$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableSection$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableSection$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableSection$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableSection$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DynamicValueRelocTableSection"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableSection$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$DynamicValueRelocTableSection$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved2$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved2$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved2$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved2$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Reserved2"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved2$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved2$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFVerifyStackPointerFunctionPointer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFVerifyStackPointerFunctionPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFVerifyStackPointerFunctionPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFVerifyStackPointerFunctionPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardRFVerifyStackPointerFunctionPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFVerifyStackPointerFunctionPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardRFVerifyStackPointerFunctionPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$HotPatchTableOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$HotPatchTableOffset$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$HotPatchTableOffset$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$HotPatchTableOffset$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HotPatchTableOffset"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$HotPatchTableOffset$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$HotPatchTableOffset$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved3$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved3$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved3$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved3$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved3"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved3$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$Reserved3$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$EnclaveConfigurationPointer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$EnclaveConfigurationPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$EnclaveConfigurationPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$EnclaveConfigurationPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EnclaveConfigurationPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$EnclaveConfigurationPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$EnclaveConfigurationPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$VolatileMetadataPointer$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$VolatileMetadataPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$VolatileMetadataPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$VolatileMetadataPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("VolatileMetadataPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$VolatileMetadataPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$VolatileMetadataPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationTable$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardEHContinuationTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardEHContinuationCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY32$GuardEHContinuationCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Size"),
        C_LONG.withName("TimeDateStamp"),
        C_SHORT.withName("MajorVersion"),
        C_SHORT.withName("MinorVersion"),
        C_LONG.withName("GlobalFlagsClear"),
        C_LONG.withName("GlobalFlagsSet"),
        C_LONG.withName("CriticalSectionDefaultTimeout"),
        C_LONGLONG.withName("DeCommitFreeBlockThreshold"),
        C_LONGLONG.withName("DeCommitTotalFreeThreshold"),
        C_LONGLONG.withName("LockPrefixTable"),
        C_LONGLONG.withName("MaximumAllocationSize"),
        C_LONGLONG.withName("VirtualMemoryThreshold"),
        C_LONGLONG.withName("ProcessAffinityMask"),
        C_LONG.withName("ProcessHeapFlags"),
        C_SHORT.withName("CSDVersion"),
        C_SHORT.withName("DependentLoadFlags"),
        C_LONGLONG.withName("EditList"),
        C_LONGLONG.withName("SecurityCookie"),
        C_LONGLONG.withName("SEHandlerTable"),
        C_LONGLONG.withName("SEHandlerCount"),
        C_LONGLONG.withName("GuardCFCheckFunctionPointer"),
        C_LONGLONG.withName("GuardCFDispatchFunctionPointer"),
        C_LONGLONG.withName("GuardCFFunctionTable"),
        C_LONGLONG.withName("GuardCFFunctionCount"),
        C_LONG.withName("GuardFlags"),
        MemoryLayout.ofStruct(
            C_SHORT.withName("Flags"),
            C_SHORT.withName("Catalog"),
            C_LONG.withName("CatalogOffset"),
            C_LONG.withName("Reserved")
        ).withName("CodeIntegrity"),
        C_LONGLONG.withName("GuardAddressTakenIatEntryTable"),
        C_LONGLONG.withName("GuardAddressTakenIatEntryCount"),
        C_LONGLONG.withName("GuardLongJumpTargetTable"),
        C_LONGLONG.withName("GuardLongJumpTargetCount"),
        C_LONGLONG.withName("DynamicValueRelocTable"),
        C_LONGLONG.withName("CHPEMetadataPointer"),
        C_LONGLONG.withName("GuardRFFailureRoutine"),
        C_LONGLONG.withName("GuardRFFailureRoutineFunctionPointer"),
        C_LONG.withName("DynamicValueRelocTableOffset"),
        C_SHORT.withName("DynamicValueRelocTableSection"),
        C_SHORT.withName("Reserved2"),
        C_LONGLONG.withName("GuardRFVerifyStackPointerFunctionPointer"),
        C_LONG.withName("HotPatchTableOffset"),
        C_LONG.withName("Reserved3"),
        C_LONGLONG.withName("EnclaveConfigurationPointer"),
        C_LONGLONG.withName("VolatileMetadataPointer"),
        C_LONGLONG.withName("GuardEHContinuationTable"),
        C_LONGLONG.withName("GuardEHContinuationCount")
    ).withName("_IMAGE_LOAD_CONFIG_DIRECTORY64");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$Size$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$Size$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$Size$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$Size$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$Size$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$TimeDateStamp$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$TimeDateStamp$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$TimeDateStamp$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$TimeDateStamp$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TimeDateStamp"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$TimeDateStamp$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$TimeDateStamp$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$MajorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$MajorVersion$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$MajorVersion$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$MajorVersion$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MajorVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$MajorVersion$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$MajorVersion$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$MinorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$MinorVersion$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$MinorVersion$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$MinorVersion$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MinorVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$MinorVersion$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$MinorVersion$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsClear$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsClear$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsClear$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsClear$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GlobalFlagsClear"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsClear$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsClear$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsSet$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsSet$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsSet$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsSet$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GlobalFlagsSet"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsSet$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GlobalFlagsSet$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$CriticalSectionDefaultTimeout$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$CriticalSectionDefaultTimeout$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$CriticalSectionDefaultTimeout$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$CriticalSectionDefaultTimeout$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CriticalSectionDefaultTimeout"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$CriticalSectionDefaultTimeout$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$CriticalSectionDefaultTimeout$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitFreeBlockThreshold$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitFreeBlockThreshold$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitFreeBlockThreshold$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitFreeBlockThreshold$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DeCommitFreeBlockThreshold"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitFreeBlockThreshold$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitFreeBlockThreshold$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitTotalFreeThreshold$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitTotalFreeThreshold$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitTotalFreeThreshold$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitTotalFreeThreshold$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DeCommitTotalFreeThreshold"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitTotalFreeThreshold$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DeCommitTotalFreeThreshold$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$LockPrefixTable$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$LockPrefixTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$LockPrefixTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$LockPrefixTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LockPrefixTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$LockPrefixTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$LockPrefixTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$MaximumAllocationSize$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$MaximumAllocationSize$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$MaximumAllocationSize$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$MaximumAllocationSize$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaximumAllocationSize"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$MaximumAllocationSize$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$MaximumAllocationSize$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$VirtualMemoryThreshold$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$VirtualMemoryThreshold$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$VirtualMemoryThreshold$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$VirtualMemoryThreshold$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("VirtualMemoryThreshold"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$VirtualMemoryThreshold$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$VirtualMemoryThreshold$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessAffinityMask$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessAffinityMask$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessAffinityMask$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessAffinityMask$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ProcessAffinityMask"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessAffinityMask$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessAffinityMask$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessHeapFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessHeapFlags$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessHeapFlags$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessHeapFlags$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ProcessHeapFlags"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessHeapFlags$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$ProcessHeapFlags$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$CSDVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$CSDVersion$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$CSDVersion$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$CSDVersion$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("CSDVersion"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$CSDVersion$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$CSDVersion$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DependentLoadFlags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DependentLoadFlags$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DependentLoadFlags$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DependentLoadFlags$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DependentLoadFlags"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DependentLoadFlags$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DependentLoadFlags$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$EditList$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$EditList$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$EditList$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$EditList$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EditList"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$EditList$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$EditList$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$SecurityCookie$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$SecurityCookie$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$SecurityCookie$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$SecurityCookie$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SecurityCookie"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$SecurityCookie$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$SecurityCookie$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerTable$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SEHandlerTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SEHandlerCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$SEHandlerCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFCheckFunctionPointer$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFCheckFunctionPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFCheckFunctionPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFCheckFunctionPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardCFCheckFunctionPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFCheckFunctionPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFCheckFunctionPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFDispatchFunctionPointer$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFDispatchFunctionPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFDispatchFunctionPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFDispatchFunctionPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardCFDispatchFunctionPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFDispatchFunctionPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFDispatchFunctionPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionTable$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardCFFunctionTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardCFFunctionCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardCFFunctionCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardFlags$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardFlags$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardFlags$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("GuardFlags"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardFlags$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardFlags$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryTable$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardAddressTakenIatEntryTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardAddressTakenIatEntryCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardAddressTakenIatEntryCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetTable$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardLongJumpTargetTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardLongJumpTargetCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardLongJumpTargetCount$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTable$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DynamicValueRelocTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$CHPEMetadataPointer$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$CHPEMetadataPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$CHPEMetadataPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$CHPEMetadataPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CHPEMetadataPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$CHPEMetadataPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$CHPEMetadataPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutine$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutine$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutine$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutine$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardRFFailureRoutine"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutine$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutine$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutineFunctionPointer$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutineFunctionPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutineFunctionPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutineFunctionPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardRFFailureRoutineFunctionPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutineFunctionPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFFailureRoutineFunctionPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableOffset$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableOffset$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableOffset$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DynamicValueRelocTableOffset"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableOffset$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableOffset$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableSection$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableSection$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableSection$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableSection$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DynamicValueRelocTableSection"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableSection$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$DynamicValueRelocTableSection$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved2$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved2$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved2$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved2$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Reserved2"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved2$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved2$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFVerifyStackPointerFunctionPointer$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFVerifyStackPointerFunctionPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFVerifyStackPointerFunctionPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFVerifyStackPointerFunctionPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardRFVerifyStackPointerFunctionPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFVerifyStackPointerFunctionPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardRFVerifyStackPointerFunctionPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$HotPatchTableOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$HotPatchTableOffset$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$HotPatchTableOffset$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$HotPatchTableOffset$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HotPatchTableOffset"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$HotPatchTableOffset$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$HotPatchTableOffset$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved3$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved3$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved3$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved3$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved3"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved3$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$Reserved3$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$EnclaveConfigurationPointer$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$EnclaveConfigurationPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$EnclaveConfigurationPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$EnclaveConfigurationPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EnclaveConfigurationPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$EnclaveConfigurationPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$EnclaveConfigurationPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$VolatileMetadataPointer$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$VolatileMetadataPointer$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$VolatileMetadataPointer$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$VolatileMetadataPointer$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("VolatileMetadataPointer"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$VolatileMetadataPointer$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$VolatileMetadataPointer$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationTable$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationTable$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationTable$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationTable$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardEHContinuationTable"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationTable$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationTable$VH_; }

    static final MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationCount$LAYOUT() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationCount$LAYOUT_; }

    static final VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationCount$VH_ = _IMAGE_LOAD_CONFIG_DIRECTORY64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("GuardEHContinuationCount"));
    static final java.lang.invoke.VarHandle _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationCount$VH() { return _IMAGE_LOAD_CONFIG_DIRECTORY64$GuardEHContinuationCount$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Size"),
        C_LONG.withName("SequenceNumber"),
        C_LONG.withName("BaseImageList"),
        C_LONG.withName("BaseImageCount"),
        C_LONG.withName("BufferOffset"),
        C_LONG.withName("ExtraPatchSize")
    ).withName("_IMAGE_HOT_PATCH_INFO");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_INFO$struct$LAYOUT() { return _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_INFO$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_INFO$Version$LAYOUT() { return _IMAGE_HOT_PATCH_INFO$Version$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_INFO$Version$VH_ = _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_INFO$Version$VH() { return _IMAGE_HOT_PATCH_INFO$Version$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_INFO$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_INFO$Size$LAYOUT() { return _IMAGE_HOT_PATCH_INFO$Size$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_INFO$Size$VH_ = _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_INFO$Size$VH() { return _IMAGE_HOT_PATCH_INFO$Size$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_INFO$SequenceNumber$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_INFO$SequenceNumber$LAYOUT() { return _IMAGE_HOT_PATCH_INFO$SequenceNumber$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_INFO$SequenceNumber$VH_ = _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SequenceNumber"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_INFO$SequenceNumber$VH() { return _IMAGE_HOT_PATCH_INFO$SequenceNumber$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_INFO$BaseImageList$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_INFO$BaseImageList$LAYOUT() { return _IMAGE_HOT_PATCH_INFO$BaseImageList$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_INFO$BaseImageList$VH_ = _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BaseImageList"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_INFO$BaseImageList$VH() { return _IMAGE_HOT_PATCH_INFO$BaseImageList$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_INFO$BaseImageCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_INFO$BaseImageCount$LAYOUT() { return _IMAGE_HOT_PATCH_INFO$BaseImageCount$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_INFO$BaseImageCount$VH_ = _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BaseImageCount"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_INFO$BaseImageCount$VH() { return _IMAGE_HOT_PATCH_INFO$BaseImageCount$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_INFO$BufferOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_INFO$BufferOffset$LAYOUT() { return _IMAGE_HOT_PATCH_INFO$BufferOffset$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_INFO$BufferOffset$VH_ = _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BufferOffset"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_INFO$BufferOffset$VH() { return _IMAGE_HOT_PATCH_INFO$BufferOffset$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_INFO$ExtraPatchSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_INFO$ExtraPatchSize$LAYOUT() { return _IMAGE_HOT_PATCH_INFO$ExtraPatchSize$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_INFO$ExtraPatchSize$VH_ = _IMAGE_HOT_PATCH_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ExtraPatchSize"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_INFO$ExtraPatchSize$VH() { return _IMAGE_HOT_PATCH_INFO$ExtraPatchSize$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("SequenceNumber"),
        C_LONG.withName("Flags"),
        C_LONG.withName("OriginalTimeDateStamp"),
        C_LONG.withName("OriginalCheckSum"),
        C_LONG.withName("CodeIntegrityInfo"),
        C_LONG.withName("CodeIntegritySize"),
        C_LONG.withName("PatchTable"),
        C_LONG.withName("BufferOffset")
    ).withName("_IMAGE_HOT_PATCH_BASE");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$struct$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$SequenceNumber$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$SequenceNumber$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$SequenceNumber$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_BASE$SequenceNumber$VH_ = _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SequenceNumber"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_BASE$SequenceNumber$VH() { return _IMAGE_HOT_PATCH_BASE$SequenceNumber$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$Flags$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$Flags$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_BASE$Flags$VH_ = _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_BASE$Flags$VH() { return _IMAGE_HOT_PATCH_BASE$Flags$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$OriginalTimeDateStamp$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$OriginalTimeDateStamp$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$OriginalTimeDateStamp$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_BASE$OriginalTimeDateStamp$VH_ = _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OriginalTimeDateStamp"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_BASE$OriginalTimeDateStamp$VH() { return _IMAGE_HOT_PATCH_BASE$OriginalTimeDateStamp$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$OriginalCheckSum$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$OriginalCheckSum$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$OriginalCheckSum$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_BASE$OriginalCheckSum$VH_ = _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("OriginalCheckSum"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_BASE$OriginalCheckSum$VH() { return _IMAGE_HOT_PATCH_BASE$OriginalCheckSum$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$CodeIntegrityInfo$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$CodeIntegrityInfo$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$CodeIntegrityInfo$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_BASE$CodeIntegrityInfo$VH_ = _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CodeIntegrityInfo"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_BASE$CodeIntegrityInfo$VH() { return _IMAGE_HOT_PATCH_BASE$CodeIntegrityInfo$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$CodeIntegritySize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$CodeIntegritySize$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$CodeIntegritySize$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_BASE$CodeIntegritySize$VH_ = _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CodeIntegritySize"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_BASE$CodeIntegritySize$VH() { return _IMAGE_HOT_PATCH_BASE$CodeIntegritySize$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$PatchTable$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$PatchTable$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$PatchTable$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_BASE$PatchTable$VH_ = _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PatchTable"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_BASE$PatchTable$VH() { return _IMAGE_HOT_PATCH_BASE$PatchTable$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_BASE$BufferOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_BASE$BufferOffset$LAYOUT() { return _IMAGE_HOT_PATCH_BASE$BufferOffset$LAYOUT_; }

    static final VarHandle _IMAGE_HOT_PATCH_BASE$BufferOffset$VH_ = _IMAGE_HOT_PATCH_BASE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BufferOffset"));
    static final java.lang.invoke.VarHandle _IMAGE_HOT_PATCH_BASE$BufferOffset$VH() { return _IMAGE_HOT_PATCH_BASE$BufferOffset$VH_; }

    static final MemoryLayout _IMAGE_HOT_PATCH_HASHES$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(32, C_CHAR).withName("SHA256"),
        MemoryLayout.ofSequence(20, C_CHAR).withName("SHA1")
    ).withName("_IMAGE_HOT_PATCH_HASHES");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_HOT_PATCH_HASHES$struct$LAYOUT() { return _IMAGE_HOT_PATCH_HASHES$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("FuncStart"),
        C_INT
    ).withName("_IMAGE_CE_RUNTIME_FUNCTION_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT() { return _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$FuncStart$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$FuncStart$LAYOUT() { return _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$FuncStart$LAYOUT_; }

    static final VarHandle _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$FuncStart$VH_ = _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FuncStart"));
    static final java.lang.invoke.VarHandle _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$FuncStart$VH() { return _IMAGE_CE_RUNTIME_FUNCTION_ENTRY$FuncStart$VH_; }

    static final MemoryLayout _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("BeginAddress"),
        C_LONG.withName("UnwindData"),
        C_INT
    ).withName("_IMAGE_ARM_RUNTIME_FUNCTION_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT() { return _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT() { return _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT_; }

    static final VarHandle _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH_ = _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BeginAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH() { return _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH_; }

    static final MemoryLayout _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$UnwindData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$UnwindData$LAYOUT() { return _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$UnwindData$LAYOUT_; }

    static final VarHandle _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$UnwindData$VH_ = _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UnwindData"));
    static final java.lang.invoke.VarHandle _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$UnwindData$VH() { return _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY$UnwindData$VH_; }

    static final int PdataRefToFullXdata() { return (int)0L; }

    static final int PdataPackedUnwindFunction() { return (int)1L; }

    static final int PdataPackedUnwindFragment() { return (int)2L; }

    static final int PdataCrUnchained() { return (int)0L; }

    static final int PdataCrUnchainedSavedLr() { return (int)1L; }

    static final int PdataCrChained() { return (int)3L; }

    static final MemoryLayout _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("BeginAddress"),
        C_LONG.withName("UnwindData"),
        C_INT
    ).withName("_IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT() { return _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT() { return _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT_; }

    static final VarHandle _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH_ = _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BeginAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH() { return _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH_; }

    static final MemoryLayout _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$UnwindData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$UnwindData$LAYOUT() { return _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$UnwindData$LAYOUT_; }

    static final VarHandle _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$UnwindData$VH_ = _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UnwindData"));
    static final java.lang.invoke.VarHandle _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$UnwindData$VH() { return _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY$UnwindData$VH_; }

    static final MemoryLayout IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONG.withName("HeaderData"),
        C_INT
    ).withName("IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA");
    static final jdk.incubator.foreign.MemoryLayout IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$union$LAYOUT() { return IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$union$LAYOUT_; }

    static final MemoryLayout IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$HeaderData$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$HeaderData$LAYOUT() { return IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$HeaderData$LAYOUT_; }

    static final VarHandle IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$HeaderData$VH_ = IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("HeaderData"));
    static final java.lang.invoke.VarHandle IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$HeaderData$VH() { return IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA$HeaderData$VH_; }

    static final MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("BeginAddress"),
        C_LONGLONG.withName("EndAddress"),
        C_LONGLONG.withName("ExceptionHandler"),
        C_LONGLONG.withName("HandlerData"),
        C_LONGLONG.withName("PrologEndAddress")
    ).withName("_IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT() { return _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT() { return _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$BeginAddress$LAYOUT_; }

    static final VarHandle _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH_ = _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("BeginAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH() { return _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$BeginAddress$VH_; }

    static final MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$EndAddress$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$EndAddress$LAYOUT() { return _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$EndAddress$LAYOUT_; }

    static final VarHandle _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$EndAddress$VH_ = _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("EndAddress"));
    static final java.lang.invoke.VarHandle _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$EndAddress$VH() { return _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY$EndAddress$VH_; }

}

