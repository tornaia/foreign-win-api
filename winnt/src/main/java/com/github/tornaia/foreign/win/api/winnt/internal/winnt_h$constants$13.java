// Generated by jextract

package com.github.tornaia.foreign.win.api.winnt.internal;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class winnt_h$constants$13 extends winnt_h$constants$12 {

    /* package-private */ winnt_h$constants$13() {}
    static final FunctionDescriptor TpSetCallbackThreadpool$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor TpSetCallbackThreadpool$FUNC() { return TpSetCallbackThreadpool$FUNC_; }

    static final MethodHandle TpSetCallbackThreadpool$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackThreadpool",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        TpSetCallbackThreadpool$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle TpSetCallbackThreadpool$MH() { return TpSetCallbackThreadpool$MH_; }

    static final FunctionDescriptor TpSetCallbackCleanupGroup$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor TpSetCallbackCleanupGroup$FUNC() { return TpSetCallbackCleanupGroup$FUNC_; }

    static final MethodHandle TpSetCallbackCleanupGroup$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackCleanupGroup",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        TpSetCallbackCleanupGroup$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle TpSetCallbackCleanupGroup$MH() { return TpSetCallbackCleanupGroup$MH_; }

    static final FunctionDescriptor TpSetCallbackCleanupGroup$CleanupGroupCancelCallback$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor TpSetCallbackCleanupGroup$CleanupGroupCancelCallback$FUNC() { return TpSetCallbackCleanupGroup$CleanupGroupCancelCallback$FUNC_; }

    static final FunctionDescriptor TpSetCallbackActivationContext$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor TpSetCallbackActivationContext$FUNC() { return TpSetCallbackActivationContext$FUNC_; }

    static final MethodHandle TpSetCallbackActivationContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackActivationContext",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        TpSetCallbackActivationContext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle TpSetCallbackActivationContext$MH() { return TpSetCallbackActivationContext$MH_; }

    static final FunctionDescriptor TpSetCallbackNoActivationContext$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor TpSetCallbackNoActivationContext$FUNC() { return TpSetCallbackNoActivationContext$FUNC_; }

    static final MethodHandle TpSetCallbackNoActivationContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackNoActivationContext",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        TpSetCallbackNoActivationContext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle TpSetCallbackNoActivationContext$MH() { return TpSetCallbackNoActivationContext$MH_; }

    static final FunctionDescriptor TpSetCallbackLongFunction$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor TpSetCallbackLongFunction$FUNC() { return TpSetCallbackLongFunction$FUNC_; }

    static final MethodHandle TpSetCallbackLongFunction$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackLongFunction",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        TpSetCallbackLongFunction$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle TpSetCallbackLongFunction$MH() { return TpSetCallbackLongFunction$MH_; }

    static final FunctionDescriptor TpSetCallbackRaceWithDll$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor TpSetCallbackRaceWithDll$FUNC() { return TpSetCallbackRaceWithDll$FUNC_; }

    static final MethodHandle TpSetCallbackRaceWithDll$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackRaceWithDll",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        TpSetCallbackRaceWithDll$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle TpSetCallbackRaceWithDll$MH() { return TpSetCallbackRaceWithDll$MH_; }

    static final FunctionDescriptor TpSetCallbackFinalizationCallback$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor TpSetCallbackFinalizationCallback$FUNC() { return TpSetCallbackFinalizationCallback$FUNC_; }

    static final MethodHandle TpSetCallbackFinalizationCallback$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackFinalizationCallback",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        TpSetCallbackFinalizationCallback$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle TpSetCallbackFinalizationCallback$MH() { return TpSetCallbackFinalizationCallback$MH_; }

    static final FunctionDescriptor TpSetCallbackFinalizationCallback$FinalizationCallback$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor TpSetCallbackFinalizationCallback$FinalizationCallback$FUNC() { return TpSetCallbackFinalizationCallback$FinalizationCallback$FUNC_; }

    static final FunctionDescriptor TpSetCallbackPriority$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor TpSetCallbackPriority$FUNC() { return TpSetCallbackPriority$FUNC_; }

    static final MethodHandle TpSetCallbackPriority$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackPriority",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        TpSetCallbackPriority$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle TpSetCallbackPriority$MH() { return TpSetCallbackPriority$MH_; }

    static final FunctionDescriptor TpSetCallbackPersistent$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor TpSetCallbackPersistent$FUNC() { return TpSetCallbackPersistent$FUNC_; }

    static final MethodHandle TpSetCallbackPersistent$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpSetCallbackPersistent",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        TpSetCallbackPersistent$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle TpSetCallbackPersistent$MH() { return TpSetCallbackPersistent$MH_; }

    static final FunctionDescriptor TpDestroyCallbackEnviron$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor TpDestroyCallbackEnviron$FUNC() { return TpDestroyCallbackEnviron$FUNC_; }

    static final MethodHandle TpDestroyCallbackEnviron$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpDestroyCallbackEnviron",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        TpDestroyCallbackEnviron$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle TpDestroyCallbackEnviron$MH() { return TpDestroyCallbackEnviron$MH_; }

    static final FunctionDescriptor NtCurrentTeb$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor NtCurrentTeb$FUNC() { return NtCurrentTeb$FUNC_; }

    static final MethodHandle NtCurrentTeb$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "NtCurrentTeb",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        NtCurrentTeb$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle NtCurrentTeb$MH() { return NtCurrentTeb$MH_; }

    static final FunctionDescriptor GetCurrentFiber$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor GetCurrentFiber$FUNC() { return GetCurrentFiber$FUNC_; }

    static final MethodHandle GetCurrentFiber$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetCurrentFiber",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        GetCurrentFiber$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetCurrentFiber$MH() { return GetCurrentFiber$MH_; }

    static final FunctionDescriptor GetFiberData$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor GetFiberData$FUNC() { return GetFiberData$FUNC_; }

    static final MethodHandle GetFiberData$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetFiberData",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        GetFiberData$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetFiberData$MH() { return GetFiberData$MH_; }

    static final long MAX_NATURAL_ALIGNMENT() { return 8L; }

    static final int UCSCHAR_INVALID_CHARACTER() { return (int)4294967295L; }

    static final int MIN_UCSCHAR() { return (int)0L; }

    static final int MAX_UCSCHAR() { return (int)1114111L; }

    static final int MAXIMUM_PROCESSORS() { return (int)64L; }

    static final int ERROR_SEVERITY_WARNING() { return (int)2147483648L; }

    static final int ERROR_SEVERITY_ERROR() { return (int)3221225472L; }

    static final long MAXLONGLONG() { return 9223372036854775807L; }

    static final byte ANSI_NULL() { return (byte)0L; }

    static final short UNICODE_NULL() { return (short)0L; }

    static final short UNICODE_STRING_MAX_BYTES() { return (short)65534L; }

    static final int UNICODE_STRING_MAX_CHARS() { return (int)32767L; }

    static final int MINLONG() { return (int)2147483648L; }

    static final int MAXDWORD() { return (int)4294967295L; }

    static final int VER_SERVER_NT() { return (int)2147483648L; }

    static final int PRODUCT_UNLICENSED() { return (int)2882382797L; }

    static final int LANG_SYSTEM_DEFAULT() { return (int)2048L; }

    static final int LANG_USER_DEFAULT() { return (int)1024L; }

    static final int LOCALE_SYSTEM_DEFAULT() { return (int)2048L; }

    static final int LOCALE_USER_DEFAULT() { return (int)1024L; }

    static final int LOCALE_CUSTOM_DEFAULT() { return (int)3072L; }

    static final int LOCALE_CUSTOM_UNSPECIFIED() { return (int)4096L; }

    static final int LOCALE_CUSTOM_UI_DEFAULT() { return (int)5120L; }

    static final int LOCALE_NEUTRAL() { return (int)0L; }

    static final int LOCALE_INVARIANT() { return (int)127L; }

    static final int LOCALE_UNASSIGNED_LCID() { return (int)4096L; }

    static final int STATUS_WAIT_0() { return (int)0L; }

    static final int STATUS_ABANDONED_WAIT_0() { return (int)128L; }

    static final int STATUS_USER_APC() { return (int)192L; }

    static final int STATUS_TIMEOUT() { return (int)258L; }

    static final int STATUS_PENDING() { return (int)259L; }

    static final int DBG_EXCEPTION_HANDLED() { return (int)65537L; }

    static final int DBG_CONTINUE() { return (int)65538L; }

    static final int STATUS_SEGMENT_NOTIFICATION() { return (int)1073741829L; }

    static final int STATUS_FATAL_APP_EXIT() { return (int)1073741845L; }

    static final int DBG_REPLY_LATER() { return (int)1073807361L; }

    static final int DBG_TERMINATE_THREAD() { return (int)1073807363L; }

    static final int DBG_TERMINATE_PROCESS() { return (int)1073807364L; }

    static final int DBG_CONTROL_C() { return (int)1073807365L; }

    static final int DBG_PRINTEXCEPTION_C() { return (int)1073807366L; }

    static final int DBG_RIPEXCEPTION() { return (int)1073807367L; }

    static final int DBG_CONTROL_BREAK() { return (int)1073807368L; }

    static final int DBG_COMMAND_EXCEPTION() { return (int)1073807369L; }

    static final int DBG_PRINTEXCEPTION_WIDE_C() { return (int)1073807370L; }

    static final int STATUS_GUARD_PAGE_VIOLATION() { return (int)2147483649L; }

    static final int STATUS_DATATYPE_MISALIGNMENT() { return (int)2147483650L; }

    static final int STATUS_BREAKPOINT() { return (int)2147483651L; }

    static final int STATUS_SINGLE_STEP() { return (int)2147483652L; }

    static final int STATUS_LONGJUMP() { return (int)2147483686L; }

    static final int STATUS_UNWIND_CONSOLIDATE() { return (int)2147483689L; }

    static final int DBG_EXCEPTION_NOT_HANDLED() { return (int)2147549185L; }

    static final int STATUS_ACCESS_VIOLATION() { return (int)3221225477L; }

    static final int STATUS_IN_PAGE_ERROR() { return (int)3221225478L; }

    static final int STATUS_INVALID_HANDLE() { return (int)3221225480L; }

    static final int STATUS_INVALID_PARAMETER() { return (int)3221225485L; }

    static final int STATUS_NO_MEMORY() { return (int)3221225495L; }

    static final int STATUS_ILLEGAL_INSTRUCTION() { return (int)3221225501L; }

    static final int STATUS_NONCONTINUABLE_EXCEPTION() { return (int)3221225509L; }

    static final int STATUS_INVALID_DISPOSITION() { return (int)3221225510L; }

    static final int STATUS_ARRAY_BOUNDS_EXCEEDED() { return (int)3221225612L; }

    static final int STATUS_FLOAT_DENORMAL_OPERAND() { return (int)3221225613L; }

    static final int STATUS_FLOAT_DIVIDE_BY_ZERO() { return (int)3221225614L; }

    static final int STATUS_FLOAT_INEXACT_RESULT() { return (int)3221225615L; }

    static final int STATUS_FLOAT_INVALID_OPERATION() { return (int)3221225616L; }

    static final int STATUS_FLOAT_OVERFLOW() { return (int)3221225617L; }

    static final int STATUS_FLOAT_STACK_CHECK() { return (int)3221225618L; }

    static final int STATUS_FLOAT_UNDERFLOW() { return (int)3221225619L; }

    static final int STATUS_INTEGER_DIVIDE_BY_ZERO() { return (int)3221225620L; }

    static final int STATUS_INTEGER_OVERFLOW() { return (int)3221225621L; }

    static final int STATUS_PRIVILEGED_INSTRUCTION() { return (int)3221225622L; }

    static final int STATUS_STACK_OVERFLOW() { return (int)3221225725L; }

    static final int STATUS_DLL_NOT_FOUND() { return (int)3221225781L; }

    static final int STATUS_ORDINAL_NOT_FOUND() { return (int)3221225784L; }

    static final int STATUS_ENTRYPOINT_NOT_FOUND() { return (int)3221225785L; }

    static final int STATUS_CONTROL_C_EXIT() { return (int)3221225786L; }

    static final int STATUS_DLL_INIT_FAILED() { return (int)3221225794L; }

    static final int STATUS_CONTROL_STACK_VIOLATION() { return (int)3221225906L; }

    static final int STATUS_FLOAT_MULTIPLE_FAULTS() { return (int)3221226164L; }

    static final int STATUS_FLOAT_MULTIPLE_TRAPS() { return (int)3221226165L; }

    static final int STATUS_REG_NAT_CONSUMPTION() { return (int)3221226185L; }

    static final int STATUS_HEAP_CORRUPTION() { return (int)3221226356L; }

    static final int STATUS_STACK_BUFFER_OVERRUN() { return (int)3221226505L; }

    static final int STATUS_INVALID_CRUNTIME_PARAMETER() { return (int)3221226519L; }

    static final int STATUS_ASSERTION_FAILURE() { return (int)3221226528L; }

    static final int STATUS_ENCLAVE_VIOLATION() { return (int)3221226658L; }

    static final int STATUS_INTERRUPTED() { return (int)3221226773L; }

    static final int STATUS_THREAD_NOT_RUNNING() { return (int)3221226774L; }

    static final int STATUS_ALREADY_REGISTERED() { return (int)3221227288L; }

    static final int STATUS_SXS_EARLY_DEACTIVATION() { return (int)3222601743L; }

    static final int STATUS_SXS_INVALID_DEACTIVATION() { return (int)3222601744L; }

    static final int MAXIMUM_SUSPEND_COUNT() { return (int)127L; }

    static final int PF_TEMPORAL_LEVEL_1() { return (int)1L; }

    static final int PF_TEMPORAL_LEVEL_2() { return (int)2L; }

    static final int PF_TEMPORAL_LEVEL_3() { return (int)3L; }

    static final int PF_NON_TEMPORAL_LEVEL_ALL() { return (int)0L; }

    static final int CONTEXT_AMD64() { return (int)1048576L; }

    static final int CONTEXT_CONTROL() { return (int)1048577L; }

    static final int CONTEXT_INTEGER() { return (int)1048578L; }

    static final int CONTEXT_SEGMENTS() { return (int)1048580L; }

    static final int CONTEXT_FLOATING_POINT() { return (int)1048584L; }

    static final int CONTEXT_DEBUG_REGISTERS() { return (int)1048592L; }

    static final int CONTEXT_FULL() { return (int)1048587L; }

    static final int CONTEXT_ALL() { return (int)1048607L; }

    static final int CONTEXT_XSTATE() { return (int)1048640L; }

    static final int CONTEXT_EXCEPTION_ACTIVE() { return (int)134217728L; }

    static final int CONTEXT_SERVICE_ACTIVE() { return (int)268435456L; }

    static final int CONTEXT_EXCEPTION_REQUEST() { return (int)1073741824L; }

    static final int CONTEXT_EXCEPTION_REPORTING() { return (int)2147483648L; }

    static final int UNW_FLAG_NO_EPILOGUE() { return (int)2147483648L; }

    static final MemorySegment OUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_EXPORT_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("OutOfProcessFunctionTableCallback");
    static final jdk.incubator.foreign.MemorySegment OUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_EXPORT_NAME() { return OUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_EXPORT_NAME$SEGMENT_CONSTANT_; }

    static final int WOW64_CONTEXT_CONTROL() { return (int)65537L; }

    static final int WOW64_CONTEXT_INTEGER() { return (int)65538L; }

    static final int WOW64_CONTEXT_SEGMENTS() { return (int)65540L; }

    static final int WOW64_CONTEXT_FLOATING_POINT() { return (int)65544L; }

    static final int WOW64_CONTEXT_DEBUG_REGISTERS() { return (int)65552L; }

    static final int WOW64_CONTEXT_EXTENDED_REGISTERS() { return (int)65568L; }

    static final int WOW64_CONTEXT_FULL() { return (int)65543L; }

    static final int WOW64_CONTEXT_ALL() { return (int)65599L; }

    static final int WOW64_CONTEXT_XSTATE() { return (int)65600L; }

    static final int WOW64_CONTEXT_EXCEPTION_REPORTING() { return (int)2147483648L; }

    static final int EXCEPTION_UNWIND() { return (int)102L; }

    static final int DELETE() { return (int)65536L; }

    static final int READ_CONTROL() { return (int)131072L; }

    static final int WRITE_DAC() { return (int)262144L; }

    static final int WRITE_OWNER() { return (int)524288L; }

    static final int SYNCHRONIZE() { return (int)1048576L; }

    static final int STANDARD_RIGHTS_REQUIRED() { return (int)983040L; }

    static final int STANDARD_RIGHTS_READ() { return (int)131072L; }

    static final int STANDARD_RIGHTS_WRITE() { return (int)131072L; }

    static final int STANDARD_RIGHTS_EXECUTE() { return (int)131072L; }

    static final int STANDARD_RIGHTS_ALL() { return (int)2031616L; }

    static final int SPECIFIC_RIGHTS_ALL() { return (int)65535L; }

    static final int ACCESS_SYSTEM_SECURITY() { return (int)16777216L; }

    static final int MAXIMUM_ALLOWED() { return (int)33554432L; }

    static final int GENERIC_READ() { return (int)2147483648L; }

    static final int GENERIC_WRITE() { return (int)1073741824L; }

    static final int GENERIC_EXECUTE() { return (int)536870912L; }

    static final int GENERIC_ALL() { return (int)268435456L; }

    static final int SID_REVISION() { return (int)1L; }

    static final int SID_MAX_SUB_AUTHORITIES() { return (int)15L; }

    static final int SID_RECOMMENDED_SUB_AUTHORITIES() { return (int)1L; }

    static final long SECURITY_MAX_SID_SIZE() { return 68L; }

    static final int SECURITY_MAX_SID_STRING_CHARACTERS() { return (int)187L; }

    static final int SECURITY_NULL_RID() { return (int)0L; }

    static final int SECURITY_WORLD_RID() { return (int)0L; }

    static final int SECURITY_LOCAL_RID() { return (int)0L; }

    static final int SECURITY_LOCAL_LOGON_RID() { return (int)1L; }

    static final int SECURITY_CREATOR_OWNER_RID() { return (int)0L; }

    static final int SECURITY_CREATOR_GROUP_RID() { return (int)1L; }

    static final int SECURITY_CREATOR_OWNER_SERVER_RID() { return (int)2L; }

    static final int SECURITY_CREATOR_GROUP_SERVER_RID() { return (int)3L; }

    static final int SECURITY_CREATOR_OWNER_RIGHTS_RID() { return (int)4L; }

    static final int SECURITY_DIALUP_RID() { return (int)1L; }

    static final int SECURITY_NETWORK_RID() { return (int)2L; }

    static final int SECURITY_BATCH_RID() { return (int)3L; }

    static final int SECURITY_INTERACTIVE_RID() { return (int)4L; }

    static final int SECURITY_LOGON_IDS_RID() { return (int)5L; }

    static final int SECURITY_LOGON_IDS_RID_COUNT() { return (int)3L; }

    static final int SECURITY_SERVICE_RID() { return (int)6L; }

    static final int SECURITY_ANONYMOUS_LOGON_RID() { return (int)7L; }

    static final int SECURITY_PROXY_RID() { return (int)8L; }

    static final int SECURITY_ENTERPRISE_CONTROLLERS_RID() { return (int)9L; }

    static final int SECURITY_SERVER_LOGON_RID() { return (int)9L; }

    static final int SECURITY_PRINCIPAL_SELF_RID() { return (int)10L; }

    static final int SECURITY_AUTHENTICATED_USER_RID() { return (int)11L; }

    static final int SECURITY_RESTRICTED_CODE_RID() { return (int)12L; }

    static final int SECURITY_TERMINAL_SERVER_RID() { return (int)13L; }

    static final int SECURITY_REMOTE_LOGON_RID() { return (int)14L; }

    static final int SECURITY_THIS_ORGANIZATION_RID() { return (int)15L; }

    static final int SECURITY_IUSER_RID() { return (int)17L; }

    static final int SECURITY_LOCAL_SYSTEM_RID() { return (int)18L; }

    static final int SECURITY_LOCAL_SERVICE_RID() { return (int)19L; }

    static final int SECURITY_NETWORK_SERVICE_RID() { return (int)20L; }

    static final int SECURITY_NT_NON_UNIQUE() { return (int)21L; }

    static final int SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT() { return (int)3L; }

    static final int SECURITY_ENTERPRISE_READONLY_CONTROLLERS_RID() { return (int)22L; }

    static final int SECURITY_BUILTIN_DOMAIN_RID() { return (int)32L; }

    static final int SECURITY_WRITE_RESTRICTED_CODE_RID() { return (int)33L; }

    static final int SECURITY_PACKAGE_BASE_RID() { return (int)64L; }

    static final int SECURITY_PACKAGE_RID_COUNT() { return (int)2L; }

    static final int SECURITY_PACKAGE_NTLM_RID() { return (int)10L; }

    static final int SECURITY_PACKAGE_SCHANNEL_RID() { return (int)14L; }

    static final int SECURITY_PACKAGE_DIGEST_RID() { return (int)21L; }

    static final int SECURITY_CRED_TYPE_BASE_RID() { return (int)65L; }

    static final int SECURITY_CRED_TYPE_RID_COUNT() { return (int)2L; }

    static final int SECURITY_CRED_TYPE_THIS_ORG_CERT_RID() { return (int)1L; }

    static final int SECURITY_MIN_BASE_RID() { return (int)80L; }

    static final int SECURITY_SERVICE_ID_BASE_RID() { return (int)80L; }

    static final int SECURITY_SERVICE_ID_RID_COUNT() { return (int)6L; }

    static final int SECURITY_RESERVED_ID_BASE_RID() { return (int)81L; }

    static final int SECURITY_APPPOOL_ID_BASE_RID() { return (int)82L; }

    static final int SECURITY_APPPOOL_ID_RID_COUNT() { return (int)6L; }

    static final int SECURITY_VIRTUALSERVER_ID_BASE_RID() { return (int)83L; }

    static final int SECURITY_VIRTUALSERVER_ID_RID_COUNT() { return (int)6L; }

    static final int SECURITY_USERMODEDRIVERHOST_ID_BASE_RID() { return (int)84L; }

    static final int SECURITY_USERMODEDRIVERHOST_ID_RID_COUNT() { return (int)6L; }

    static final int SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_BASE_RID() { return (int)85L; }

    static final int SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_RID_COUNT() { return (int)6L; }

    static final int SECURITY_WMIHOST_ID_BASE_RID() { return (int)86L; }

    static final int SECURITY_WMIHOST_ID_RID_COUNT() { return (int)6L; }

    static final int SECURITY_TASK_ID_BASE_RID() { return (int)87L; }

    static final int SECURITY_NFS_ID_BASE_RID() { return (int)88L; }

    static final int SECURITY_COM_ID_BASE_RID() { return (int)89L; }

    static final int SECURITY_WINDOW_MANAGER_BASE_RID() { return (int)90L; }

    static final int SECURITY_RDV_GFX_BASE_RID() { return (int)91L; }

    static final int SECURITY_DASHOST_ID_BASE_RID() { return (int)92L; }

    static final int SECURITY_DASHOST_ID_RID_COUNT() { return (int)6L; }

    static final int SECURITY_USERMANAGER_ID_BASE_RID() { return (int)93L; }

    static final int SECURITY_USERMANAGER_ID_RID_COUNT() { return (int)6L; }

    static final int SECURITY_WINRM_ID_BASE_RID() { return (int)94L; }

    static final int SECURITY_WINRM_ID_RID_COUNT() { return (int)6L; }

    static final int SECURITY_CCG_ID_BASE_RID() { return (int)95L; }

    static final int SECURITY_UMFD_BASE_RID() { return (int)96L; }

    static final int SECURITY_VIRTUALACCOUNT_ID_RID_COUNT() { return (int)6L; }

    static final int SECURITY_MAX_BASE_RID() { return (int)111L; }

    static final int SECURITY_MAX_ALWAYS_FILTERED() { return (int)999L; }

    static final int SECURITY_MIN_NEVER_FILTERED() { return (int)1000L; }

    static final int SECURITY_OTHER_ORGANIZATION_RID() { return (int)1000L; }

    static final int SECURITY_WINDOWSMOBILE_ID_BASE_RID() { return (int)112L; }

    static final int SECURITY_INSTALLER_GROUP_CAPABILITY_BASE() { return (int)32L; }

    static final int SECURITY_INSTALLER_GROUP_CAPABILITY_RID_COUNT() { return (int)9L; }

    static final int SECURITY_INSTALLER_CAPABILITY_RID_COUNT() { return (int)10L; }

    static final int SECURITY_LOCAL_ACCOUNT_RID() { return (int)113L; }

    static final int SECURITY_LOCAL_ACCOUNT_AND_ADMIN_RID() { return (int)114L; }

    static final int DOMAIN_GROUP_RID_AUTHORIZATION_DATA_IS_COMPOUNDED() { return (int)496L; }

    static final int DOMAIN_GROUP_RID_AUTHORIZATION_DATA_CONTAINS_CLAIMS() { return (int)497L; }

    static final int DOMAIN_GROUP_RID_ENTERPRISE_READONLY_DOMAIN_CONTROLLERS() { return (int)498L; }

    static final int FOREST_USER_RID_MAX() { return (int)499L; }

    static final int DOMAIN_USER_RID_ADMIN() { return (int)500L; }

    static final int DOMAIN_USER_RID_GUEST() { return (int)501L; }

    static final int DOMAIN_USER_RID_KRBTGT() { return (int)502L; }

    static final int DOMAIN_USER_RID_DEFAULT_ACCOUNT() { return (int)503L; }

    static final int DOMAIN_USER_RID_WDAG_ACCOUNT() { return (int)504L; }

    static final int DOMAIN_USER_RID_MAX() { return (int)999L; }

    static final int DOMAIN_GROUP_RID_ADMINS() { return (int)512L; }

    static final int DOMAIN_GROUP_RID_USERS() { return (int)513L; }

    static final int DOMAIN_GROUP_RID_GUESTS() { return (int)514L; }

    static final int DOMAIN_GROUP_RID_COMPUTERS() { return (int)515L; }

    static final int DOMAIN_GROUP_RID_CONTROLLERS() { return (int)516L; }

    static final int DOMAIN_GROUP_RID_CERT_ADMINS() { return (int)517L; }

    static final int DOMAIN_GROUP_RID_SCHEMA_ADMINS() { return (int)518L; }

    static final int DOMAIN_GROUP_RID_ENTERPRISE_ADMINS() { return (int)519L; }

    static final int DOMAIN_GROUP_RID_POLICY_ADMINS() { return (int)520L; }

    static final int DOMAIN_GROUP_RID_READONLY_CONTROLLERS() { return (int)521L; }

    static final int DOMAIN_GROUP_RID_CLONEABLE_CONTROLLERS() { return (int)522L; }

    static final int DOMAIN_GROUP_RID_CDC_RESERVED() { return (int)524L; }

    static final int DOMAIN_GROUP_RID_PROTECTED_USERS() { return (int)525L; }

    static final int DOMAIN_GROUP_RID_KEY_ADMINS() { return (int)526L; }

    static final int DOMAIN_GROUP_RID_ENTERPRISE_KEY_ADMINS() { return (int)527L; }

    static final int DOMAIN_ALIAS_RID_ADMINS() { return (int)544L; }

    static final int DOMAIN_ALIAS_RID_USERS() { return (int)545L; }

    static final int DOMAIN_ALIAS_RID_GUESTS() { return (int)546L; }

    static final int DOMAIN_ALIAS_RID_POWER_USERS() { return (int)547L; }

    static final int DOMAIN_ALIAS_RID_ACCOUNT_OPS() { return (int)548L; }

    static final int DOMAIN_ALIAS_RID_SYSTEM_OPS() { return (int)549L; }

    static final int DOMAIN_ALIAS_RID_PRINT_OPS() { return (int)550L; }

    static final int DOMAIN_ALIAS_RID_BACKUP_OPS() { return (int)551L; }

    static final int DOMAIN_ALIAS_RID_REPLICATOR() { return (int)552L; }

    static final int DOMAIN_ALIAS_RID_RAS_SERVERS() { return (int)553L; }

    static final int DOMAIN_ALIAS_RID_PREW2KCOMPACCESS() { return (int)554L; }

    static final int DOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS() { return (int)555L; }

    static final int DOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS() { return (int)556L; }

    static final int DOMAIN_ALIAS_RID_INCOMING_FOREST_TRUST_BUILDERS() { return (int)557L; }

    static final int DOMAIN_ALIAS_RID_MONITORING_USERS() { return (int)558L; }

    static final int DOMAIN_ALIAS_RID_LOGGING_USERS() { return (int)559L; }

    static final int DOMAIN_ALIAS_RID_AUTHORIZATIONACCESS() { return (int)560L; }

    static final int DOMAIN_ALIAS_RID_TS_LICENSE_SERVERS() { return (int)561L; }

    static final int DOMAIN_ALIAS_RID_DCOM_USERS() { return (int)562L; }

    static final int DOMAIN_ALIAS_RID_IUSERS() { return (int)568L; }

    static final int DOMAIN_ALIAS_RID_CRYPTO_OPERATORS() { return (int)569L; }

    static final int DOMAIN_ALIAS_RID_CACHEABLE_PRINCIPALS_GROUP() { return (int)571L; }

    static final int DOMAIN_ALIAS_RID_NON_CACHEABLE_PRINCIPALS_GROUP() { return (int)572L; }

    static final int DOMAIN_ALIAS_RID_EVENT_LOG_READERS_GROUP() { return (int)573L; }

    static final int DOMAIN_ALIAS_RID_CERTSVC_DCOM_ACCESS_GROUP() { return (int)574L; }

    static final int DOMAIN_ALIAS_RID_RDS_REMOTE_ACCESS_SERVERS() { return (int)575L; }

    static final int DOMAIN_ALIAS_RID_RDS_ENDPOINT_SERVERS() { return (int)576L; }

    static final int DOMAIN_ALIAS_RID_RDS_MANAGEMENT_SERVERS() { return (int)577L; }

    static final int DOMAIN_ALIAS_RID_HYPER_V_ADMINS() { return (int)578L; }

    static final int DOMAIN_ALIAS_RID_ACCESS_CONTROL_ASSISTANCE_OPS() { return (int)579L; }

    static final int DOMAIN_ALIAS_RID_REMOTE_MANAGEMENT_USERS() { return (int)580L; }

    static final int DOMAIN_ALIAS_RID_DEFAULT_ACCOUNT() { return (int)581L; }

    static final int DOMAIN_ALIAS_RID_STORAGE_REPLICA_ADMINS() { return (int)582L; }

    static final int DOMAIN_ALIAS_RID_DEVICE_OWNERS() { return (int)583L; }

    static final int SECURITY_APP_PACKAGE_BASE_RID() { return (int)2L; }

    static final int SECURITY_BUILTIN_APP_PACKAGE_RID_COUNT() { return (int)2L; }

    static final int SECURITY_APP_PACKAGE_RID_COUNT() { return (int)8L; }

    static final int SECURITY_CAPABILITY_BASE_RID() { return (int)3L; }

    static final int SECURITY_CAPABILITY_APP_RID() { return (int)1024L; }

    static final int SECURITY_BUILTIN_CAPABILITY_RID_COUNT() { return (int)2L; }

    static final int SECURITY_CAPABILITY_RID_COUNT() { return (int)5L; }

    static final int SECURITY_PARENT_PACKAGE_RID_COUNT() { return (int)8L; }

    static final int SECURITY_CHILD_PACKAGE_RID_COUNT() { return (int)12L; }

    static final int SECURITY_BUILTIN_PACKAGE_ANY_PACKAGE() { return (int)1L; }

    static final int SECURITY_BUILTIN_PACKAGE_ANY_RESTRICTED_PACKAGE() { return (int)2L; }

    static final int SECURITY_CAPABILITY_INTERNET_CLIENT() { return (int)1L; }

    static final int SECURITY_CAPABILITY_INTERNET_CLIENT_SERVER() { return (int)2L; }

    static final int SECURITY_CAPABILITY_PRIVATE_NETWORK_CLIENT_SERVER() { return (int)3L; }

    static final int SECURITY_CAPABILITY_PICTURES_LIBRARY() { return (int)4L; }

    static final int SECURITY_CAPABILITY_VIDEOS_LIBRARY() { return (int)5L; }

    static final int SECURITY_CAPABILITY_MUSIC_LIBRARY() { return (int)6L; }

    static final int SECURITY_CAPABILITY_DOCUMENTS_LIBRARY() { return (int)7L; }

    static final int SECURITY_CAPABILITY_ENTERPRISE_AUTHENTICATION() { return (int)8L; }

    static final int SECURITY_CAPABILITY_SHARED_USER_CERTIFICATES() { return (int)9L; }

    static final int SECURITY_CAPABILITY_REMOVABLE_STORAGE() { return (int)10L; }

    static final int SECURITY_CAPABILITY_APPOINTMENTS() { return (int)11L; }

    static final int SECURITY_CAPABILITY_CONTACTS() { return (int)12L; }

    static final int SECURITY_CAPABILITY_INTERNET_EXPLORER() { return (int)4096L; }

    static final int SECURITY_MANDATORY_UNTRUSTED_RID() { return (int)0L; }

    static final int SECURITY_MANDATORY_LOW_RID() { return (int)4096L; }

    static final int SECURITY_MANDATORY_MEDIUM_RID() { return (int)8192L; }

    static final int SECURITY_MANDATORY_MEDIUM_PLUS_RID() { return (int)8448L; }

    static final int SECURITY_MANDATORY_HIGH_RID() { return (int)12288L; }

    static final int SECURITY_MANDATORY_SYSTEM_RID() { return (int)16384L; }

    static final int SECURITY_MANDATORY_PROTECTED_PROCESS_RID() { return (int)20480L; }

    static final int SECURITY_MANDATORY_MAXIMUM_USER_RID() { return (int)16384L; }

    static final int SECURITY_AUTHENTICATION_AUTHORITY_RID_COUNT() { return (int)1L; }

    static final int SECURITY_AUTHENTICATION_AUTHORITY_ASSERTED_RID() { return (int)1L; }

    static final int SECURITY_AUTHENTICATION_SERVICE_ASSERTED_RID() { return (int)2L; }

    static final int SECURITY_AUTHENTICATION_FRESH_KEY_AUTH_RID() { return (int)3L; }

    static final int SECURITY_AUTHENTICATION_KEY_TRUST_RID() { return (int)4L; }

    static final int SECURITY_AUTHENTICATION_KEY_PROPERTY_MFA_RID() { return (int)5L; }

    static final int SECURITY_AUTHENTICATION_KEY_PROPERTY_ATTESTATION_RID() { return (int)6L; }

    static final int SECURITY_PROCESS_TRUST_AUTHORITY_RID_COUNT() { return (int)2L; }

    static final int SECURITY_PROCESS_PROTECTION_TYPE_FULL_RID() { return (int)1024L; }

    static final int SECURITY_PROCESS_PROTECTION_TYPE_LITE_RID() { return (int)512L; }

    static final int SECURITY_PROCESS_PROTECTION_TYPE_NONE_RID() { return (int)0L; }

    static final int SECURITY_PROCESS_PROTECTION_LEVEL_WINTCB_RID() { return (int)8192L; }

    static final int SECURITY_PROCESS_PROTECTION_LEVEL_WINDOWS_RID() { return (int)4096L; }

    static final int SECURITY_PROCESS_PROTECTION_LEVEL_APP_RID() { return (int)2048L; }

    static final int SECURITY_PROCESS_PROTECTION_LEVEL_ANTIMALWARE_RID() { return (int)1536L; }

    static final int SECURITY_PROCESS_PROTECTION_LEVEL_AUTHENTICODE_RID() { return (int)1024L; }

    static final int SECURITY_PROCESS_PROTECTION_LEVEL_NONE_RID() { return (int)0L; }

    static final long SECURITY_TRUSTED_INSTALLER_RID2() { return 3418522649L; }

    static final long SECURITY_TRUSTED_INSTALLER_RID5() { return 2271478464L; }

    static final int SE_GROUP_MANDATORY() { return (int)1L; }

    static final int SE_GROUP_ENABLED_BY_DEFAULT() { return (int)2L; }

    static final int SE_GROUP_ENABLED() { return (int)4L; }

    static final int SE_GROUP_OWNER() { return (int)8L; }

    static final int SE_GROUP_USE_FOR_DENY_ONLY() { return (int)16L; }

    static final int SE_GROUP_INTEGRITY() { return (int)32L; }

    static final int SE_GROUP_INTEGRITY_ENABLED() { return (int)64L; }

    static final int SE_GROUP_LOGON_ID() { return (int)3221225472L; }

    static final int SE_GROUP_RESOURCE() { return (int)536870912L; }

    static final int SE_GROUP_VALID_ATTRIBUTES() { return (int)3758096511L; }

    static final int ACL_REVISION() { return (int)2L; }

    static final int ACL_REVISION_DS() { return (int)4L; }

    static final int ACL_REVISION1() { return (int)1L; }

    static final int MIN_ACL_REVISION() { return (int)2L; }

    static final int ACL_REVISION2() { return (int)2L; }

    static final int ACL_REVISION3() { return (int)3L; }

    static final int ACL_REVISION4() { return (int)4L; }

    static final int MAX_ACL_REVISION() { return (int)4L; }

    static final int ACCESS_MIN_MS_ACE_TYPE() { return (int)0L; }

    static final int ACCESS_ALLOWED_ACE_TYPE() { return (int)0L; }

    static final int ACCESS_DENIED_ACE_TYPE() { return (int)1L; }

    static final int SYSTEM_AUDIT_ACE_TYPE() { return (int)2L; }

    static final int SYSTEM_ALARM_ACE_TYPE() { return (int)3L; }

    static final int ACCESS_MAX_MS_V2_ACE_TYPE() { return (int)3L; }

    static final int ACCESS_ALLOWED_COMPOUND_ACE_TYPE() { return (int)4L; }

    static final int ACCESS_MAX_MS_V3_ACE_TYPE() { return (int)4L; }

    static final int ACCESS_MIN_MS_OBJECT_ACE_TYPE() { return (int)5L; }

    static final int ACCESS_ALLOWED_OBJECT_ACE_TYPE() { return (int)5L; }

    static final int ACCESS_DENIED_OBJECT_ACE_TYPE() { return (int)6L; }

    static final int SYSTEM_AUDIT_OBJECT_ACE_TYPE() { return (int)7L; }

    static final int SYSTEM_ALARM_OBJECT_ACE_TYPE() { return (int)8L; }

    static final int ACCESS_MAX_MS_OBJECT_ACE_TYPE() { return (int)8L; }

    static final int ACCESS_MAX_MS_V4_ACE_TYPE() { return (int)8L; }

    static final int ACCESS_MAX_MS_ACE_TYPE() { return (int)8L; }

    static final int ACCESS_ALLOWED_CALLBACK_ACE_TYPE() { return (int)9L; }

    static final int ACCESS_DENIED_CALLBACK_ACE_TYPE() { return (int)10L; }

    static final int ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE() { return (int)11L; }

    static final int ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE() { return (int)12L; }

    static final int SYSTEM_AUDIT_CALLBACK_ACE_TYPE() { return (int)13L; }

    static final int SYSTEM_ALARM_CALLBACK_ACE_TYPE() { return (int)14L; }

    static final int SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE() { return (int)15L; }

    static final int SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE() { return (int)16L; }

    static final int SYSTEM_MANDATORY_LABEL_ACE_TYPE() { return (int)17L; }

    static final int SYSTEM_RESOURCE_ATTRIBUTE_ACE_TYPE() { return (int)18L; }

    static final int SYSTEM_SCOPED_POLICY_ID_ACE_TYPE() { return (int)19L; }

    static final int SYSTEM_PROCESS_TRUST_LABEL_ACE_TYPE() { return (int)20L; }

    static final int SYSTEM_ACCESS_FILTER_ACE_TYPE() { return (int)21L; }

    static final int ACCESS_MAX_MS_V5_ACE_TYPE() { return (int)21L; }

    static final int OBJECT_INHERIT_ACE() { return (int)1L; }

    static final int CONTAINER_INHERIT_ACE() { return (int)2L; }

    static final int NO_PROPAGATE_INHERIT_ACE() { return (int)4L; }

    static final int INHERIT_ONLY_ACE() { return (int)8L; }

    static final int INHERITED_ACE() { return (int)16L; }

    static final int VALID_INHERIT_FLAGS() { return (int)31L; }

    static final int CRITICAL_ACE_FLAG() { return (int)32L; }

    static final int SUCCESSFUL_ACCESS_ACE_FLAG() { return (int)64L; }

    static final int FAILED_ACCESS_ACE_FLAG() { return (int)128L; }

    static final int TRUST_PROTECTED_FILTER_ACE_FLAG() { return (int)64L; }

    static final int SYSTEM_MANDATORY_LABEL_VALID_MASK() { return (int)7L; }

    static final int SYSTEM_PROCESS_TRUST_NOCONSTRAINT_MASK() { return (int)4294967295L; }

    static final int SYSTEM_ACCESS_FILTER_NOCONSTRAINT_MASK() { return (int)4294967295L; }

    static final int SECURITY_DESCRIPTOR_REVISION() { return (int)1L; }

    static final int SECURITY_DESCRIPTOR_REVISION1() { return (int)1L; }

    static final long SECURITY_DESCRIPTOR_MIN_LENGTH() { return 40L; }

    static final int SE_OWNER_DEFAULTED() { return (int)1L; }

    static final int SE_GROUP_DEFAULTED() { return (int)2L; }

    static final int SE_DACL_PRESENT() { return (int)4L; }

    static final int SE_DACL_DEFAULTED() { return (int)8L; }

    static final int SE_SACL_PRESENT() { return (int)16L; }

    static final int SE_SACL_DEFAULTED() { return (int)32L; }

    static final int SE_DACL_AUTO_INHERIT_REQ() { return (int)256L; }

    static final int SE_SACL_AUTO_INHERIT_REQ() { return (int)512L; }

    static final int SE_DACL_AUTO_INHERITED() { return (int)1024L; }

    static final int SE_SACL_AUTO_INHERITED() { return (int)2048L; }

    static final int SE_DACL_PROTECTED() { return (int)4096L; }

    static final int SE_SACL_PROTECTED() { return (int)8192L; }

    static final int SE_RM_CONTROL_VALID() { return (int)16384L; }

    static final int SE_SELF_RELATIVE() { return (int)32768L; }

    static final MemorySegment ACCESS_DS_SOURCE_A$SEGMENT_CONSTANT_ = CLinker.toCString("DS");
    static final jdk.incubator.foreign.MemorySegment ACCESS_DS_SOURCE_A() { return ACCESS_DS_SOURCE_A$SEGMENT_CONSTANT_; }

    static final MemorySegment ACCESS_DS_SOURCE_W$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment ACCESS_DS_SOURCE_W() { return ACCESS_DS_SOURCE_W$SEGMENT_CONSTANT_; }

    static final MemorySegment ACCESS_DS_OBJECT_TYPE_NAME_A$SEGMENT_CONSTANT_ = CLinker.toCString("Directory Service Object");
    static final jdk.incubator.foreign.MemorySegment ACCESS_DS_OBJECT_TYPE_NAME_A() { return ACCESS_DS_OBJECT_TYPE_NAME_A$SEGMENT_CONSTANT_; }

    static final MemorySegment ACCESS_DS_OBJECT_TYPE_NAME_W$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment ACCESS_DS_OBJECT_TYPE_NAME_W() { return ACCESS_DS_OBJECT_TYPE_NAME_W$SEGMENT_CONSTANT_; }

    static final int SE_PRIVILEGE_ENABLED_BY_DEFAULT() { return (int)1L; }

    static final int SE_PRIVILEGE_ENABLED() { return (int)2L; }

    static final int SE_PRIVILEGE_REMOVED() { return (int)4L; }

    static final int SE_PRIVILEGE_USED_FOR_ACCESS() { return (int)2147483648L; }

    static final int SE_PRIVILEGE_VALID_ATTRIBUTES() { return (int)2147483655L; }

    static final int PRIVILEGE_SET_ALL_NECESSARY() { return (int)1L; }

    static final int ACCESS_REASON_STAGING_MASK() { return (int)2147483648L; }

    static final MemorySegment SE_CREATE_TOKEN_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeCreateTokenPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_CREATE_TOKEN_NAME() { return SE_CREATE_TOKEN_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_ASSIGNPRIMARYTOKEN_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeAssignPrimaryTokenPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_ASSIGNPRIMARYTOKEN_NAME() { return SE_ASSIGNPRIMARYTOKEN_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_LOCK_MEMORY_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeLockMemoryPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_LOCK_MEMORY_NAME() { return SE_LOCK_MEMORY_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_INCREASE_QUOTA_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeIncreaseQuotaPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_INCREASE_QUOTA_NAME() { return SE_INCREASE_QUOTA_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_UNSOLICITED_INPUT_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeUnsolicitedInputPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_UNSOLICITED_INPUT_NAME() { return SE_UNSOLICITED_INPUT_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_MACHINE_ACCOUNT_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeMachineAccountPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_MACHINE_ACCOUNT_NAME() { return SE_MACHINE_ACCOUNT_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_TCB_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeTcbPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_TCB_NAME() { return SE_TCB_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_SECURITY_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeSecurityPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_SECURITY_NAME() { return SE_SECURITY_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_TAKE_OWNERSHIP_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeTakeOwnershipPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_TAKE_OWNERSHIP_NAME() { return SE_TAKE_OWNERSHIP_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_LOAD_DRIVER_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeLoadDriverPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_LOAD_DRIVER_NAME() { return SE_LOAD_DRIVER_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_SYSTEM_PROFILE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeSystemProfilePrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_SYSTEM_PROFILE_NAME() { return SE_SYSTEM_PROFILE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_SYSTEMTIME_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeSystemtimePrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_SYSTEMTIME_NAME() { return SE_SYSTEMTIME_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_PROF_SINGLE_PROCESS_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeProfileSingleProcessPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_PROF_SINGLE_PROCESS_NAME() { return SE_PROF_SINGLE_PROCESS_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_INC_BASE_PRIORITY_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeIncreaseBasePriorityPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_INC_BASE_PRIORITY_NAME() { return SE_INC_BASE_PRIORITY_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_CREATE_PAGEFILE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeCreatePagefilePrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_CREATE_PAGEFILE_NAME() { return SE_CREATE_PAGEFILE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_CREATE_PERMANENT_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeCreatePermanentPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_CREATE_PERMANENT_NAME() { return SE_CREATE_PERMANENT_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_BACKUP_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeBackupPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_BACKUP_NAME() { return SE_BACKUP_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_RESTORE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeRestorePrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_RESTORE_NAME() { return SE_RESTORE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_SHUTDOWN_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeShutdownPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_SHUTDOWN_NAME() { return SE_SHUTDOWN_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_DEBUG_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeDebugPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_DEBUG_NAME() { return SE_DEBUG_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_AUDIT_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeAuditPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_AUDIT_NAME() { return SE_AUDIT_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_SYSTEM_ENVIRONMENT_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeSystemEnvironmentPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_SYSTEM_ENVIRONMENT_NAME() { return SE_SYSTEM_ENVIRONMENT_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_CHANGE_NOTIFY_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeChangeNotifyPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_CHANGE_NOTIFY_NAME() { return SE_CHANGE_NOTIFY_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_REMOTE_SHUTDOWN_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeRemoteShutdownPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_REMOTE_SHUTDOWN_NAME() { return SE_REMOTE_SHUTDOWN_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_UNDOCK_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeUndockPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_UNDOCK_NAME() { return SE_UNDOCK_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_SYNC_AGENT_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeSyncAgentPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_SYNC_AGENT_NAME() { return SE_SYNC_AGENT_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_ENABLE_DELEGATION_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeEnableDelegationPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_ENABLE_DELEGATION_NAME() { return SE_ENABLE_DELEGATION_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_MANAGE_VOLUME_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeManageVolumePrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_MANAGE_VOLUME_NAME() { return SE_MANAGE_VOLUME_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_IMPERSONATE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeImpersonatePrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_IMPERSONATE_NAME() { return SE_IMPERSONATE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_CREATE_GLOBAL_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeCreateGlobalPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_CREATE_GLOBAL_NAME() { return SE_CREATE_GLOBAL_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_TRUSTED_CREDMAN_ACCESS_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeTrustedCredManAccessPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_TRUSTED_CREDMAN_ACCESS_NAME() { return SE_TRUSTED_CREDMAN_ACCESS_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_RELABEL_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeRelabelPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_RELABEL_NAME() { return SE_RELABEL_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_INC_WORKING_SET_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeIncreaseWorkingSetPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_INC_WORKING_SET_NAME() { return SE_INC_WORKING_SET_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_TIME_ZONE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeTimeZonePrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_TIME_ZONE_NAME() { return SE_TIME_ZONE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_CREATE_SYMBOLIC_LINK_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeCreateSymbolicLinkPrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_CREATE_SYMBOLIC_LINK_NAME() { return SE_CREATE_SYMBOLIC_LINK_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_DELEGATE_SESSION_USER_IMPERSONATE_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("SeDelegateSessionUserImpersonatePrivilege");
    static final jdk.incubator.foreign.MemorySegment SE_DELEGATE_SESSION_USER_IMPERSONATE_NAME() { return SE_DELEGATE_SESSION_USER_IMPERSONATE_NAME$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_ACTIVATE_AS_USER_CAPABILITY$SEGMENT_CONSTANT_ = CLinker.toCString("a");
    static final jdk.incubator.foreign.MemorySegment SE_ACTIVATE_AS_USER_CAPABILITY() { return SE_ACTIVATE_AS_USER_CAPABILITY$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_CONSTRAINED_IMPERSONATION_CAPABILITY$SEGMENT_CONSTANT_ = CLinker.toCString("c");
    static final jdk.incubator.foreign.MemorySegment SE_CONSTRAINED_IMPERSONATION_CAPABILITY() { return SE_CONSTRAINED_IMPERSONATION_CAPABILITY$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_SESSION_IMPERSONATION_CAPABILITY$SEGMENT_CONSTANT_ = CLinker.toCString("s");
    static final jdk.incubator.foreign.MemorySegment SE_SESSION_IMPERSONATION_CAPABILITY() { return SE_SESSION_IMPERSONATION_CAPABILITY$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_MUMA_CAPABILITY$SEGMENT_CONSTANT_ = CLinker.toCString("m");
    static final jdk.incubator.foreign.MemorySegment SE_MUMA_CAPABILITY() { return SE_MUMA_CAPABILITY$SEGMENT_CONSTANT_; }

    static final MemorySegment SE_DEVELOPMENT_MODE_NETWORK_CAPABILITY$SEGMENT_CONSTANT_ = CLinker.toCString("d");
    static final jdk.incubator.foreign.MemorySegment SE_DEVELOPMENT_MODE_NETWORK_CAPABILITY() { return SE_DEVELOPMENT_MODE_NETWORK_CAPABILITY$SEGMENT_CONSTANT_; }

    static final int SECURITY_MAX_IMPERSONATION_LEVEL() { return (int)3L; }

    static final int SECURITY_MIN_IMPERSONATION_LEVEL() { return (int)0L; }

    static final int DEFAULT_IMPERSONATION_LEVEL() { return (int)2L; }

    static final int TOKEN_ASSIGN_PRIMARY() { return (int)1L; }

    static final int TOKEN_DUPLICATE() { return (int)2L; }

    static final int TOKEN_IMPERSONATE() { return (int)4L; }

    static final int TOKEN_QUERY() { return (int)8L; }

    static final int TOKEN_QUERY_SOURCE() { return (int)16L; }

    static final int TOKEN_ADJUST_PRIVILEGES() { return (int)32L; }

    static final int TOKEN_ADJUST_GROUPS() { return (int)64L; }

    static final int TOKEN_ADJUST_DEFAULT() { return (int)128L; }

    static final int TOKEN_ADJUST_SESSIONID() { return (int)256L; }

    static final int TOKEN_ALL_ACCESS_P() { return (int)983295L; }

    static final int TOKEN_ALL_ACCESS() { return (int)983551L; }

    static final int TOKEN_READ() { return (int)131080L; }

    static final int TOKEN_WRITE() { return (int)131296L; }

    static final int TOKEN_EXECUTE() { return (int)131072L; }

    static final int TOKEN_TRUST_CONSTRAINT_MASK() { return (int)131096L; }

    static final int TOKEN_ACCESS_PSEUDO_HANDLE_WIN8() { return (int)24L; }

    static final int TOKEN_ACCESS_PSEUDO_HANDLE() { return (int)24L; }

    static final long TOKEN_USER_MAX_SIZE() { return 84L; }

    static final long TOKEN_OWNER_MAX_SIZE() { return 76L; }

    static final int TOKEN_MANDATORY_POLICY_VALID_MASK() { return (int)3L; }

    static final long TOKEN_INTEGRITY_LEVEL_MAX_SIZE() { return 84L; }

    static final int POLICY_AUDIT_SUBCATEGORY_COUNT() { return (int)59L; }

    static final long TOKEN_APPCONTAINER_SID_MAX_SIZE() { return 76L; }

    static final int CLAIM_SECURITY_ATTRIBUTE_VALID_FLAGS() { return (int)63L; }

    static final int CLAIM_SECURITY_ATTRIBUTE_CUSTOM_FLAGS() { return (int)4294901760L; }

    static final int CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION() { return (int)1L; }

    static final int SECURITY_DYNAMIC_TRACKING() { return (int)1L; }

    static final int SECURITY_STATIC_TRACKING() { return (int)0L; }

    static final int OWNER_SECURITY_INFORMATION() { return (int)1L; }

    static final int GROUP_SECURITY_INFORMATION() { return (int)2L; }

    static final int DACL_SECURITY_INFORMATION() { return (int)4L; }

    static final int SACL_SECURITY_INFORMATION() { return (int)8L; }

    static final int LABEL_SECURITY_INFORMATION() { return (int)16L; }

    static final int ATTRIBUTE_SECURITY_INFORMATION() { return (int)32L; }

    static final int SCOPE_SECURITY_INFORMATION() { return (int)64L; }

    static final int PROCESS_TRUST_LABEL_SECURITY_INFORMATION() { return (int)128L; }

    static final int ACCESS_FILTER_SECURITY_INFORMATION() { return (int)256L; }

    static final int BACKUP_SECURITY_INFORMATION() { return (int)65536L; }

    static final int PROTECTED_DACL_SECURITY_INFORMATION() { return (int)2147483648L; }

    static final int PROTECTED_SACL_SECURITY_INFORMATION() { return (int)1073741824L; }

    static final int UNPROTECTED_DACL_SECURITY_INFORMATION() { return (int)536870912L; }

    static final int UNPROTECTED_SACL_SECURITY_INFORMATION() { return (int)268435456L; }

    static final int SE_SIGNING_LEVEL_DEVELOPER() { return (int)3L; }

    static final int SE_SIGNING_LEVEL_ANTIMALWARE() { return (int)7L; }

    static final int PROCESS_TERMINATE() { return (int)1L; }

    static final int PROCESS_CREATE_THREAD() { return (int)2L; }

    static final int PROCESS_SET_SESSIONID() { return (int)4L; }

    static final int PROCESS_VM_OPERATION() { return (int)8L; }

    static final int PROCESS_VM_READ() { return (int)16L; }

    static final int PROCESS_VM_WRITE() { return (int)32L; }

    static final int PROCESS_DUP_HANDLE() { return (int)64L; }

    static final int PROCESS_CREATE_PROCESS() { return (int)128L; }

    static final int PROCESS_SET_QUOTA() { return (int)256L; }

    static final int PROCESS_SET_INFORMATION() { return (int)512L; }

    static final int PROCESS_QUERY_INFORMATION() { return (int)1024L; }

    static final int PROCESS_SUSPEND_RESUME() { return (int)2048L; }

    static final int PROCESS_QUERY_LIMITED_INFORMATION() { return (int)4096L; }

    static final int PROCESS_SET_LIMITED_INFORMATION() { return (int)8192L; }

    static final int PROCESS_ALL_ACCESS() { return (int)2097151L; }

    static final int THREAD_TERMINATE() { return (int)1L; }

    static final int THREAD_SUSPEND_RESUME() { return (int)2L; }

    static final int THREAD_GET_CONTEXT() { return (int)8L; }

    static final int THREAD_SET_CONTEXT() { return (int)16L; }

    static final int THREAD_QUERY_INFORMATION() { return (int)64L; }

    static final int THREAD_SET_INFORMATION() { return (int)32L; }

    static final int THREAD_SET_THREAD_TOKEN() { return (int)128L; }

    static final int THREAD_IMPERSONATE() { return (int)256L; }

    static final int THREAD_DIRECT_IMPERSONATION() { return (int)512L; }

    static final int THREAD_SET_LIMITED_INFORMATION() { return (int)1024L; }

    static final int THREAD_QUERY_LIMITED_INFORMATION() { return (int)2048L; }

    static final int THREAD_RESUME() { return (int)4096L; }

    static final int THREAD_ALL_ACCESS() { return (int)2097151L; }

    static final int JOB_OBJECT_ASSIGN_PROCESS() { return (int)1L; }

    static final int JOB_OBJECT_SET_ATTRIBUTES() { return (int)2L; }

    static final int JOB_OBJECT_QUERY() { return (int)4L; }

    static final int JOB_OBJECT_TERMINATE() { return (int)8L; }

    static final int JOB_OBJECT_SET_SECURITY_ATTRIBUTES() { return (int)16L; }

    static final int JOB_OBJECT_IMPERSONATE() { return (int)32L; }

    static final int JOB_OBJECT_ALL_ACCESS() { return (int)2031679L; }

    static final int THREAD_BASE_PRIORITY_MIN() { return (int)-2L; }

    static final int THREAD_BASE_PRIORITY_IDLE() { return (int)-15L; }

    static final int DYNAMIC_EH_CONTINUATION_TARGET_ADD() { return (int)1L; }

    static final int DYNAMIC_EH_CONTINUATION_TARGET_PROCESSED() { return (int)2L; }

    static final int JOB_OBJECT_VALID_COMPLETION_FILTER() { return (int)16382L; }

    static final int JOB_OBJECT_LIMIT_JOB_MEMORY_HIGH() { return (int)512L; }

    static final int JOB_OBJECT_LIMIT_CPU_RATE_CONTROL() { return (int)262144L; }

    static final int JOB_OBJECT_NOTIFICATION_LIMIT_VALID_FLAGS() { return (int)2064900L; }

    static final int EVENT_ALL_ACCESS() { return (int)2031619L; }

    static final int MUTANT_ALL_ACCESS() { return (int)2031617L; }

    static final int SEMAPHORE_ALL_ACCESS() { return (int)2031619L; }

    static final int TIMER_ALL_ACCESS() { return (int)2031619L; }

    static final int XSTATE_LEGACY_FLOATING_POINT() { return (int)0L; }

    static final int XSTATE_LEGACY_SSE() { return (int)1L; }

    static final int XSTATE_GSSE() { return (int)2L; }

    static final int XSTATE_AVX() { return (int)2L; }

    static final int XSTATE_MPX_BNDREGS() { return (int)3L; }

    static final int XSTATE_MPX_BNDCSR() { return (int)4L; }

    static final int XSTATE_AVX512_KMASK() { return (int)5L; }

    static final int XSTATE_AVX512_ZMM_H() { return (int)6L; }

    static final int XSTATE_AVX512_ZMM() { return (int)7L; }

    static final int XSTATE_IPT() { return (int)8L; }

    static final int XSTATE_CET_U() { return (int)11L; }

    static final int XSTATE_LWP() { return (int)62L; }

    static final int MAXIMUM_XSTATE_FEATURES() { return (int)64L; }

    static final long XSTATE_MASK_LEGACY_FLOATING_POINT() { return 1L; }

    static final long XSTATE_MASK_LEGACY_SSE() { return 2L; }

    static final long XSTATE_MASK_LEGACY() { return 3L; }

    static final long XSTATE_MASK_GSSE() { return 4L; }

    static final long XSTATE_MASK_AVX() { return 4L; }

    static final long XSTATE_MASK_MPX() { return 24L; }

    static final long XSTATE_MASK_AVX512() { return 224L; }

    static final long XSTATE_MASK_IPT() { return 256L; }

    static final long XSTATE_MASK_CET_U() { return 2048L; }

    static final long XSTATE_MASK_LWP() { return 4611686018427387904L; }

    static final long XSTATE_MASK_ALLOWED() { return 4611686018427390463L; }

    static final long XSTATE_MASK_PERSISTENT() { return 4611686018427387920L; }

    static final long XSTATE_MASK_USER_VISIBLE_SUPERVISOR() { return 2048L; }

    static final int XSTATE_COMPACTION_ENABLE() { return (int)63L; }

    static final long XSTATE_COMPACTION_ENABLE_MASK() { return -9223372036854775808L; }

    static final int XSTATE_ALIGN_BIT() { return (int)1L; }

    static final long XSTATE_ALIGN_MASK() { return 2L; }

    static final int XSTATE_CONTROLFLAG_XSAVEOPT_MASK() { return (int)1L; }

    static final int XSTATE_CONTROLFLAG_XSAVEC_MASK() { return (int)2L; }

    static final int XSTATE_CONTROLFLAG_VALID_MASK() { return (int)3L; }

    static final int CFG_CALL_TARGET_VALID() { return (int)1L; }

    static final int CFG_CALL_TARGET_PROCESSED() { return (int)2L; }

    static final int CFG_CALL_TARGET_CONVERT_EXPORT_SUPPRESSED_TO_VALID() { return (int)4L; }

    static final int SECTION_ALL_ACCESS() { return (int)983071L; }

    static final int SESSION_ALL_ACCESS() { return (int)983043L; }

    static final int PAGE_ENCLAVE_THREAD_CONTROL() { return (int)2147483648L; }

    static final int PAGE_REVERT_TO_FILE_MAP() { return (int)2147483648L; }

    static final int PAGE_ENCLAVE_DECOMMIT() { return (int)268435456L; }

    static final int PAGE_ENCLAVE_SS_FIRST() { return (int)268435457L; }

    static final int PAGE_ENCLAVE_SS_REST() { return (int)268435458L; }

    static final int MEM_4MB_PAGES() { return (int)2147483648L; }

    static final int MEM_64K_PAGES() { return (int)541065216L; }

    static final long MEM_EXTENDED_PARAMETER_NUMA_NODE_MANDATORY() { return -9223372036854775808L; }

    static final int SEC_LARGE_PAGES() { return (int)2147483648L; }

    static final int SEC_IMAGE_NO_EXECUTE() { return (int)285212672L; }

    static final int FILE_READ_DATA() { return (int)1L; }

    static final int FILE_LIST_DIRECTORY() { return (int)1L; }

    static final int FILE_WRITE_DATA() { return (int)2L; }

    static final int FILE_ADD_FILE() { return (int)2L; }

    static final int FILE_APPEND_DATA() { return (int)4L; }

    static final int FILE_ADD_SUBDIRECTORY() { return (int)4L; }

    static final int FILE_CREATE_PIPE_INSTANCE() { return (int)4L; }

    static final int FILE_READ_EA() { return (int)8L; }

    static final int FILE_WRITE_EA() { return (int)16L; }

    static final int FILE_EXECUTE() { return (int)32L; }

    static final int FILE_TRAVERSE() { return (int)32L; }

    static final int FILE_DELETE_CHILD() { return (int)64L; }

    static final int FILE_READ_ATTRIBUTES() { return (int)128L; }

    static final int FILE_WRITE_ATTRIBUTES() { return (int)256L; }

    static final int FILE_ALL_ACCESS() { return (int)2032127L; }

    static final int FILE_GENERIC_READ() { return (int)1179785L; }

    static final int FILE_GENERIC_WRITE() { return (int)1179926L; }

    static final int FILE_GENERIC_EXECUTE() { return (int)1179808L; }

    static final int MAILSLOT_NO_MESSAGE() { return (int)4294967295L; }

    static final int MAILSLOT_WAIT_FOREVER() { return (int)4294967295L; }

    static final long FILE_INVALID_FILE_ID() { return -1L; }

    static final int REPARSE_GUID_DATA_BUFFER_HEADER_SIZE() { return (int)24L; }

    static final int MAXIMUM_REPARSE_DATA_BUFFER_SIZE() { return (int)16384L; }

    static final int IO_REPARSE_TAG_RESERVED_ZERO() { return (int)0L; }

    static final int IO_REPARSE_TAG_RESERVED_ONE() { return (int)1L; }

    static final int IO_REPARSE_TAG_RESERVED_TWO() { return (int)2L; }

    static final int IO_REPARSE_TAG_RESERVED_RANGE() { return (int)2L; }

    static final int IO_REPARSE_TAG_MOUNT_POINT() { return (int)2684354563L; }

    static final int IO_REPARSE_TAG_HSM() { return (int)3221225476L; }

    static final int IO_REPARSE_TAG_HSM2() { return (int)2147483654L; }

    static final int IO_REPARSE_TAG_SIS() { return (int)2147483655L; }

    static final int IO_REPARSE_TAG_WIM() { return (int)2147483656L; }

    static final int IO_REPARSE_TAG_CSV() { return (int)2147483657L; }

    static final int IO_REPARSE_TAG_DFS() { return (int)2147483658L; }

    static final int IO_REPARSE_TAG_SYMLINK() { return (int)2684354572L; }

    static final int IO_REPARSE_TAG_DFSR() { return (int)2147483666L; }

    static final int IO_REPARSE_TAG_DEDUP() { return (int)2147483667L; }

    static final int IO_REPARSE_TAG_NFS() { return (int)2147483668L; }

    static final int IO_REPARSE_TAG_FILE_PLACEHOLDER() { return (int)2147483669L; }

    static final int IO_REPARSE_TAG_WOF() { return (int)2147483671L; }

    static final int IO_REPARSE_TAG_WCI() { return (int)2147483672L; }

    static final int IO_REPARSE_TAG_WCI_1() { return (int)2415923224L; }

    static final int IO_REPARSE_TAG_GLOBAL_REPARSE() { return (int)2684354585L; }

    static final int IO_REPARSE_TAG_CLOUD() { return (int)2415919130L; }

    static final int IO_REPARSE_TAG_CLOUD_1() { return (int)2415923226L; }

    static final int IO_REPARSE_TAG_CLOUD_2() { return (int)2415927322L; }

    static final int IO_REPARSE_TAG_CLOUD_3() { return (int)2415931418L; }

    static final int IO_REPARSE_TAG_CLOUD_4() { return (int)2415935514L; }

    static final int IO_REPARSE_TAG_CLOUD_5() { return (int)2415939610L; }

    static final int IO_REPARSE_TAG_CLOUD_6() { return (int)2415943706L; }

    static final int IO_REPARSE_TAG_CLOUD_7() { return (int)2415947802L; }

    static final int IO_REPARSE_TAG_CLOUD_8() { return (int)2415951898L; }

    static final int IO_REPARSE_TAG_CLOUD_9() { return (int)2415955994L; }

    static final int IO_REPARSE_TAG_CLOUD_A() { return (int)2415960090L; }

    static final int IO_REPARSE_TAG_CLOUD_B() { return (int)2415964186L; }

    static final int IO_REPARSE_TAG_CLOUD_C() { return (int)2415968282L; }

    static final int IO_REPARSE_TAG_CLOUD_D() { return (int)2415972378L; }

    static final int IO_REPARSE_TAG_CLOUD_E() { return (int)2415976474L; }

    static final int IO_REPARSE_TAG_CLOUD_F() { return (int)2415980570L; }

    static final int IO_REPARSE_TAG_CLOUD_MASK() { return (int)61440L; }

    static final int IO_REPARSE_TAG_APPEXECLINK() { return (int)2147483675L; }

    static final int IO_REPARSE_TAG_PROJFS() { return (int)2415919132L; }

    static final int IO_REPARSE_TAG_STORAGE_SYNC() { return (int)2147483678L; }

    static final int IO_REPARSE_TAG_WCI_TOMBSTONE() { return (int)2684354591L; }

    static final int IO_REPARSE_TAG_UNHANDLED() { return (int)2147483680L; }

    static final int IO_REPARSE_TAG_ONEDRIVE() { return (int)2147483681L; }

    static final int IO_REPARSE_TAG_PROJFS_TOMBSTONE() { return (int)2684354594L; }

    static final int IO_REPARSE_TAG_AF_UNIX() { return (int)2147483683L; }

    static final int IO_REPARSE_TAG_WCI_LINK() { return (int)2684354599L; }

    static final int IO_REPARSE_TAG_WCI_LINK_1() { return (int)2684358695L; }

    static final int SHUFFLE_FILE_FLAG_SKIP_INITIALIZING_NEW_CLUSTERS() { return (int)1L; }

    static final int IO_COMPLETION_ALL_ACCESS() { return (int)2031619L; }

    static final long IO_QOS_MAX_RESERVATION() { return 1000000000L; }

    static final MemorySegment SMB_CCF_APP_INSTANCE_EA_NAME$SEGMENT_CONSTANT_ = CLinker.toCString("ClusteredApplicationInstance");
    static final jdk.incubator.foreign.MemorySegment SMB_CCF_APP_INSTANCE_EA_NAME() { return SMB_CCF_APP_INSTANCE_EA_NAME$SEGMENT_CONSTANT_; }

    static final int PERFSTATE_POLICY_CHANGE_DECREASE_MAX() { return (int)2L; }

    static final int PERFSTATE_POLICY_CHANGE_INCREASE_MAX() { return (int)3L; }

    static final int PROCESSOR_PERF_BOOST_MODE_MAX() { return (int)6L; }

    static final int CORE_PARKING_POLICY_CHANGE_MAX() { return (int)3L; }

    static final int ES_SYSTEM_REQUIRED() { return (int)1L; }

    static final int ES_DISPLAY_REQUIRED() { return (int)2L; }

    static final int ES_USER_PRESENT() { return (int)4L; }

    static final int ES_AWAYMODE_REQUIRED() { return (int)64L; }

    static final int ES_CONTINUOUS() { return (int)2147483648L; }

    static final int DIAGNOSTIC_REASON_NOT_SPECIFIED() { return (int)2147483648L; }

    static final int DIAGNOSTIC_REASON_INVALID_FLAGS() { return (int)2147483640L; }

    static final int POWER_REQUEST_CONTEXT_VERSION() { return (int)0L; }

    static final int POWER_REQUEST_CONTEXT_SIMPLE_STRING() { return (int)1L; }

    static final int POWER_REQUEST_CONTEXT_DETAILED_STRING() { return (int)2L; }

    static final int POWER_SETTING_VALUE_VERSION() { return (int)1L; }

    static final int POWER_PLATFORM_ROLE_V1() { return (int)1L; }

    static final int POWER_PLATFORM_ROLE_V1_MAX() { return (int)8L; }

    static final int POWER_PLATFORM_ROLE_V2() { return (int)2L; }

    static final int POWER_PLATFORM_ROLE_V2_MAX() { return (int)9L; }

    static final int POWER_PLATFORM_ROLE_VERSION() { return (int)2L; }

    static final int POWER_PLATFORM_ROLE_VERSION_MAX() { return (int)9L; }

    static final int POWER_ACTION_CRITICAL() { return (int)2147483648L; }

    static final int POWER_FORCE_TRIGGER_RESET() { return (int)2147483648L; }

    static final int BATTERY_DISCHARGE_FLAGS_ENABLE() { return (int)2147483648L; }

    static final int IMAGE_FILE_MACHINE_AXP64() { return (int)644L; }

    static final int IMAGE_NT_OPTIONAL_HDR_MAGIC() { return (int)523L; }

    static final int IMAGE_SCN_MEM_WRITE() { return (int)2147483648L; }

    static final short IMAGE_SYM_UNDEFINED() { return (short)0L; }

    static final short IMAGE_SYM_ABSOLUTE() { return (short)-1L; }

    static final short IMAGE_SYM_DEBUG() { return (short)-2L; }

    static final int IMAGE_SYM_SECTION_MAX_EX() { return (int)2147483647L; }

    static final byte IMAGE_SYM_CLASS_END_OF_FUNCTION() { return (byte)255L; }

    static final MemorySegment IMAGE_ARCHIVE_START$SEGMENT_CONSTANT_ = CLinker.toCString("!<arch>\n");
    static final jdk.incubator.foreign.MemorySegment IMAGE_ARCHIVE_START() { return IMAGE_ARCHIVE_START$SEGMENT_CONSTANT_; }

    static final MemorySegment IMAGE_ARCHIVE_END$SEGMENT_CONSTANT_ = CLinker.toCString("`\n");
    static final jdk.incubator.foreign.MemorySegment IMAGE_ARCHIVE_END() { return IMAGE_ARCHIVE_END$SEGMENT_CONSTANT_; }

    static final MemorySegment IMAGE_ARCHIVE_PAD$SEGMENT_CONSTANT_ = CLinker.toCString("\n");
    static final jdk.incubator.foreign.MemorySegment IMAGE_ARCHIVE_PAD() { return IMAGE_ARCHIVE_PAD$SEGMENT_CONSTANT_; }

    static final MemorySegment IMAGE_ARCHIVE_LINKER_MEMBER$SEGMENT_CONSTANT_ = CLinker.toCString("/               ");
    static final jdk.incubator.foreign.MemorySegment IMAGE_ARCHIVE_LINKER_MEMBER() { return IMAGE_ARCHIVE_LINKER_MEMBER$SEGMENT_CONSTANT_; }

    static final MemorySegment IMAGE_ARCHIVE_LONGNAMES_MEMBER$SEGMENT_CONSTANT_ = CLinker.toCString("//              ");
    static final jdk.incubator.foreign.MemorySegment IMAGE_ARCHIVE_LONGNAMES_MEMBER() { return IMAGE_ARCHIVE_LONGNAMES_MEMBER$SEGMENT_CONSTANT_; }

    static final MemorySegment IMAGE_ARCHIVE_HYBRIDMAP_MEMBER$SEGMENT_CONSTANT_ = CLinker.toCString("/<HYBRIDMAP>/   ");
    static final jdk.incubator.foreign.MemorySegment IMAGE_ARCHIVE_HYBRIDMAP_MEMBER() { return IMAGE_ARCHIVE_HYBRIDMAP_MEMBER$SEGMENT_CONSTANT_; }

    static final long IMAGE_ORDINAL_FLAG64() { return -9223372036854775808L; }

    static final int IMAGE_ORDINAL_FLAG32() { return (int)2147483648L; }

    static final long IMAGE_ORDINAL_FLAG() { return -9223372036854775808L; }

    static final int IMAGE_RESOURCE_NAME_IS_STRING() { return (int)2147483648L; }

    static final int IMAGE_RESOURCE_DATA_IS_DIRECTORY() { return (int)2147483648L; }

    static final int IMAGE_HOT_PATCH_CHUNK_INVERSE() { return (int)2147483648L; }

    static final int IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_MASK() { return (int)4026531840L; }

    static final int IMAGE_ENCLAVE_LONG_ID_LENGTH() { return (int)32L; }

    static final int IMAGE_ENCLAVE_SHORT_ID_LENGTH() { return (int)16L; }

    static final int IMAGE_ENCLAVE_MINIMUM_CONFIG_SIZE() { return (int)76L; }

    static final int RTL_RUN_ONCE_CHECK_ONLY() { return (int)1L; }

    static final int RTL_RUN_ONCE_ASYNC() { return (int)2L; }

    static final int RTL_RUN_ONCE_INIT_FAILED() { return (int)4L; }

    static final int FAST_FAIL_INVALID_FAST_FAIL_CODE() { return (int)4294967295L; }

    static final int COMPRESSION_FORMAT_NONE() { return (int)0L; }

    static final int COMPRESSION_FORMAT_DEFAULT() { return (int)1L; }

    static final int COMPRESSION_FORMAT_LZNT1() { return (int)2L; }

    static final int COMPRESSION_FORMAT_XPRESS() { return (int)3L; }

    static final int COMPRESSION_FORMAT_XPRESS_HUFF() { return (int)4L; }

    static final int COMPRESSION_ENGINE_STANDARD() { return (int)0L; }

    static final int COMPRESSION_ENGINE_MAXIMUM() { return (int)256L; }

    static final int COMPRESSION_ENGINE_HIBER() { return (int)512L; }

    static final int SEF_MACL_VALID_FLAGS() { return (int)1792L; }

    static final int RTL_UMS_VERSION() { return (int)256L; }

    static final int VRL_PREDEFINED_CLASS_BEGIN() { return (int)1L; }

    static final int VRL_CUSTOM_CLASS_BEGIN() { return (int)256L; }

    static final int VRL_CLASS_CONSISTENCY() { return (int)1L; }

    static final int VRL_ENABLE_KERNEL_BREAKS() { return (int)-2147483648L; }

    static final int CTMF_INCLUDE_APPCONTAINER() { return (int)1L; }

    static final int CTMF_INCLUDE_LPAC() { return (int)2L; }

    static final int CTMF_VALID_FLAGS() { return (int)3L; }

    static final int FLUSH_NV_MEMORY_IN_FLAG_NO_DRAIN() { return (int)1L; }

    static final long FLUSH_NV_MEMORY_DEFAULT_TOKEN() { return -1L; }

    static final int WRITE_NV_MEMORY_FLAG_FLUSH() { return (int)1L; }

    static final int WRITE_NV_MEMORY_FLAG_NON_TEMPORAL() { return (int)2L; }

    static final int WRITE_NV_MEMORY_FLAG_PERSIST() { return (int)3L; }

    static final int WRITE_NV_MEMORY_FLAG_NO_DRAIN() { return (int)256L; }

    static final int FILL_NV_MEMORY_FLAG_FLUSH() { return (int)1L; }

    static final int FILL_NV_MEMORY_FLAG_NON_TEMPORAL() { return (int)2L; }

    static final int FILL_NV_MEMORY_FLAG_PERSIST() { return (int)3L; }

    static final int FILL_NV_MEMORY_FLAG_NO_DRAIN() { return (int)256L; }

    static final byte RTL_CORRELATION_VECTOR_VERSION_1() { return (byte)1L; }

    static final byte RTL_CORRELATION_VECTOR_VERSION_2() { return (byte)2L; }

    static final byte RTL_CORRELATION_VECTOR_VERSION_CURRENT() { return (byte)2L; }

    static final int RTL_CORRELATION_VECTOR_V1_PREFIX_LENGTH() { return (int)16L; }

    static final int RTL_CORRELATION_VECTOR_V1_LENGTH() { return (int)64L; }

    static final int RTL_CORRELATION_VECTOR_V2_PREFIX_LENGTH() { return (int)22L; }

    static final int RTL_CORRELATION_VECTOR_V2_LENGTH() { return (int)128L; }

    static final MemorySegment IMAGE_POLICY_SECTION_NAME$SEGMENT_CONSTANT_ = CLinker.toCString(".tPolicy");
    static final jdk.incubator.foreign.MemorySegment IMAGE_POLICY_SECTION_NAME() { return IMAGE_POLICY_SECTION_NAME$SEGMENT_CONSTANT_; }

    static final int RTL_CRITICAL_SECTION_ALL_FLAG_BITS() { return (int)4278190080L; }

    static final int RTL_CRITICAL_SECTION_FLAG_RESERVED() { return (int)3758096384L; }

    static final int ACTIVATION_CONTEXT_PATH_TYPE_NONE() { return (int)1L; }

    static final int ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE() { return (int)2L; }

    static final int ACTIVATION_CONTEXT_PATH_TYPE_URL() { return (int)3L; }

    static final int ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF() { return (int)4L; }

    static final MemorySegment UNIFIEDBUILDREVISION_KEY$SEGMENT_CONSTANT_ = CLinker.toCString("\\");
    static final jdk.incubator.foreign.MemorySegment UNIFIEDBUILDREVISION_KEY() { return UNIFIEDBUILDREVISION_KEY$SEGMENT_CONSTANT_; }

    static final MemorySegment UNIFIEDBUILDREVISION_VALUE$SEGMENT_CONSTANT_ = CLinker.toCString("U");
    static final jdk.incubator.foreign.MemorySegment UNIFIEDBUILDREVISION_VALUE() { return UNIFIEDBUILDREVISION_VALUE$SEGMENT_CONSTANT_; }

    static final MemorySegment DEVICEFAMILYDEVICEFORM_KEY$SEGMENT_CONSTANT_ = CLinker.toCString("\\");
    static final jdk.incubator.foreign.MemorySegment DEVICEFAMILYDEVICEFORM_KEY() { return DEVICEFAMILYDEVICEFORM_KEY$SEGMENT_CONSTANT_; }

    static final MemorySegment DEVICEFAMILYDEVICEFORM_VALUE$SEGMENT_CONSTANT_ = CLinker.toCString("D");
    static final jdk.incubator.foreign.MemorySegment DEVICEFAMILYDEVICEFORM_VALUE() { return DEVICEFAMILYDEVICEFORM_VALUE$SEGMENT_CONSTANT_; }

    static final int KEY_QUERY_VALUE() { return (int)1L; }

    static final int KEY_SET_VALUE() { return (int)2L; }

    static final int KEY_CREATE_SUB_KEY() { return (int)4L; }

    static final int KEY_ENUMERATE_SUB_KEYS() { return (int)8L; }

    static final int KEY_NOTIFY() { return (int)16L; }

    static final int KEY_CREATE_LINK() { return (int)32L; }

    static final int KEY_WOW64_32KEY() { return (int)512L; }

    static final int KEY_WOW64_64KEY() { return (int)256L; }

    static final int KEY_WOW64_RES() { return (int)768L; }

    static final int KEY_READ() { return (int)131097L; }

    static final int KEY_WRITE() { return (int)131078L; }

    static final int KEY_EXECUTE() { return (int)131097L; }

    static final int KEY_ALL_ACCESS() { return (int)983103L; }

    static final int REG_OPTION_RESERVED() { return (int)0L; }

    static final int REG_OPTION_NON_VOLATILE() { return (int)0L; }

    static final int REG_OPTION_VOLATILE() { return (int)1L; }

    static final int REG_OPTION_CREATE_LINK() { return (int)2L; }

    static final int REG_OPTION_BACKUP_RESTORE() { return (int)4L; }

    static final int REG_OPTION_OPEN_LINK() { return (int)8L; }

    static final int REG_OPTION_DONT_VIRTUALIZE() { return (int)16L; }

    static final int REG_LEGAL_OPTION() { return (int)31L; }

    static final int REG_OPEN_LEGAL_OPTION() { return (int)28L; }

    static final int REG_CREATED_NEW_KEY() { return (int)1L; }

    static final int REG_OPENED_EXISTING_KEY() { return (int)2L; }

    static final int REG_WHOLE_HIVE_VOLATILE() { return (int)1L; }

    static final int REG_REFRESH_HIVE() { return (int)2L; }

    static final int REG_NO_LAZY_FLUSH() { return (int)4L; }

    static final int REG_FORCE_RESTORE() { return (int)8L; }

    static final int REG_APP_HIVE() { return (int)16L; }

    static final int REG_PROCESS_PRIVATE() { return (int)32L; }

    static final int REG_START_JOURNAL() { return (int)64L; }

    static final int REG_HIVE_EXACT_FILE_GROWTH() { return (int)128L; }

    static final int REG_HIVE_NO_RM() { return (int)256L; }

    static final int REG_HIVE_SINGLE_LOG() { return (int)512L; }

    static final int REG_BOOT_HIVE() { return (int)1024L; }

    static final int REG_LOAD_HIVE_OPEN_HANDLE() { return (int)2048L; }

    static final int REG_FLUSH_HIVE_FILE_GROWTH() { return (int)4096L; }

    static final int REG_OPEN_READ_ONLY() { return (int)8192L; }

    static final int REG_IMMUTABLE() { return (int)16384L; }

    static final int REG_NO_IMPERSONATION_FALLBACK() { return (int)32768L; }

    static final int REG_APP_HIVE_OPEN_READ_ONLY() { return (int)8192L; }

    static final int REG_UNLOAD_LEGAL_FLAGS() { return (int)1L; }

    static final int REG_NOTIFY_CHANGE_NAME() { return (int)1L; }

    static final int REG_NOTIFY_CHANGE_ATTRIBUTES() { return (int)2L; }

    static final int REG_NOTIFY_CHANGE_LAST_SET() { return (int)4L; }

    static final int REG_NOTIFY_CHANGE_SECURITY() { return (int)8L; }

    static final int REG_NOTIFY_THREAD_AGNOSTIC() { return (int)268435456L; }

    static final int REG_LEGAL_CHANGE_FILTER() { return (int)268435471L; }

    static final int REG_NONE() { return (int)0L; }

    static final int REG_SZ() { return (int)1L; }

    static final int REG_EXPAND_SZ() { return (int)2L; }

    static final int REG_BINARY() { return (int)3L; }

    static final int REG_DWORD() { return (int)4L; }

    static final int REG_DWORD_LITTLE_ENDIAN() { return (int)4L; }

    static final int REG_DWORD_BIG_ENDIAN() { return (int)5L; }

    static final int REG_LINK() { return (int)6L; }

    static final int REG_MULTI_SZ() { return (int)7L; }

    static final int REG_RESOURCE_LIST() { return (int)8L; }

    static final int REG_FULL_RESOURCE_DESCRIPTOR() { return (int)9L; }

    static final int REG_RESOURCE_REQUIREMENTS_LIST() { return (int)10L; }

    static final int REG_QWORD() { return (int)11L; }

    static final int REG_QWORD_LITTLE_ENDIAN() { return (int)11L; }

    static final int SERVICE_DRIVER() { return (int)11L; }

    static final int SERVICE_WIN32() { return (int)48L; }

    static final int SERVICE_USER_SHARE_PROCESS() { return (int)96L; }

    static final int SERVICE_USER_OWN_PROCESS() { return (int)80L; }

    static final int SERVICE_TYPE_ALL() { return (int)1023L; }

    static final int CM_SERVICE_VALID_PROMOTION_MASK() { return (int)511L; }

    static final int TAPE_ERASE_SHORT() { return (int)0L; }

    static final int TAPE_ERASE_LONG() { return (int)1L; }

    static final int TAPE_LOAD() { return (int)0L; }

    static final int TAPE_UNLOAD() { return (int)1L; }

    static final int TAPE_TENSION() { return (int)2L; }

    static final int TAPE_LOCK() { return (int)3L; }

    static final int TAPE_UNLOCK() { return (int)4L; }

    static final int TAPE_FORMAT() { return (int)5L; }

    static final int TAPE_SETMARKS() { return (int)0L; }

    static final int TAPE_FILEMARKS() { return (int)1L; }

    static final int TAPE_SHORT_FILEMARKS() { return (int)2L; }

    static final int TAPE_LONG_FILEMARKS() { return (int)3L; }

    static final int TAPE_ABSOLUTE_POSITION() { return (int)0L; }

    static final int TAPE_LOGICAL_POSITION() { return (int)1L; }

    static final int TAPE_PSEUDO_LOGICAL_POSITION() { return (int)2L; }

    static final int TAPE_REWIND() { return (int)0L; }

    static final int TAPE_ABSOLUTE_BLOCK() { return (int)1L; }

    static final int TAPE_LOGICAL_BLOCK() { return (int)2L; }

    static final int TAPE_PSEUDO_LOGICAL_BLOCK() { return (int)3L; }

    static final int TAPE_SPACE_END_OF_DATA() { return (int)4L; }

    static final int TAPE_SPACE_RELATIVE_BLOCKS() { return (int)5L; }

    static final int TAPE_SPACE_FILEMARKS() { return (int)6L; }

    static final int TAPE_SPACE_SEQUENTIAL_FMKS() { return (int)7L; }

    static final int TAPE_SPACE_SETMARKS() { return (int)8L; }

    static final int TAPE_SPACE_SEQUENTIAL_SMKS() { return (int)9L; }

    static final int TAPE_DRIVE_RESERVED_BIT() { return (int)2147483648L; }

    static final int TAPE_DRIVE_LOAD_UNLOAD() { return (int)2147483649L; }

    static final int TAPE_DRIVE_TENSION() { return (int)2147483650L; }

    static final int TAPE_DRIVE_LOCK_UNLOCK() { return (int)2147483652L; }

    static final int TAPE_DRIVE_REWIND_IMMEDIATE() { return (int)2147483656L; }

    static final int TAPE_DRIVE_SET_BLOCK_SIZE() { return (int)2147483664L; }

    static final int TAPE_DRIVE_LOAD_UNLD_IMMED() { return (int)2147483680L; }

    static final int TAPE_DRIVE_TENSION_IMMED() { return (int)2147483712L; }

    static final int TAPE_DRIVE_LOCK_UNLK_IMMED() { return (int)2147483776L; }

    static final int TAPE_DRIVE_SET_ECC() { return (int)2147483904L; }

    static final int TAPE_DRIVE_SET_COMPRESSION() { return (int)2147484160L; }

    static final int TAPE_DRIVE_SET_PADDING() { return (int)2147484672L; }

    static final int TAPE_DRIVE_SET_REPORT_SMKS() { return (int)2147485696L; }

    static final int TAPE_DRIVE_ABSOLUTE_BLK() { return (int)2147487744L; }

    static final int TAPE_DRIVE_ABS_BLK_IMMED() { return (int)2147491840L; }

    static final int TAPE_DRIVE_LOGICAL_BLK() { return (int)2147500032L; }

    static final int TAPE_DRIVE_LOG_BLK_IMMED() { return (int)2147516416L; }

    static final int TAPE_DRIVE_END_OF_DATA() { return (int)2147549184L; }

    static final int TAPE_DRIVE_RELATIVE_BLKS() { return (int)2147614720L; }

    static final int TAPE_DRIVE_FILEMARKS() { return (int)2147745792L; }

    static final int TAPE_DRIVE_SEQUENTIAL_FMKS() { return (int)2148007936L; }

    static final int TAPE_DRIVE_SETMARKS() { return (int)2148532224L; }

    static final int TAPE_DRIVE_SEQUENTIAL_SMKS() { return (int)2149580800L; }

    static final int TAPE_DRIVE_REVERSE_POSITION() { return (int)2151677952L; }

    static final int TAPE_DRIVE_SPACE_IMMEDIATE() { return (int)2155872256L; }

    static final int TAPE_DRIVE_WRITE_SETMARKS() { return (int)2164260864L; }

    static final int TAPE_DRIVE_WRITE_FILEMARKS() { return (int)2181038080L; }

    static final int TAPE_DRIVE_WRITE_SHORT_FMKS() { return (int)2214592512L; }

    static final int TAPE_DRIVE_WRITE_LONG_FMKS() { return (int)2281701376L; }

    static final int TAPE_DRIVE_WRITE_MARK_IMMED() { return (int)2415919104L; }

    static final int TAPE_DRIVE_FORMAT() { return (int)2684354560L; }

    static final int TAPE_DRIVE_FORMAT_IMMEDIATE() { return (int)3221225472L; }

    static final int TAPE_DRIVE_HIGH_FEATURES() { return (int)2147483648L; }

    static final int TAPE_FIXED_PARTITIONS() { return (int)0L; }

    static final int TAPE_SELECT_PARTITIONS() { return (int)1L; }

    static final int TAPE_INITIATOR_PARTITIONS() { return (int)2L; }

    static final int TAPE_QUERY_DRIVE_PARAMETERS() { return (int)0L; }

    static final int TAPE_QUERY_MEDIA_CAPACITY() { return (int)1L; }

    static final int TAPE_CHECK_FOR_DRIVE_PROBLEM() { return (int)2L; }

    static final int TAPE_QUERY_IO_ERROR_DATA() { return (int)3L; }

    static final int TAPE_QUERY_DEVICE_ERROR_DATA() { return (int)4L; }

    static final int TRANSACTIONMANAGER_QUERY_INFORMATION() { return (int)1L; }

    static final int TRANSACTIONMANAGER_SET_INFORMATION() { return (int)2L; }

    static final int TRANSACTIONMANAGER_RECOVER() { return (int)4L; }

    static final int TRANSACTIONMANAGER_RENAME() { return (int)8L; }

    static final int TRANSACTIONMANAGER_CREATE_RM() { return (int)16L; }

    static final int TRANSACTIONMANAGER_BIND_TRANSACTION() { return (int)32L; }

    static final int TRANSACTIONMANAGER_GENERIC_READ() { return (int)131073L; }

    static final int TRANSACTIONMANAGER_GENERIC_WRITE() { return (int)131102L; }

    static final int TRANSACTIONMANAGER_GENERIC_EXECUTE() { return (int)131072L; }

    static final int TRANSACTIONMANAGER_ALL_ACCESS() { return (int)983103L; }

    static final int TRANSACTION_QUERY_INFORMATION() { return (int)1L; }

    static final int TRANSACTION_SET_INFORMATION() { return (int)2L; }

    static final int TRANSACTION_ENLIST() { return (int)4L; }

    static final int TRANSACTION_COMMIT() { return (int)8L; }

    static final int TRANSACTION_ROLLBACK() { return (int)16L; }

    static final int TRANSACTION_PROPAGATE() { return (int)32L; }

    static final int TRANSACTION_RIGHT_RESERVED1() { return (int)64L; }

    static final int TRANSACTION_GENERIC_READ() { return (int)1179649L; }

    static final int TRANSACTION_GENERIC_WRITE() { return (int)1179710L; }

    static final int TRANSACTION_GENERIC_EXECUTE() { return (int)1179672L; }

    static final int TRANSACTION_ALL_ACCESS() { return (int)2031679L; }

    static final int TRANSACTION_RESOURCE_MANAGER_RIGHTS() { return (int)1179703L; }

    static final int RESOURCEMANAGER_QUERY_INFORMATION() { return (int)1L; }

    static final int RESOURCEMANAGER_SET_INFORMATION() { return (int)2L; }

    static final int RESOURCEMANAGER_RECOVER() { return (int)4L; }

    static final int RESOURCEMANAGER_ENLIST() { return (int)8L; }

    static final int RESOURCEMANAGER_GET_NOTIFICATION() { return (int)16L; }

    static final int RESOURCEMANAGER_REGISTER_PROTOCOL() { return (int)32L; }

    static final int RESOURCEMANAGER_COMPLETE_PROPAGATION() { return (int)64L; }

    static final int RESOURCEMANAGER_GENERIC_READ() { return (int)1179649L; }

    static final int RESOURCEMANAGER_GENERIC_WRITE() { return (int)1179774L; }

    static final int RESOURCEMANAGER_GENERIC_EXECUTE() { return (int)1179740L; }

    static final int RESOURCEMANAGER_ALL_ACCESS() { return (int)2031743L; }

    static final int ENLISTMENT_QUERY_INFORMATION() { return (int)1L; }

    static final int ENLISTMENT_SET_INFORMATION() { return (int)2L; }

    static final int ENLISTMENT_RECOVER() { return (int)4L; }

    static final int ENLISTMENT_SUBORDINATE_RIGHTS() { return (int)8L; }

    static final int ENLISTMENT_SUPERIOR_RIGHTS() { return (int)16L; }

    static final int ENLISTMENT_GENERIC_READ() { return (int)131073L; }

    static final int ENLISTMENT_GENERIC_WRITE() { return (int)131102L; }

    static final int ENLISTMENT_GENERIC_EXECUTE() { return (int)131100L; }

    static final int ENLISTMENT_ALL_ACCESS() { return (int)983071L; }

    static final int ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION() { return (int)1L; }

    static final int ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION() { return (int)2L; }

    static final int ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION() { return (int)3L; }

    static final int ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION() { return (int)4L; }

    static final int ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION() { return (int)5L; }

    static final int ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION() { return (int)6L; }

    static final int ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION() { return (int)7L; }

    static final int ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE() { return (int)8L; }

    static final int ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES() { return (int)9L; }

    static final int ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS() { return (int)10L; }

    static final int ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO() { return (int)11L; }

    static final int ACTIVATION_CONTEXT_SECTION_WINRT_ACTIVATABLE_CLASSES() { return (int)12L; }

}

