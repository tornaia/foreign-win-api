// Generated by jextract

package com.github.tornaia.foreign.win.api.winnt.internal;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class winnt_h$constants$12 extends winnt_h$constants$11 {

    /* package-private */ winnt_h$constants$12() {}
    static final MemoryLayout _IMAGE_POLICY_ENTRY$u$UInt8Value$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_POLICY_ENTRY$u$UInt8Value$LAYOUT() { return _IMAGE_POLICY_ENTRY$u$UInt8Value$LAYOUT_; }

    static final VarHandle _IMAGE_POLICY_ENTRY$u$UInt8Value$VH_ = _IMAGE_POLICY_ENTRY$u$union$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("UInt8Value"));
    static final java.lang.invoke.VarHandle _IMAGE_POLICY_ENTRY$u$UInt8Value$VH() { return _IMAGE_POLICY_ENTRY$u$UInt8Value$VH_; }

    static final MemoryLayout _IMAGE_POLICY_ENTRY$u$Int16Value$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_POLICY_ENTRY$u$Int16Value$LAYOUT() { return _IMAGE_POLICY_ENTRY$u$Int16Value$LAYOUT_; }

    static final VarHandle _IMAGE_POLICY_ENTRY$u$Int16Value$VH_ = _IMAGE_POLICY_ENTRY$u$union$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Int16Value"));
    static final java.lang.invoke.VarHandle _IMAGE_POLICY_ENTRY$u$Int16Value$VH() { return _IMAGE_POLICY_ENTRY$u$Int16Value$VH_; }

    static final MemoryLayout _IMAGE_POLICY_ENTRY$u$UInt16Value$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_POLICY_ENTRY$u$UInt16Value$LAYOUT() { return _IMAGE_POLICY_ENTRY$u$UInt16Value$LAYOUT_; }

    static final VarHandle _IMAGE_POLICY_ENTRY$u$UInt16Value$VH_ = _IMAGE_POLICY_ENTRY$u$union$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("UInt16Value"));
    static final java.lang.invoke.VarHandle _IMAGE_POLICY_ENTRY$u$UInt16Value$VH() { return _IMAGE_POLICY_ENTRY$u$UInt16Value$VH_; }

    static final MemoryLayout _IMAGE_POLICY_ENTRY$u$Int32Value$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_POLICY_ENTRY$u$Int32Value$LAYOUT() { return _IMAGE_POLICY_ENTRY$u$Int32Value$LAYOUT_; }

    static final VarHandle _IMAGE_POLICY_ENTRY$u$Int32Value$VH_ = _IMAGE_POLICY_ENTRY$u$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Int32Value"));
    static final java.lang.invoke.VarHandle _IMAGE_POLICY_ENTRY$u$Int32Value$VH() { return _IMAGE_POLICY_ENTRY$u$Int32Value$VH_; }

    static final MemoryLayout _IMAGE_POLICY_ENTRY$u$UInt32Value$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_POLICY_ENTRY$u$UInt32Value$LAYOUT() { return _IMAGE_POLICY_ENTRY$u$UInt32Value$LAYOUT_; }

    static final VarHandle _IMAGE_POLICY_ENTRY$u$UInt32Value$VH_ = _IMAGE_POLICY_ENTRY$u$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UInt32Value"));
    static final java.lang.invoke.VarHandle _IMAGE_POLICY_ENTRY$u$UInt32Value$VH() { return _IMAGE_POLICY_ENTRY$u$UInt32Value$VH_; }

    static final MemoryLayout _IMAGE_POLICY_ENTRY$u$Int64Value$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_POLICY_ENTRY$u$Int64Value$LAYOUT() { return _IMAGE_POLICY_ENTRY$u$Int64Value$LAYOUT_; }

    static final VarHandle _IMAGE_POLICY_ENTRY$u$Int64Value$VH_ = _IMAGE_POLICY_ENTRY$u$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Int64Value"));
    static final java.lang.invoke.VarHandle _IMAGE_POLICY_ENTRY$u$Int64Value$VH() { return _IMAGE_POLICY_ENTRY$u$Int64Value$VH_; }

    static final MemoryLayout _IMAGE_POLICY_ENTRY$u$UInt64Value$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_POLICY_ENTRY$u$UInt64Value$LAYOUT() { return _IMAGE_POLICY_ENTRY$u$UInt64Value$LAYOUT_; }

    static final VarHandle _IMAGE_POLICY_ENTRY$u$UInt64Value$VH_ = _IMAGE_POLICY_ENTRY$u$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("UInt64Value"));
    static final java.lang.invoke.VarHandle _IMAGE_POLICY_ENTRY$u$UInt64Value$VH() { return _IMAGE_POLICY_ENTRY$u$UInt64Value$VH_; }

    static final MemoryLayout _IMAGE_POLICY_ENTRY$u$AnsiStringValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_POLICY_ENTRY$u$AnsiStringValue$LAYOUT() { return _IMAGE_POLICY_ENTRY$u$AnsiStringValue$LAYOUT_; }

    static final VarHandle _IMAGE_POLICY_ENTRY$u$AnsiStringValue$VH_ = MemoryHandles.asAddressVarHandle(_IMAGE_POLICY_ENTRY$u$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("AnsiStringValue")));
    static final java.lang.invoke.VarHandle _IMAGE_POLICY_ENTRY$u$AnsiStringValue$VH() { return _IMAGE_POLICY_ENTRY$u$AnsiStringValue$VH_; }

    static final MemoryLayout _IMAGE_POLICY_ENTRY$u$UnicodeStringValue$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_POLICY_ENTRY$u$UnicodeStringValue$LAYOUT() { return _IMAGE_POLICY_ENTRY$u$UnicodeStringValue$LAYOUT_; }

    static final VarHandle _IMAGE_POLICY_ENTRY$u$UnicodeStringValue$VH_ = MemoryHandles.asAddressVarHandle(_IMAGE_POLICY_ENTRY$u$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("UnicodeStringValue")));
    static final java.lang.invoke.VarHandle _IMAGE_POLICY_ENTRY$u$UnicodeStringValue$VH() { return _IMAGE_POLICY_ENTRY$u$UnicodeStringValue$VH_; }

    static final MemoryLayout _IMAGE_POLICY_METADATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("Version"),
        MemoryLayout.ofSequence(7, C_CHAR).withName("Reserved0"),
        C_LONGLONG.withName("ApplicationId"),
        MemoryLayout.ofSequence(MemoryLayout.ofStruct(
            C_INT.withName("Type"),
            C_INT.withName("PolicyId"),
            MemoryLayout.ofUnion(
                C_POINTER.withName("None"),
                C_CHAR.withName("BoolValue"),
                C_CHAR.withName("Int8Value"),
                C_CHAR.withName("UInt8Value"),
                C_SHORT.withName("Int16Value"),
                C_SHORT.withName("UInt16Value"),
                C_INT.withName("Int32Value"),
                C_INT.withName("UInt32Value"),
                C_LONGLONG.withName("Int64Value"),
                C_LONGLONG.withName("UInt64Value"),
                C_POINTER.withName("AnsiStringValue"),
                C_POINTER.withName("UnicodeStringValue")
            ).withName("u")
        ).withName("_IMAGE_POLICY_ENTRY")).withName("Policies")
    ).withName("_IMAGE_POLICY_METADATA");
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_POLICY_METADATA$struct$LAYOUT() { return _IMAGE_POLICY_METADATA$struct$LAYOUT_; }

    static final MemoryLayout _IMAGE_POLICY_METADATA$Version$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_POLICY_METADATA$Version$LAYOUT() { return _IMAGE_POLICY_METADATA$Version$LAYOUT_; }

    static final VarHandle _IMAGE_POLICY_METADATA$Version$VH_ = _IMAGE_POLICY_METADATA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _IMAGE_POLICY_METADATA$Version$VH() { return _IMAGE_POLICY_METADATA$Version$VH_; }

    static final MemoryLayout _IMAGE_POLICY_METADATA$ApplicationId$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _IMAGE_POLICY_METADATA$ApplicationId$LAYOUT() { return _IMAGE_POLICY_METADATA$ApplicationId$LAYOUT_; }

    static final VarHandle _IMAGE_POLICY_METADATA$ApplicationId$VH_ = _IMAGE_POLICY_METADATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ApplicationId"));
    static final java.lang.invoke.VarHandle _IMAGE_POLICY_METADATA$ApplicationId$VH() { return _IMAGE_POLICY_METADATA$ApplicationId$VH_; }

    static final FunctionDescriptor RtlIsZeroMemory$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RtlIsZeroMemory$FUNC() { return RtlIsZeroMemory$FUNC_; }

    static final MethodHandle RtlIsZeroMemory$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RtlIsZeroMemory",
        "(Ljdk/incubator/foreign/MemoryAddress;J)B",
        RtlIsZeroMemory$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RtlIsZeroMemory$MH() { return RtlIsZeroMemory$MH_; }

    static final FunctionDescriptor RtlNormalizeSecurityDescriptor$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor RtlNormalizeSecurityDescriptor$FUNC() { return RtlNormalizeSecurityDescriptor$FUNC_; }

    static final MethodHandle RtlNormalizeSecurityDescriptor$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RtlNormalizeSecurityDescriptor",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;B)B",
        RtlNormalizeSecurityDescriptor$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RtlNormalizeSecurityDescriptor$MH() { return RtlNormalizeSecurityDescriptor$MH_; }

    static final MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("Type"),
        C_SHORT.withName("CreatorBackTraceIndex"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("CriticalSection"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("Flink"),
            C_POINTER.withName("Blink")
        ).withName("ProcessLocksList"),
        C_LONG.withName("EntryCount"),
        C_LONG.withName("ContentionCount"),
        C_LONG.withName("Flags"),
        C_SHORT.withName("CreatorBackTraceIndexHigh"),
        C_SHORT.withName("SpareWORD")
    ).withName("_RTL_CRITICAL_SECTION_DEBUG");
    static final jdk.incubator.foreign.MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$struct$LAYOUT() { return _RTL_CRITICAL_SECTION_DEBUG$struct$LAYOUT_; }

    static final MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$Type$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$Type$LAYOUT() { return _RTL_CRITICAL_SECTION_DEBUG$Type$LAYOUT_; }

    static final VarHandle _RTL_CRITICAL_SECTION_DEBUG$Type$VH_ = _RTL_CRITICAL_SECTION_DEBUG$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Type"));
    static final java.lang.invoke.VarHandle _RTL_CRITICAL_SECTION_DEBUG$Type$VH() { return _RTL_CRITICAL_SECTION_DEBUG$Type$VH_; }

    static final MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$CreatorBackTraceIndex$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$CreatorBackTraceIndex$LAYOUT() { return _RTL_CRITICAL_SECTION_DEBUG$CreatorBackTraceIndex$LAYOUT_; }

    static final VarHandle _RTL_CRITICAL_SECTION_DEBUG$CreatorBackTraceIndex$VH_ = _RTL_CRITICAL_SECTION_DEBUG$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("CreatorBackTraceIndex"));
    static final java.lang.invoke.VarHandle _RTL_CRITICAL_SECTION_DEBUG$CreatorBackTraceIndex$VH() { return _RTL_CRITICAL_SECTION_DEBUG$CreatorBackTraceIndex$VH_; }

    static final MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$CriticalSection$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$CriticalSection$LAYOUT() { return _RTL_CRITICAL_SECTION_DEBUG$CriticalSection$LAYOUT_; }

    static final VarHandle _RTL_CRITICAL_SECTION_DEBUG$CriticalSection$VH_ = MemoryHandles.asAddressVarHandle(_RTL_CRITICAL_SECTION_DEBUG$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CriticalSection")));
    static final java.lang.invoke.VarHandle _RTL_CRITICAL_SECTION_DEBUG$CriticalSection$VH() { return _RTL_CRITICAL_SECTION_DEBUG$CriticalSection$VH_; }

    static final MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$EntryCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$EntryCount$LAYOUT() { return _RTL_CRITICAL_SECTION_DEBUG$EntryCount$LAYOUT_; }

    static final VarHandle _RTL_CRITICAL_SECTION_DEBUG$EntryCount$VH_ = _RTL_CRITICAL_SECTION_DEBUG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EntryCount"));
    static final java.lang.invoke.VarHandle _RTL_CRITICAL_SECTION_DEBUG$EntryCount$VH() { return _RTL_CRITICAL_SECTION_DEBUG$EntryCount$VH_; }

    static final MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$ContentionCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$ContentionCount$LAYOUT() { return _RTL_CRITICAL_SECTION_DEBUG$ContentionCount$LAYOUT_; }

    static final VarHandle _RTL_CRITICAL_SECTION_DEBUG$ContentionCount$VH_ = _RTL_CRITICAL_SECTION_DEBUG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ContentionCount"));
    static final java.lang.invoke.VarHandle _RTL_CRITICAL_SECTION_DEBUG$ContentionCount$VH() { return _RTL_CRITICAL_SECTION_DEBUG$ContentionCount$VH_; }

    static final MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$Flags$LAYOUT() { return _RTL_CRITICAL_SECTION_DEBUG$Flags$LAYOUT_; }

    static final VarHandle _RTL_CRITICAL_SECTION_DEBUG$Flags$VH_ = _RTL_CRITICAL_SECTION_DEBUG$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _RTL_CRITICAL_SECTION_DEBUG$Flags$VH() { return _RTL_CRITICAL_SECTION_DEBUG$Flags$VH_; }

    static final MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$CreatorBackTraceIndexHigh$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$CreatorBackTraceIndexHigh$LAYOUT() { return _RTL_CRITICAL_SECTION_DEBUG$CreatorBackTraceIndexHigh$LAYOUT_; }

    static final VarHandle _RTL_CRITICAL_SECTION_DEBUG$CreatorBackTraceIndexHigh$VH_ = _RTL_CRITICAL_SECTION_DEBUG$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("CreatorBackTraceIndexHigh"));
    static final java.lang.invoke.VarHandle _RTL_CRITICAL_SECTION_DEBUG$CreatorBackTraceIndexHigh$VH() { return _RTL_CRITICAL_SECTION_DEBUG$CreatorBackTraceIndexHigh$VH_; }

    static final MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$SpareWORD$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _RTL_CRITICAL_SECTION_DEBUG$SpareWORD$LAYOUT() { return _RTL_CRITICAL_SECTION_DEBUG$SpareWORD$LAYOUT_; }

    static final VarHandle _RTL_CRITICAL_SECTION_DEBUG$SpareWORD$VH_ = _RTL_CRITICAL_SECTION_DEBUG$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SpareWORD"));
    static final java.lang.invoke.VarHandle _RTL_CRITICAL_SECTION_DEBUG$SpareWORD$VH() { return _RTL_CRITICAL_SECTION_DEBUG$SpareWORD$VH_; }

    static final MemoryLayout _RTL_CRITICAL_SECTION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("DebugInfo"),
        C_LONG.withName("LockCount"),
        C_LONG.withName("RecursionCount"),
        C_POINTER.withName("OwningThread"),
        C_POINTER.withName("LockSemaphore"),
        C_LONGLONG.withName("SpinCount")
    ).withName("_RTL_CRITICAL_SECTION");
    static final jdk.incubator.foreign.MemoryLayout _RTL_CRITICAL_SECTION$struct$LAYOUT() { return _RTL_CRITICAL_SECTION$struct$LAYOUT_; }

    static final MemoryLayout _RTL_CRITICAL_SECTION$DebugInfo$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RTL_CRITICAL_SECTION$DebugInfo$LAYOUT() { return _RTL_CRITICAL_SECTION$DebugInfo$LAYOUT_; }

    static final VarHandle _RTL_CRITICAL_SECTION$DebugInfo$VH_ = MemoryHandles.asAddressVarHandle(_RTL_CRITICAL_SECTION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DebugInfo")));
    static final java.lang.invoke.VarHandle _RTL_CRITICAL_SECTION$DebugInfo$VH() { return _RTL_CRITICAL_SECTION$DebugInfo$VH_; }

    static final MemoryLayout _RTL_CRITICAL_SECTION$LockCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RTL_CRITICAL_SECTION$LockCount$LAYOUT() { return _RTL_CRITICAL_SECTION$LockCount$LAYOUT_; }

    static final VarHandle _RTL_CRITICAL_SECTION$LockCount$VH_ = _RTL_CRITICAL_SECTION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LockCount"));
    static final java.lang.invoke.VarHandle _RTL_CRITICAL_SECTION$LockCount$VH() { return _RTL_CRITICAL_SECTION$LockCount$VH_; }

    static final MemoryLayout _RTL_CRITICAL_SECTION$RecursionCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RTL_CRITICAL_SECTION$RecursionCount$LAYOUT() { return _RTL_CRITICAL_SECTION$RecursionCount$LAYOUT_; }

    static final VarHandle _RTL_CRITICAL_SECTION$RecursionCount$VH_ = _RTL_CRITICAL_SECTION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RecursionCount"));
    static final java.lang.invoke.VarHandle _RTL_CRITICAL_SECTION$RecursionCount$VH() { return _RTL_CRITICAL_SECTION$RecursionCount$VH_; }

    static final MemoryLayout _RTL_CRITICAL_SECTION$OwningThread$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RTL_CRITICAL_SECTION$OwningThread$LAYOUT() { return _RTL_CRITICAL_SECTION$OwningThread$LAYOUT_; }

    static final VarHandle _RTL_CRITICAL_SECTION$OwningThread$VH_ = MemoryHandles.asAddressVarHandle(_RTL_CRITICAL_SECTION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("OwningThread")));
    static final java.lang.invoke.VarHandle _RTL_CRITICAL_SECTION$OwningThread$VH() { return _RTL_CRITICAL_SECTION$OwningThread$VH_; }

    static final MemoryLayout _RTL_CRITICAL_SECTION$LockSemaphore$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RTL_CRITICAL_SECTION$LockSemaphore$LAYOUT() { return _RTL_CRITICAL_SECTION$LockSemaphore$LAYOUT_; }

    static final VarHandle _RTL_CRITICAL_SECTION$LockSemaphore$VH_ = MemoryHandles.asAddressVarHandle(_RTL_CRITICAL_SECTION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LockSemaphore")));
    static final java.lang.invoke.VarHandle _RTL_CRITICAL_SECTION$LockSemaphore$VH() { return _RTL_CRITICAL_SECTION$LockSemaphore$VH_; }

    static final MemoryLayout _RTL_CRITICAL_SECTION$SpinCount$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _RTL_CRITICAL_SECTION$SpinCount$LAYOUT() { return _RTL_CRITICAL_SECTION$SpinCount$LAYOUT_; }

    static final VarHandle _RTL_CRITICAL_SECTION$SpinCount$VH_ = _RTL_CRITICAL_SECTION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("SpinCount"));
    static final java.lang.invoke.VarHandle _RTL_CRITICAL_SECTION$SpinCount$VH() { return _RTL_CRITICAL_SECTION$SpinCount$VH_; }

    static final MemoryLayout _RTL_SRWLOCK$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("Ptr")
    ).withName("_RTL_SRWLOCK");
    static final jdk.incubator.foreign.MemoryLayout _RTL_SRWLOCK$struct$LAYOUT() { return _RTL_SRWLOCK$struct$LAYOUT_; }

    static final MemoryLayout _RTL_SRWLOCK$Ptr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RTL_SRWLOCK$Ptr$LAYOUT() { return _RTL_SRWLOCK$Ptr$LAYOUT_; }

    static final VarHandle _RTL_SRWLOCK$Ptr$VH_ = MemoryHandles.asAddressVarHandle(_RTL_SRWLOCK$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Ptr")));
    static final java.lang.invoke.VarHandle _RTL_SRWLOCK$Ptr$VH() { return _RTL_SRWLOCK$Ptr$VH_; }

    static final MemoryLayout _RTL_CONDITION_VARIABLE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("Ptr")
    ).withName("_RTL_CONDITION_VARIABLE");
    static final jdk.incubator.foreign.MemoryLayout _RTL_CONDITION_VARIABLE$struct$LAYOUT() { return _RTL_CONDITION_VARIABLE$struct$LAYOUT_; }

    static final MemoryLayout _RTL_CONDITION_VARIABLE$Ptr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RTL_CONDITION_VARIABLE$Ptr$LAYOUT() { return _RTL_CONDITION_VARIABLE$Ptr$LAYOUT_; }

    static final VarHandle _RTL_CONDITION_VARIABLE$Ptr$VH_ = MemoryHandles.asAddressVarHandle(_RTL_CONDITION_VARIABLE$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Ptr")));
    static final java.lang.invoke.VarHandle _RTL_CONDITION_VARIABLE$Ptr$VH() { return _RTL_CONDITION_VARIABLE$Ptr$VH_; }

    static final int HeapCompatibilityInformation() { return (int)0L; }

    static final int HeapEnableTerminationOnCorruption() { return (int)1L; }

    static final int HeapOptimizeResources() { return (int)3L; }

    static final MemoryLayout _HEAP_OPTIMIZE_RESOURCES_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        C_LONG.withName("Flags")
    ).withName("_HEAP_OPTIMIZE_RESOURCES_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _HEAP_OPTIMIZE_RESOURCES_INFORMATION$struct$LAYOUT() { return _HEAP_OPTIMIZE_RESOURCES_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _HEAP_OPTIMIZE_RESOURCES_INFORMATION$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _HEAP_OPTIMIZE_RESOURCES_INFORMATION$Version$LAYOUT() { return _HEAP_OPTIMIZE_RESOURCES_INFORMATION$Version$LAYOUT_; }

    static final VarHandle _HEAP_OPTIMIZE_RESOURCES_INFORMATION$Version$VH_ = _HEAP_OPTIMIZE_RESOURCES_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _HEAP_OPTIMIZE_RESOURCES_INFORMATION$Version$VH() { return _HEAP_OPTIMIZE_RESOURCES_INFORMATION$Version$VH_; }

    static final MemoryLayout _HEAP_OPTIMIZE_RESOURCES_INFORMATION$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _HEAP_OPTIMIZE_RESOURCES_INFORMATION$Flags$LAYOUT() { return _HEAP_OPTIMIZE_RESOURCES_INFORMATION$Flags$LAYOUT_; }

    static final VarHandle _HEAP_OPTIMIZE_RESOURCES_INFORMATION$Flags$VH_ = _HEAP_OPTIMIZE_RESOURCES_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _HEAP_OPTIMIZE_RESOURCES_INFORMATION$Flags$VH() { return _HEAP_OPTIMIZE_RESOURCES_INFORMATION$Flags$VH_; }

    static final int ActivationContextBasicInformation() { return (int)1L; }

    static final int ActivationContextDetailedInformation() { return (int)2L; }

    static final int AssemblyDetailedInformationInActivationContext() { return (int)3L; }

    static final int FileInformationInAssemblyOfAssemblyInActivationContext() { return (int)4L; }

    static final int RunlevelInformationInActivationContext() { return (int)5L; }

    static final int CompatibilityInformationInActivationContext() { return (int)6L; }

    static final int ActivationContextManifestResourceName() { return (int)7L; }

    static final int MaxActivationContextInfoClass() { return (int)8L; }

    static final int AssemblyDetailedInformationInActivationContxt() { return (int)3L; }

    static final int FileInformationInAssemblyOfAssemblyInActivationContxt() { return (int)4L; }

    static final MemoryLayout _ACTIVATION_CONTEXT_QUERY_INDEX$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ulAssemblyIndex"),
        C_LONG.withName("ulFileIndexInAssembly")
    ).withName("_ACTIVATION_CONTEXT_QUERY_INDEX");
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_QUERY_INDEX$struct$LAYOUT() { return _ACTIVATION_CONTEXT_QUERY_INDEX$struct$LAYOUT_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_QUERY_INDEX$ulAssemblyIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_QUERY_INDEX$ulAssemblyIndex$LAYOUT() { return _ACTIVATION_CONTEXT_QUERY_INDEX$ulAssemblyIndex$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_QUERY_INDEX$ulAssemblyIndex$VH_ = _ACTIVATION_CONTEXT_QUERY_INDEX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulAssemblyIndex"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_QUERY_INDEX$ulAssemblyIndex$VH() { return _ACTIVATION_CONTEXT_QUERY_INDEX$ulAssemblyIndex$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_QUERY_INDEX$ulFileIndexInAssembly$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_QUERY_INDEX$ulFileIndexInAssembly$LAYOUT() { return _ACTIVATION_CONTEXT_QUERY_INDEX$ulFileIndexInAssembly$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_QUERY_INDEX$ulFileIndexInAssembly$VH_ = _ACTIVATION_CONTEXT_QUERY_INDEX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulFileIndexInAssembly"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_QUERY_INDEX$ulFileIndexInAssembly$VH() { return _ACTIVATION_CONTEXT_QUERY_INDEX$ulFileIndexInAssembly$VH_; }

    static final MemoryLayout _ASSEMBLY_FILE_DETAILED_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ulFlags"),
        C_LONG.withName("ulFilenameLength"),
        C_LONG.withName("ulPathLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpFileName"),
        C_POINTER.withName("lpFilePath")
    ).withName("_ASSEMBLY_FILE_DETAILED_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _ASSEMBLY_FILE_DETAILED_INFORMATION$struct$LAYOUT() { return _ASSEMBLY_FILE_DETAILED_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _ASSEMBLY_FILE_DETAILED_INFORMATION$ulFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ASSEMBLY_FILE_DETAILED_INFORMATION$ulFlags$LAYOUT() { return _ASSEMBLY_FILE_DETAILED_INFORMATION$ulFlags$LAYOUT_; }

    static final VarHandle _ASSEMBLY_FILE_DETAILED_INFORMATION$ulFlags$VH_ = _ASSEMBLY_FILE_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulFlags"));
    static final java.lang.invoke.VarHandle _ASSEMBLY_FILE_DETAILED_INFORMATION$ulFlags$VH() { return _ASSEMBLY_FILE_DETAILED_INFORMATION$ulFlags$VH_; }

    static final MemoryLayout _ASSEMBLY_FILE_DETAILED_INFORMATION$ulFilenameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ASSEMBLY_FILE_DETAILED_INFORMATION$ulFilenameLength$LAYOUT() { return _ASSEMBLY_FILE_DETAILED_INFORMATION$ulFilenameLength$LAYOUT_; }

    static final VarHandle _ASSEMBLY_FILE_DETAILED_INFORMATION$ulFilenameLength$VH_ = _ASSEMBLY_FILE_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulFilenameLength"));
    static final java.lang.invoke.VarHandle _ASSEMBLY_FILE_DETAILED_INFORMATION$ulFilenameLength$VH() { return _ASSEMBLY_FILE_DETAILED_INFORMATION$ulFilenameLength$VH_; }

    static final MemoryLayout _ASSEMBLY_FILE_DETAILED_INFORMATION$ulPathLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ASSEMBLY_FILE_DETAILED_INFORMATION$ulPathLength$LAYOUT() { return _ASSEMBLY_FILE_DETAILED_INFORMATION$ulPathLength$LAYOUT_; }

    static final VarHandle _ASSEMBLY_FILE_DETAILED_INFORMATION$ulPathLength$VH_ = _ASSEMBLY_FILE_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulPathLength"));
    static final java.lang.invoke.VarHandle _ASSEMBLY_FILE_DETAILED_INFORMATION$ulPathLength$VH() { return _ASSEMBLY_FILE_DETAILED_INFORMATION$ulPathLength$VH_; }

    static final MemoryLayout _ASSEMBLY_FILE_DETAILED_INFORMATION$lpFileName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ASSEMBLY_FILE_DETAILED_INFORMATION$lpFileName$LAYOUT() { return _ASSEMBLY_FILE_DETAILED_INFORMATION$lpFileName$LAYOUT_; }

    static final VarHandle _ASSEMBLY_FILE_DETAILED_INFORMATION$lpFileName$VH_ = MemoryHandles.asAddressVarHandle(_ASSEMBLY_FILE_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpFileName")));
    static final java.lang.invoke.VarHandle _ASSEMBLY_FILE_DETAILED_INFORMATION$lpFileName$VH() { return _ASSEMBLY_FILE_DETAILED_INFORMATION$lpFileName$VH_; }

    static final MemoryLayout _ASSEMBLY_FILE_DETAILED_INFORMATION$lpFilePath$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ASSEMBLY_FILE_DETAILED_INFORMATION$lpFilePath$LAYOUT() { return _ASSEMBLY_FILE_DETAILED_INFORMATION$lpFilePath$LAYOUT_; }

    static final VarHandle _ASSEMBLY_FILE_DETAILED_INFORMATION$lpFilePath$VH_ = MemoryHandles.asAddressVarHandle(_ASSEMBLY_FILE_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpFilePath")));
    static final java.lang.invoke.VarHandle _ASSEMBLY_FILE_DETAILED_INFORMATION$lpFilePath$VH() { return _ASSEMBLY_FILE_DETAILED_INFORMATION$lpFilePath$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ulFlags"),
        C_LONG.withName("ulEncodedAssemblyIdentityLength"),
        C_LONG.withName("ulManifestPathType"),
        C_LONG.withName("ulManifestPathLength"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("liManifestLastWriteTime"),
        C_LONG.withName("ulPolicyPathType"),
        C_LONG.withName("ulPolicyPathLength"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("liPolicyLastWriteTime"),
        C_LONG.withName("ulMetadataSatelliteRosterIndex"),
        C_LONG.withName("ulManifestVersionMajor"),
        C_LONG.withName("ulManifestVersionMinor"),
        C_LONG.withName("ulPolicyVersionMajor"),
        C_LONG.withName("ulPolicyVersionMinor"),
        C_LONG.withName("ulAssemblyDirectoryNameLength"),
        C_POINTER.withName("lpAssemblyEncodedAssemblyIdentity"),
        C_POINTER.withName("lpAssemblyManifestPath"),
        C_POINTER.withName("lpAssemblyPolicyPath"),
        C_POINTER.withName("lpAssemblyDirectoryName"),
        C_LONG.withName("ulFileCount"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulFlags$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulFlags$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulFlags$VH_ = _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulFlags"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulFlags$VH() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulFlags$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulEncodedAssemblyIdentityLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulEncodedAssemblyIdentityLength$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulEncodedAssemblyIdentityLength$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulEncodedAssemblyIdentityLength$VH_ = _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulEncodedAssemblyIdentityLength"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulEncodedAssemblyIdentityLength$VH() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulEncodedAssemblyIdentityLength$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestPathType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestPathType$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestPathType$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestPathType$VH_ = _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulManifestPathType"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestPathType$VH() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestPathType$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestPathLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestPathLength$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestPathLength$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestPathLength$VH_ = _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulManifestPathLength"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestPathLength$VH() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestPathLength$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyPathType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyPathType$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyPathType$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyPathType$VH_ = _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulPolicyPathType"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyPathType$VH() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyPathType$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyPathLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyPathLength$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyPathLength$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyPathLength$VH_ = _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulPolicyPathLength"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyPathLength$VH() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyPathLength$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulMetadataSatelliteRosterIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulMetadataSatelliteRosterIndex$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulMetadataSatelliteRosterIndex$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulMetadataSatelliteRosterIndex$VH_ = _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulMetadataSatelliteRosterIndex"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulMetadataSatelliteRosterIndex$VH() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulMetadataSatelliteRosterIndex$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestVersionMajor$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestVersionMajor$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestVersionMajor$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestVersionMajor$VH_ = _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulManifestVersionMajor"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestVersionMajor$VH() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestVersionMajor$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestVersionMinor$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestVersionMinor$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestVersionMinor$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestVersionMinor$VH_ = _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulManifestVersionMinor"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestVersionMinor$VH() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulManifestVersionMinor$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyVersionMajor$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyVersionMajor$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyVersionMajor$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyVersionMajor$VH_ = _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulPolicyVersionMajor"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyVersionMajor$VH() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyVersionMajor$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyVersionMinor$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyVersionMinor$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyVersionMinor$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyVersionMinor$VH_ = _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulPolicyVersionMinor"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyVersionMinor$VH() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulPolicyVersionMinor$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulAssemblyDirectoryNameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulAssemblyDirectoryNameLength$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulAssemblyDirectoryNameLength$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulAssemblyDirectoryNameLength$VH_ = _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulAssemblyDirectoryNameLength"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulAssemblyDirectoryNameLength$VH() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulAssemblyDirectoryNameLength$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyEncodedAssemblyIdentity$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyEncodedAssemblyIdentity$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyEncodedAssemblyIdentity$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyEncodedAssemblyIdentity$VH_ = MemoryHandles.asAddressVarHandle(_ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpAssemblyEncodedAssemblyIdentity")));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyEncodedAssemblyIdentity$VH() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyEncodedAssemblyIdentity$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyManifestPath$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyManifestPath$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyManifestPath$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyManifestPath$VH_ = MemoryHandles.asAddressVarHandle(_ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpAssemblyManifestPath")));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyManifestPath$VH() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyManifestPath$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyPolicyPath$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyPolicyPath$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyPolicyPath$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyPolicyPath$VH_ = MemoryHandles.asAddressVarHandle(_ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpAssemblyPolicyPath")));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyPolicyPath$VH() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyPolicyPath$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyDirectoryName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyDirectoryName$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyDirectoryName$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyDirectoryName$VH_ = MemoryHandles.asAddressVarHandle(_ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpAssemblyDirectoryName")));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyDirectoryName$VH() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$lpAssemblyDirectoryName$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulFileCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulFileCount$LAYOUT() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulFileCount$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulFileCount$VH_ = _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulFileCount"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulFileCount$VH() { return _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION$ulFileCount$VH_; }

    static final int ACTCTX_RUN_LEVEL_UNSPECIFIED() { return (int)0L; }

    static final int ACTCTX_RUN_LEVEL_AS_INVOKER() { return (int)1L; }

    static final int ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE() { return (int)2L; }

    static final int ACTCTX_RUN_LEVEL_REQUIRE_ADMIN() { return (int)3L; }

    static final int ACTCTX_RUN_LEVEL_NUMBERS() { return (int)4L; }

    static final MemoryLayout _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ulFlags"),
        C_INT.withName("RunLevel"),
        C_LONG.withName("UiAccess")
    ).withName("_ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$struct$LAYOUT() { return _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$ulFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$ulFlags$LAYOUT() { return _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$ulFlags$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$ulFlags$VH_ = _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulFlags"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$ulFlags$VH() { return _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$ulFlags$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$RunLevel$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$RunLevel$LAYOUT() { return _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$RunLevel$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$RunLevel$VH_ = _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RunLevel"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$RunLevel$VH() { return _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$RunLevel$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$UiAccess$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$UiAccess$LAYOUT() { return _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$UiAccess$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$UiAccess$VH_ = _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UiAccess"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$UiAccess$VH() { return _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION$UiAccess$VH_; }

    static final int ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN() { return (int)0L; }

    static final int ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS() { return (int)1L; }

    static final int ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION() { return (int)2L; }

    static final int ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MAXVERSIONTESTED() { return (int)3L; }

    static final MemoryLayout _COMPATIBILITY_CONTEXT_ELEMENT$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("Id"),
        C_INT.withName("Type"),
        MemoryLayout.ofPaddingBits(32),
        C_LONGLONG.withName("MaxVersionTested")
    ).withName("_COMPATIBILITY_CONTEXT_ELEMENT");
    static final jdk.incubator.foreign.MemoryLayout _COMPATIBILITY_CONTEXT_ELEMENT$struct$LAYOUT() { return _COMPATIBILITY_CONTEXT_ELEMENT$struct$LAYOUT_; }

    static final MemoryLayout _COMPATIBILITY_CONTEXT_ELEMENT$Type$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _COMPATIBILITY_CONTEXT_ELEMENT$Type$LAYOUT() { return _COMPATIBILITY_CONTEXT_ELEMENT$Type$LAYOUT_; }

    static final VarHandle _COMPATIBILITY_CONTEXT_ELEMENT$Type$VH_ = _COMPATIBILITY_CONTEXT_ELEMENT$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    static final java.lang.invoke.VarHandle _COMPATIBILITY_CONTEXT_ELEMENT$Type$VH() { return _COMPATIBILITY_CONTEXT_ELEMENT$Type$VH_; }

    static final MemoryLayout _COMPATIBILITY_CONTEXT_ELEMENT$MaxVersionTested$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _COMPATIBILITY_CONTEXT_ELEMENT$MaxVersionTested$LAYOUT() { return _COMPATIBILITY_CONTEXT_ELEMENT$MaxVersionTested$LAYOUT_; }

    static final VarHandle _COMPATIBILITY_CONTEXT_ELEMENT$MaxVersionTested$VH_ = _COMPATIBILITY_CONTEXT_ELEMENT$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaxVersionTested"));
    static final java.lang.invoke.VarHandle _COMPATIBILITY_CONTEXT_ELEMENT$MaxVersionTested$VH() { return _COMPATIBILITY_CONTEXT_ELEMENT$MaxVersionTested$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ElementCount"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofSequence(MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("Id"),
            C_INT.withName("Type"),
            MemoryLayout.ofPaddingBits(32),
            C_LONGLONG.withName("MaxVersionTested")
        ).withName("_COMPATIBILITY_CONTEXT_ELEMENT")).withName("Elements")
    ).withName("_ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION$struct$LAYOUT() { return _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION$ElementCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION$ElementCount$LAYOUT() { return _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION$ElementCount$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION$ElementCount$VH_ = _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ElementCount"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION$ElementCount$VH() { return _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION$ElementCount$VH_; }

    static final MemoryLayout _SUPPORTED_OS_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("MajorVersion"),
        C_SHORT.withName("MinorVersion")
    ).withName("_SUPPORTED_OS_INFO");
    static final jdk.incubator.foreign.MemoryLayout _SUPPORTED_OS_INFO$struct$LAYOUT() { return _SUPPORTED_OS_INFO$struct$LAYOUT_; }

    static final MemoryLayout _SUPPORTED_OS_INFO$MajorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _SUPPORTED_OS_INFO$MajorVersion$LAYOUT() { return _SUPPORTED_OS_INFO$MajorVersion$LAYOUT_; }

    static final VarHandle _SUPPORTED_OS_INFO$MajorVersion$VH_ = _SUPPORTED_OS_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MajorVersion"));
    static final java.lang.invoke.VarHandle _SUPPORTED_OS_INFO$MajorVersion$VH() { return _SUPPORTED_OS_INFO$MajorVersion$VH_; }

    static final MemoryLayout _SUPPORTED_OS_INFO$MinorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _SUPPORTED_OS_INFO$MinorVersion$LAYOUT() { return _SUPPORTED_OS_INFO$MinorVersion$LAYOUT_; }

    static final VarHandle _SUPPORTED_OS_INFO$MinorVersion$VH_ = _SUPPORTED_OS_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MinorVersion"));
    static final java.lang.invoke.VarHandle _SUPPORTED_OS_INFO$MinorVersion$VH() { return _SUPPORTED_OS_INFO$MinorVersion$VH_; }

    static final MemoryLayout _MAXVERSIONTESTED_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("MaxVersionTested")
    ).withName("_MAXVERSIONTESTED_INFO");
    static final jdk.incubator.foreign.MemoryLayout _MAXVERSIONTESTED_INFO$struct$LAYOUT() { return _MAXVERSIONTESTED_INFO$struct$LAYOUT_; }

    static final MemoryLayout _MAXVERSIONTESTED_INFO$MaxVersionTested$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _MAXVERSIONTESTED_INFO$MaxVersionTested$LAYOUT() { return _MAXVERSIONTESTED_INFO$MaxVersionTested$LAYOUT_; }

    static final VarHandle _MAXVERSIONTESTED_INFO$MaxVersionTested$VH_ = _MAXVERSIONTESTED_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("MaxVersionTested"));
    static final java.lang.invoke.VarHandle _MAXVERSIONTESTED_INFO$MaxVersionTested$VH() { return _MAXVERSIONTESTED_INFO$MaxVersionTested$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwFlags"),
        C_LONG.withName("ulFormatVersion"),
        C_LONG.withName("ulAssemblyCount"),
        C_LONG.withName("ulRootManifestPathType"),
        C_LONG.withName("ulRootManifestPathChars"),
        C_LONG.withName("ulRootConfigurationPathType"),
        C_LONG.withName("ulRootConfigurationPathChars"),
        C_LONG.withName("ulAppDirPathType"),
        C_LONG.withName("ulAppDirPathChars"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpRootManifestPath"),
        C_POINTER.withName("lpRootConfigurationPath"),
        C_POINTER.withName("lpAppDirPath")
    ).withName("_ACTIVATION_CONTEXT_DETAILED_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$struct$LAYOUT() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$dwFlags$LAYOUT() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$dwFlags$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$dwFlags$VH_ = _ACTIVATION_CONTEXT_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$dwFlags$VH() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$dwFlags$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulFormatVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulFormatVersion$LAYOUT() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulFormatVersion$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulFormatVersion$VH_ = _ACTIVATION_CONTEXT_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulFormatVersion"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulFormatVersion$VH() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulFormatVersion$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAssemblyCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAssemblyCount$LAYOUT() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAssemblyCount$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAssemblyCount$VH_ = _ACTIVATION_CONTEXT_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulAssemblyCount"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAssemblyCount$VH() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAssemblyCount$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootManifestPathType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootManifestPathType$LAYOUT() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootManifestPathType$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootManifestPathType$VH_ = _ACTIVATION_CONTEXT_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulRootManifestPathType"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootManifestPathType$VH() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootManifestPathType$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootManifestPathChars$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootManifestPathChars$LAYOUT() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootManifestPathChars$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootManifestPathChars$VH_ = _ACTIVATION_CONTEXT_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulRootManifestPathChars"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootManifestPathChars$VH() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootManifestPathChars$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootConfigurationPathType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootConfigurationPathType$LAYOUT() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootConfigurationPathType$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootConfigurationPathType$VH_ = _ACTIVATION_CONTEXT_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulRootConfigurationPathType"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootConfigurationPathType$VH() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootConfigurationPathType$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootConfigurationPathChars$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootConfigurationPathChars$LAYOUT() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootConfigurationPathChars$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootConfigurationPathChars$VH_ = _ACTIVATION_CONTEXT_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulRootConfigurationPathChars"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootConfigurationPathChars$VH() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulRootConfigurationPathChars$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAppDirPathType$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAppDirPathType$LAYOUT() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAppDirPathType$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAppDirPathType$VH_ = _ACTIVATION_CONTEXT_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulAppDirPathType"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAppDirPathType$VH() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAppDirPathType$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAppDirPathChars$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAppDirPathChars$LAYOUT() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAppDirPathChars$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAppDirPathChars$VH_ = _ACTIVATION_CONTEXT_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulAppDirPathChars"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAppDirPathChars$VH() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$ulAppDirPathChars$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpRootManifestPath$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpRootManifestPath$LAYOUT() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpRootManifestPath$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpRootManifestPath$VH_ = MemoryHandles.asAddressVarHandle(_ACTIVATION_CONTEXT_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpRootManifestPath")));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpRootManifestPath$VH() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpRootManifestPath$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpRootConfigurationPath$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpRootConfigurationPath$LAYOUT() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpRootConfigurationPath$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpRootConfigurationPath$VH_ = MemoryHandles.asAddressVarHandle(_ACTIVATION_CONTEXT_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpRootConfigurationPath")));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpRootConfigurationPath$VH() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpRootConfigurationPath$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpAppDirPath$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpAppDirPath$LAYOUT() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpAppDirPath$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpAppDirPath$VH_ = MemoryHandles.asAddressVarHandle(_ACTIVATION_CONTEXT_DETAILED_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpAppDirPath")));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpAppDirPath$VH() { return _ACTIVATION_CONTEXT_DETAILED_INFORMATION$lpAppDirPath$VH_; }

    static final MemoryLayout _HARDWARE_COUNTER_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("Type"),
        C_LONG.withName("Reserved"),
        C_LONGLONG.withName("Value")
    ).withName("_HARDWARE_COUNTER_DATA");
    static final jdk.incubator.foreign.MemoryLayout _HARDWARE_COUNTER_DATA$struct$LAYOUT() { return _HARDWARE_COUNTER_DATA$struct$LAYOUT_; }

    static final MemoryLayout _HARDWARE_COUNTER_DATA$Type$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _HARDWARE_COUNTER_DATA$Type$LAYOUT() { return _HARDWARE_COUNTER_DATA$Type$LAYOUT_; }

    static final VarHandle _HARDWARE_COUNTER_DATA$Type$VH_ = _HARDWARE_COUNTER_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    static final java.lang.invoke.VarHandle _HARDWARE_COUNTER_DATA$Type$VH() { return _HARDWARE_COUNTER_DATA$Type$VH_; }

    static final MemoryLayout _HARDWARE_COUNTER_DATA$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _HARDWARE_COUNTER_DATA$Reserved$LAYOUT() { return _HARDWARE_COUNTER_DATA$Reserved$LAYOUT_; }

    static final VarHandle _HARDWARE_COUNTER_DATA$Reserved$VH_ = _HARDWARE_COUNTER_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _HARDWARE_COUNTER_DATA$Reserved$VH() { return _HARDWARE_COUNTER_DATA$Reserved$VH_; }

    static final MemoryLayout _HARDWARE_COUNTER_DATA$Value$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _HARDWARE_COUNTER_DATA$Value$LAYOUT() { return _HARDWARE_COUNTER_DATA$Value$LAYOUT_; }

    static final VarHandle _HARDWARE_COUNTER_DATA$Value$VH_ = _HARDWARE_COUNTER_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Value"));
    static final java.lang.invoke.VarHandle _HARDWARE_COUNTER_DATA$Value$VH() { return _HARDWARE_COUNTER_DATA$Value$VH_; }

    static final MemoryLayout _PERFORMANCE_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("Size"),
        C_CHAR.withName("Version"),
        C_CHAR.withName("HwCountersCount"),
        C_LONG.withName("ContextSwitchCount"),
        C_LONGLONG.withName("WaitReasonBitMap"),
        C_LONGLONG.withName("CycleTime"),
        C_LONG.withName("RetryCount"),
        C_LONG.withName("Reserved"),
        MemoryLayout.ofSequence(16, MemoryLayout.ofStruct(
            C_INT.withName("Type"),
            C_LONG.withName("Reserved"),
            C_LONGLONG.withName("Value")
        ).withName("_HARDWARE_COUNTER_DATA")).withName("HwCounters")
    ).withName("_PERFORMANCE_DATA");
    static final jdk.incubator.foreign.MemoryLayout _PERFORMANCE_DATA$struct$LAYOUT() { return _PERFORMANCE_DATA$struct$LAYOUT_; }

    static final MemoryLayout _PERFORMANCE_DATA$Size$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _PERFORMANCE_DATA$Size$LAYOUT() { return _PERFORMANCE_DATA$Size$LAYOUT_; }

    static final VarHandle _PERFORMANCE_DATA$Size$VH_ = _PERFORMANCE_DATA$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _PERFORMANCE_DATA$Size$VH() { return _PERFORMANCE_DATA$Size$VH_; }

    static final MemoryLayout _PERFORMANCE_DATA$Version$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _PERFORMANCE_DATA$Version$LAYOUT() { return _PERFORMANCE_DATA$Version$LAYOUT_; }

    static final VarHandle _PERFORMANCE_DATA$Version$VH_ = _PERFORMANCE_DATA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _PERFORMANCE_DATA$Version$VH() { return _PERFORMANCE_DATA$Version$VH_; }

    static final MemoryLayout _PERFORMANCE_DATA$HwCountersCount$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _PERFORMANCE_DATA$HwCountersCount$LAYOUT() { return _PERFORMANCE_DATA$HwCountersCount$LAYOUT_; }

    static final VarHandle _PERFORMANCE_DATA$HwCountersCount$VH_ = _PERFORMANCE_DATA$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("HwCountersCount"));
    static final java.lang.invoke.VarHandle _PERFORMANCE_DATA$HwCountersCount$VH() { return _PERFORMANCE_DATA$HwCountersCount$VH_; }

    static final MemoryLayout _PERFORMANCE_DATA$ContextSwitchCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERFORMANCE_DATA$ContextSwitchCount$LAYOUT() { return _PERFORMANCE_DATA$ContextSwitchCount$LAYOUT_; }

    static final VarHandle _PERFORMANCE_DATA$ContextSwitchCount$VH_ = _PERFORMANCE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ContextSwitchCount"));
    static final java.lang.invoke.VarHandle _PERFORMANCE_DATA$ContextSwitchCount$VH() { return _PERFORMANCE_DATA$ContextSwitchCount$VH_; }

    static final MemoryLayout _PERFORMANCE_DATA$WaitReasonBitMap$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _PERFORMANCE_DATA$WaitReasonBitMap$LAYOUT() { return _PERFORMANCE_DATA$WaitReasonBitMap$LAYOUT_; }

    static final VarHandle _PERFORMANCE_DATA$WaitReasonBitMap$VH_ = _PERFORMANCE_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("WaitReasonBitMap"));
    static final java.lang.invoke.VarHandle _PERFORMANCE_DATA$WaitReasonBitMap$VH() { return _PERFORMANCE_DATA$WaitReasonBitMap$VH_; }

    static final MemoryLayout _PERFORMANCE_DATA$CycleTime$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _PERFORMANCE_DATA$CycleTime$LAYOUT() { return _PERFORMANCE_DATA$CycleTime$LAYOUT_; }

    static final VarHandle _PERFORMANCE_DATA$CycleTime$VH_ = _PERFORMANCE_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CycleTime"));
    static final java.lang.invoke.VarHandle _PERFORMANCE_DATA$CycleTime$VH() { return _PERFORMANCE_DATA$CycleTime$VH_; }

    static final MemoryLayout _PERFORMANCE_DATA$RetryCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERFORMANCE_DATA$RetryCount$LAYOUT() { return _PERFORMANCE_DATA$RetryCount$LAYOUT_; }

    static final VarHandle _PERFORMANCE_DATA$RetryCount$VH_ = _PERFORMANCE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RetryCount"));
    static final java.lang.invoke.VarHandle _PERFORMANCE_DATA$RetryCount$VH() { return _PERFORMANCE_DATA$RetryCount$VH_; }

    static final MemoryLayout _PERFORMANCE_DATA$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PERFORMANCE_DATA$Reserved$LAYOUT() { return _PERFORMANCE_DATA$Reserved$LAYOUT_; }

    static final VarHandle _PERFORMANCE_DATA$Reserved$VH_ = _PERFORMANCE_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _PERFORMANCE_DATA$Reserved$VH() { return _PERFORMANCE_DATA$Reserved$VH_; }

    static final FunctionDescriptor RtlGetDeviceFamilyInfoEnum$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RtlGetDeviceFamilyInfoEnum$FUNC() { return RtlGetDeviceFamilyInfoEnum$FUNC_; }

    static final MethodHandle RtlGetDeviceFamilyInfoEnum$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RtlGetDeviceFamilyInfoEnum",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        RtlGetDeviceFamilyInfoEnum$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RtlGetDeviceFamilyInfoEnum$MH() { return RtlGetDeviceFamilyInfoEnum$MH_; }

    static final FunctionDescriptor RtlConvertDeviceFamilyInfoToString$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RtlConvertDeviceFamilyInfoToString$FUNC() { return RtlConvertDeviceFamilyInfoToString$FUNC_; }

    static final MethodHandle RtlConvertDeviceFamilyInfoToString$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RtlConvertDeviceFamilyInfoToString",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        RtlConvertDeviceFamilyInfoToString$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RtlConvertDeviceFamilyInfoToString$MH() { return RtlConvertDeviceFamilyInfoToString$MH_; }

    static final FunctionDescriptor RtlSwitchedVVI$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RtlSwitchedVVI$FUNC() { return RtlSwitchedVVI$FUNC_; }

    static final MethodHandle RtlSwitchedVVI$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RtlSwitchedVVI",
        "(Ljdk/incubator/foreign/MemoryAddress;IJ)I",
        RtlSwitchedVVI$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RtlSwitchedVVI$MH() { return RtlSwitchedVVI$MH_; }

    static final MemoryLayout _EVENTLOGRECORD$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Length"),
        C_LONG.withName("Reserved"),
        C_LONG.withName("RecordNumber"),
        C_LONG.withName("TimeGenerated"),
        C_LONG.withName("TimeWritten"),
        C_LONG.withName("EventID"),
        C_SHORT.withName("EventType"),
        C_SHORT.withName("NumStrings"),
        C_SHORT.withName("EventCategory"),
        C_SHORT.withName("ReservedFlags"),
        C_LONG.withName("ClosingRecordNumber"),
        C_LONG.withName("StringOffset"),
        C_LONG.withName("UserSidLength"),
        C_LONG.withName("UserSidOffset"),
        C_LONG.withName("DataLength"),
        C_LONG.withName("DataOffset")
    ).withName("_EVENTLOGRECORD");
    static final jdk.incubator.foreign.MemoryLayout _EVENTLOGRECORD$struct$LAYOUT() { return _EVENTLOGRECORD$struct$LAYOUT_; }

    static final MemoryLayout _EVENTLOGRECORD$Length$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EVENTLOGRECORD$Length$LAYOUT() { return _EVENTLOGRECORD$Length$LAYOUT_; }

    static final VarHandle _EVENTLOGRECORD$Length$VH_ = _EVENTLOGRECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Length"));
    static final java.lang.invoke.VarHandle _EVENTLOGRECORD$Length$VH() { return _EVENTLOGRECORD$Length$VH_; }

    static final MemoryLayout _EVENTLOGRECORD$Reserved$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EVENTLOGRECORD$Reserved$LAYOUT() { return _EVENTLOGRECORD$Reserved$LAYOUT_; }

    static final VarHandle _EVENTLOGRECORD$Reserved$VH_ = _EVENTLOGRECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _EVENTLOGRECORD$Reserved$VH() { return _EVENTLOGRECORD$Reserved$VH_; }

    static final MemoryLayout _EVENTLOGRECORD$RecordNumber$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EVENTLOGRECORD$RecordNumber$LAYOUT() { return _EVENTLOGRECORD$RecordNumber$LAYOUT_; }

    static final VarHandle _EVENTLOGRECORD$RecordNumber$VH_ = _EVENTLOGRECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("RecordNumber"));
    static final java.lang.invoke.VarHandle _EVENTLOGRECORD$RecordNumber$VH() { return _EVENTLOGRECORD$RecordNumber$VH_; }

    static final MemoryLayout _EVENTLOGRECORD$TimeGenerated$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EVENTLOGRECORD$TimeGenerated$LAYOUT() { return _EVENTLOGRECORD$TimeGenerated$LAYOUT_; }

    static final VarHandle _EVENTLOGRECORD$TimeGenerated$VH_ = _EVENTLOGRECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TimeGenerated"));
    static final java.lang.invoke.VarHandle _EVENTLOGRECORD$TimeGenerated$VH() { return _EVENTLOGRECORD$TimeGenerated$VH_; }

    static final MemoryLayout _EVENTLOGRECORD$TimeWritten$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EVENTLOGRECORD$TimeWritten$LAYOUT() { return _EVENTLOGRECORD$TimeWritten$LAYOUT_; }

    static final VarHandle _EVENTLOGRECORD$TimeWritten$VH_ = _EVENTLOGRECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("TimeWritten"));
    static final java.lang.invoke.VarHandle _EVENTLOGRECORD$TimeWritten$VH() { return _EVENTLOGRECORD$TimeWritten$VH_; }

    static final MemoryLayout _EVENTLOGRECORD$EventID$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EVENTLOGRECORD$EventID$LAYOUT() { return _EVENTLOGRECORD$EventID$LAYOUT_; }

    static final VarHandle _EVENTLOGRECORD$EventID$VH_ = _EVENTLOGRECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EventID"));
    static final java.lang.invoke.VarHandle _EVENTLOGRECORD$EventID$VH() { return _EVENTLOGRECORD$EventID$VH_; }

    static final MemoryLayout _EVENTLOGRECORD$EventType$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _EVENTLOGRECORD$EventType$LAYOUT() { return _EVENTLOGRECORD$EventType$LAYOUT_; }

    static final VarHandle _EVENTLOGRECORD$EventType$VH_ = _EVENTLOGRECORD$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("EventType"));
    static final java.lang.invoke.VarHandle _EVENTLOGRECORD$EventType$VH() { return _EVENTLOGRECORD$EventType$VH_; }

    static final MemoryLayout _EVENTLOGRECORD$NumStrings$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _EVENTLOGRECORD$NumStrings$LAYOUT() { return _EVENTLOGRECORD$NumStrings$LAYOUT_; }

    static final VarHandle _EVENTLOGRECORD$NumStrings$VH_ = _EVENTLOGRECORD$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("NumStrings"));
    static final java.lang.invoke.VarHandle _EVENTLOGRECORD$NumStrings$VH() { return _EVENTLOGRECORD$NumStrings$VH_; }

    static final MemoryLayout _EVENTLOGRECORD$EventCategory$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _EVENTLOGRECORD$EventCategory$LAYOUT() { return _EVENTLOGRECORD$EventCategory$LAYOUT_; }

    static final VarHandle _EVENTLOGRECORD$EventCategory$VH_ = _EVENTLOGRECORD$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("EventCategory"));
    static final java.lang.invoke.VarHandle _EVENTLOGRECORD$EventCategory$VH() { return _EVENTLOGRECORD$EventCategory$VH_; }

    static final MemoryLayout _EVENTLOGRECORD$ReservedFlags$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _EVENTLOGRECORD$ReservedFlags$LAYOUT() { return _EVENTLOGRECORD$ReservedFlags$LAYOUT_; }

    static final VarHandle _EVENTLOGRECORD$ReservedFlags$VH_ = _EVENTLOGRECORD$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ReservedFlags"));
    static final java.lang.invoke.VarHandle _EVENTLOGRECORD$ReservedFlags$VH() { return _EVENTLOGRECORD$ReservedFlags$VH_; }

    static final MemoryLayout _EVENTLOGRECORD$ClosingRecordNumber$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EVENTLOGRECORD$ClosingRecordNumber$LAYOUT() { return _EVENTLOGRECORD$ClosingRecordNumber$LAYOUT_; }

    static final VarHandle _EVENTLOGRECORD$ClosingRecordNumber$VH_ = _EVENTLOGRECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ClosingRecordNumber"));
    static final java.lang.invoke.VarHandle _EVENTLOGRECORD$ClosingRecordNumber$VH() { return _EVENTLOGRECORD$ClosingRecordNumber$VH_; }

    static final MemoryLayout _EVENTLOGRECORD$StringOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EVENTLOGRECORD$StringOffset$LAYOUT() { return _EVENTLOGRECORD$StringOffset$LAYOUT_; }

    static final VarHandle _EVENTLOGRECORD$StringOffset$VH_ = _EVENTLOGRECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StringOffset"));
    static final java.lang.invoke.VarHandle _EVENTLOGRECORD$StringOffset$VH() { return _EVENTLOGRECORD$StringOffset$VH_; }

    static final MemoryLayout _EVENTLOGRECORD$UserSidLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EVENTLOGRECORD$UserSidLength$LAYOUT() { return _EVENTLOGRECORD$UserSidLength$LAYOUT_; }

    static final VarHandle _EVENTLOGRECORD$UserSidLength$VH_ = _EVENTLOGRECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UserSidLength"));
    static final java.lang.invoke.VarHandle _EVENTLOGRECORD$UserSidLength$VH() { return _EVENTLOGRECORD$UserSidLength$VH_; }

    static final MemoryLayout _EVENTLOGRECORD$UserSidOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EVENTLOGRECORD$UserSidOffset$LAYOUT() { return _EVENTLOGRECORD$UserSidOffset$LAYOUT_; }

    static final VarHandle _EVENTLOGRECORD$UserSidOffset$VH_ = _EVENTLOGRECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("UserSidOffset"));
    static final java.lang.invoke.VarHandle _EVENTLOGRECORD$UserSidOffset$VH() { return _EVENTLOGRECORD$UserSidOffset$VH_; }

    static final MemoryLayout _EVENTLOGRECORD$DataLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EVENTLOGRECORD$DataLength$LAYOUT() { return _EVENTLOGRECORD$DataLength$LAYOUT_; }

    static final VarHandle _EVENTLOGRECORD$DataLength$VH_ = _EVENTLOGRECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataLength"));
    static final java.lang.invoke.VarHandle _EVENTLOGRECORD$DataLength$VH() { return _EVENTLOGRECORD$DataLength$VH_; }

    static final MemoryLayout _EVENTLOGRECORD$DataOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EVENTLOGRECORD$DataOffset$LAYOUT() { return _EVENTLOGRECORD$DataOffset$LAYOUT_; }

    static final VarHandle _EVENTLOGRECORD$DataOffset$VH_ = _EVENTLOGRECORD$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataOffset"));
    static final java.lang.invoke.VarHandle _EVENTLOGRECORD$DataOffset$VH() { return _EVENTLOGRECORD$DataOffset$VH_; }

    static final MemoryLayout _EVENTSFORLOGFILE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ulSize"),
        MemoryLayout.ofSequence(256, C_SHORT).withName("szLogicalLogFile"),
        C_LONG.withName("ulNumRecords"),
        MemoryLayout.ofSequence(MemoryLayout.ofStruct(
            C_LONG.withName("Length"),
            C_LONG.withName("Reserved"),
            C_LONG.withName("RecordNumber"),
            C_LONG.withName("TimeGenerated"),
            C_LONG.withName("TimeWritten"),
            C_LONG.withName("EventID"),
            C_SHORT.withName("EventType"),
            C_SHORT.withName("NumStrings"),
            C_SHORT.withName("EventCategory"),
            C_SHORT.withName("ReservedFlags"),
            C_LONG.withName("ClosingRecordNumber"),
            C_LONG.withName("StringOffset"),
            C_LONG.withName("UserSidLength"),
            C_LONG.withName("UserSidOffset"),
            C_LONG.withName("DataLength"),
            C_LONG.withName("DataOffset")
        ).withName("_EVENTLOGRECORD")).withName("pEventLogRecords")
    ).withName("_EVENTSFORLOGFILE");
    static final jdk.incubator.foreign.MemoryLayout _EVENTSFORLOGFILE$struct$LAYOUT() { return _EVENTSFORLOGFILE$struct$LAYOUT_; }

    static final MemoryLayout _EVENTSFORLOGFILE$ulSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EVENTSFORLOGFILE$ulSize$LAYOUT() { return _EVENTSFORLOGFILE$ulSize$LAYOUT_; }

    static final VarHandle _EVENTSFORLOGFILE$ulSize$VH_ = _EVENTSFORLOGFILE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulSize"));
    static final java.lang.invoke.VarHandle _EVENTSFORLOGFILE$ulSize$VH() { return _EVENTSFORLOGFILE$ulSize$VH_; }

    static final MemoryLayout _EVENTSFORLOGFILE$ulNumRecords$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _EVENTSFORLOGFILE$ulNumRecords$LAYOUT() { return _EVENTSFORLOGFILE$ulNumRecords$LAYOUT_; }

    static final VarHandle _EVENTSFORLOGFILE$ulNumRecords$VH_ = _EVENTSFORLOGFILE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulNumRecords"));
    static final java.lang.invoke.VarHandle _EVENTSFORLOGFILE$ulNumRecords$VH() { return _EVENTSFORLOGFILE$ulNumRecords$VH_; }

    static final MemoryLayout _PACKEDEVENTINFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("ulSize"),
        C_LONG.withName("ulNumEventsForLogFile"),
        MemoryLayout.ofSequence(C_LONG).withName("ulOffsets")
    ).withName("_PACKEDEVENTINFO");
    static final jdk.incubator.foreign.MemoryLayout _PACKEDEVENTINFO$struct$LAYOUT() { return _PACKEDEVENTINFO$struct$LAYOUT_; }

    static final MemoryLayout _PACKEDEVENTINFO$ulSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PACKEDEVENTINFO$ulSize$LAYOUT() { return _PACKEDEVENTINFO$ulSize$LAYOUT_; }

    static final VarHandle _PACKEDEVENTINFO$ulSize$VH_ = _PACKEDEVENTINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulSize"));
    static final java.lang.invoke.VarHandle _PACKEDEVENTINFO$ulSize$VH() { return _PACKEDEVENTINFO$ulSize$VH_; }

    static final MemoryLayout _PACKEDEVENTINFO$ulNumEventsForLogFile$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _PACKEDEVENTINFO$ulNumEventsForLogFile$LAYOUT() { return _PACKEDEVENTINFO$ulNumEventsForLogFile$LAYOUT_; }

    static final VarHandle _PACKEDEVENTINFO$ulNumEventsForLogFile$VH_ = _PACKEDEVENTINFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulNumEventsForLogFile"));
    static final java.lang.invoke.VarHandle _PACKEDEVENTINFO$ulNumEventsForLogFile$VH() { return _PACKEDEVENTINFO$ulNumEventsForLogFile$VH_; }

    static final int DriverType() { return (int)1L; }

    static final int FileSystemType() { return (int)2L; }

    static final int Win32ServiceOwnProcess() { return (int)16L; }

    static final int Win32ServiceShareProcess() { return (int)32L; }

    static final int AdapterType() { return (int)4L; }

    static final int RecognizerType() { return (int)8L; }

    static final int BootLoad() { return (int)0L; }

    static final int SystemLoad() { return (int)1L; }

    static final int AutoLoad() { return (int)2L; }

    static final int DemandLoad() { return (int)3L; }

    static final int DisableLoad() { return (int)4L; }

    static final int IgnoreError() { return (int)0L; }

    static final int NormalError() { return (int)1L; }

    static final int SevereError() { return (int)2L; }

    static final int CriticalError() { return (int)3L; }

    static final MemoryLayout _TAPE_ERASE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Type"),
        C_CHAR.withName("Immediate"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_TAPE_ERASE");
    static final jdk.incubator.foreign.MemoryLayout _TAPE_ERASE$struct$LAYOUT() { return _TAPE_ERASE$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_ERASE$Type$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_ERASE$Type$LAYOUT() { return _TAPE_ERASE$Type$LAYOUT_; }

    static final VarHandle _TAPE_ERASE$Type$VH_ = _TAPE_ERASE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    static final java.lang.invoke.VarHandle _TAPE_ERASE$Type$VH() { return _TAPE_ERASE$Type$VH_; }

    static final MemoryLayout _TAPE_ERASE$Immediate$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_ERASE$Immediate$LAYOUT() { return _TAPE_ERASE$Immediate$LAYOUT_; }

    static final VarHandle _TAPE_ERASE$Immediate$VH_ = _TAPE_ERASE$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Immediate"));
    static final java.lang.invoke.VarHandle _TAPE_ERASE$Immediate$VH() { return _TAPE_ERASE$Immediate$VH_; }

    static final MemoryLayout _TAPE_PREPARE$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Operation"),
        C_CHAR.withName("Immediate"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_TAPE_PREPARE");
    static final jdk.incubator.foreign.MemoryLayout _TAPE_PREPARE$struct$LAYOUT() { return _TAPE_PREPARE$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_PREPARE$Operation$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_PREPARE$Operation$LAYOUT() { return _TAPE_PREPARE$Operation$LAYOUT_; }

    static final VarHandle _TAPE_PREPARE$Operation$VH_ = _TAPE_PREPARE$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Operation"));
    static final java.lang.invoke.VarHandle _TAPE_PREPARE$Operation$VH() { return _TAPE_PREPARE$Operation$VH_; }

    static final MemoryLayout _TAPE_PREPARE$Immediate$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_PREPARE$Immediate$LAYOUT() { return _TAPE_PREPARE$Immediate$LAYOUT_; }

    static final VarHandle _TAPE_PREPARE$Immediate$VH_ = _TAPE_PREPARE$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Immediate"));
    static final java.lang.invoke.VarHandle _TAPE_PREPARE$Immediate$VH() { return _TAPE_PREPARE$Immediate$VH_; }

    static final MemoryLayout _TAPE_WRITE_MARKS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Type"),
        C_LONG.withName("Count"),
        C_CHAR.withName("Immediate"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("_TAPE_WRITE_MARKS");
    static final jdk.incubator.foreign.MemoryLayout _TAPE_WRITE_MARKS$struct$LAYOUT() { return _TAPE_WRITE_MARKS$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_WRITE_MARKS$Type$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_WRITE_MARKS$Type$LAYOUT() { return _TAPE_WRITE_MARKS$Type$LAYOUT_; }

    static final VarHandle _TAPE_WRITE_MARKS$Type$VH_ = _TAPE_WRITE_MARKS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    static final java.lang.invoke.VarHandle _TAPE_WRITE_MARKS$Type$VH() { return _TAPE_WRITE_MARKS$Type$VH_; }

    static final MemoryLayout _TAPE_WRITE_MARKS$Count$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_WRITE_MARKS$Count$LAYOUT() { return _TAPE_WRITE_MARKS$Count$LAYOUT_; }

    static final VarHandle _TAPE_WRITE_MARKS$Count$VH_ = _TAPE_WRITE_MARKS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    static final java.lang.invoke.VarHandle _TAPE_WRITE_MARKS$Count$VH() { return _TAPE_WRITE_MARKS$Count$VH_; }

    static final MemoryLayout _TAPE_WRITE_MARKS$Immediate$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_WRITE_MARKS$Immediate$LAYOUT() { return _TAPE_WRITE_MARKS$Immediate$LAYOUT_; }

    static final VarHandle _TAPE_WRITE_MARKS$Immediate$VH_ = _TAPE_WRITE_MARKS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Immediate"));
    static final java.lang.invoke.VarHandle _TAPE_WRITE_MARKS$Immediate$VH() { return _TAPE_WRITE_MARKS$Immediate$VH_; }

    static final MemoryLayout _TAPE_GET_POSITION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Type"),
        C_LONG.withName("Partition"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("Offset")
    ).withName("_TAPE_GET_POSITION");
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_POSITION$struct$LAYOUT() { return _TAPE_GET_POSITION$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_GET_POSITION$Type$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_POSITION$Type$LAYOUT() { return _TAPE_GET_POSITION$Type$LAYOUT_; }

    static final VarHandle _TAPE_GET_POSITION$Type$VH_ = _TAPE_GET_POSITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    static final java.lang.invoke.VarHandle _TAPE_GET_POSITION$Type$VH() { return _TAPE_GET_POSITION$Type$VH_; }

    static final MemoryLayout _TAPE_GET_POSITION$Partition$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_POSITION$Partition$LAYOUT() { return _TAPE_GET_POSITION$Partition$LAYOUT_; }

    static final VarHandle _TAPE_GET_POSITION$Partition$VH_ = _TAPE_GET_POSITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Partition"));
    static final java.lang.invoke.VarHandle _TAPE_GET_POSITION$Partition$VH() { return _TAPE_GET_POSITION$Partition$VH_; }

    static final MemoryLayout _TAPE_SET_POSITION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Method"),
        C_LONG.withName("Partition"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("Offset"),
        C_CHAR.withName("Immediate"),
        MemoryLayout.ofPaddingBits(56)
    ).withName("_TAPE_SET_POSITION");
    static final jdk.incubator.foreign.MemoryLayout _TAPE_SET_POSITION$struct$LAYOUT() { return _TAPE_SET_POSITION$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_SET_POSITION$Method$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_SET_POSITION$Method$LAYOUT() { return _TAPE_SET_POSITION$Method$LAYOUT_; }

    static final VarHandle _TAPE_SET_POSITION$Method$VH_ = _TAPE_SET_POSITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Method"));
    static final java.lang.invoke.VarHandle _TAPE_SET_POSITION$Method$VH() { return _TAPE_SET_POSITION$Method$VH_; }

    static final MemoryLayout _TAPE_SET_POSITION$Partition$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_SET_POSITION$Partition$LAYOUT() { return _TAPE_SET_POSITION$Partition$LAYOUT_; }

    static final VarHandle _TAPE_SET_POSITION$Partition$VH_ = _TAPE_SET_POSITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Partition"));
    static final java.lang.invoke.VarHandle _TAPE_SET_POSITION$Partition$VH() { return _TAPE_SET_POSITION$Partition$VH_; }

    static final MemoryLayout _TAPE_SET_POSITION$Immediate$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_SET_POSITION$Immediate$LAYOUT() { return _TAPE_SET_POSITION$Immediate$LAYOUT_; }

    static final VarHandle _TAPE_SET_POSITION$Immediate$VH_ = _TAPE_SET_POSITION$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Immediate"));
    static final java.lang.invoke.VarHandle _TAPE_SET_POSITION$Immediate$VH() { return _TAPE_SET_POSITION$Immediate$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("ECC"),
        C_CHAR.withName("Compression"),
        C_CHAR.withName("DataPadding"),
        C_CHAR.withName("ReportSetmarks"),
        C_LONG.withName("DefaultBlockSize"),
        C_LONG.withName("MaximumBlockSize"),
        C_LONG.withName("MinimumBlockSize"),
        C_LONG.withName("MaximumPartitionCount"),
        C_LONG.withName("FeaturesLow"),
        C_LONG.withName("FeaturesHigh"),
        C_LONG.withName("EOTWarningZoneSize")
    ).withName("_TAPE_GET_DRIVE_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$ECC$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$ECC$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$ECC$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$ECC$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ECC"));
    static final java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$ECC$VH() { return _TAPE_GET_DRIVE_PARAMETERS$ECC$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$Compression$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$Compression$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$Compression$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$Compression$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Compression"));
    static final java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$Compression$VH() { return _TAPE_GET_DRIVE_PARAMETERS$Compression$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$DataPadding$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$DataPadding$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$DataPadding$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$DataPadding$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("DataPadding"));
    static final java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$DataPadding$VH() { return _TAPE_GET_DRIVE_PARAMETERS$DataPadding$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$ReportSetmarks$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$ReportSetmarks$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$ReportSetmarks$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$ReportSetmarks$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ReportSetmarks"));
    static final java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$ReportSetmarks$VH() { return _TAPE_GET_DRIVE_PARAMETERS$ReportSetmarks$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$DefaultBlockSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$DefaultBlockSize$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$DefaultBlockSize$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$DefaultBlockSize$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DefaultBlockSize"));
    static final java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$DefaultBlockSize$VH() { return _TAPE_GET_DRIVE_PARAMETERS$DefaultBlockSize$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$MaximumBlockSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$MaximumBlockSize$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$MaximumBlockSize$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$MaximumBlockSize$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaximumBlockSize"));
    static final java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$MaximumBlockSize$VH() { return _TAPE_GET_DRIVE_PARAMETERS$MaximumBlockSize$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$MinimumBlockSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$MinimumBlockSize$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$MinimumBlockSize$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$MinimumBlockSize$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MinimumBlockSize"));
    static final java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$MinimumBlockSize$VH() { return _TAPE_GET_DRIVE_PARAMETERS$MinimumBlockSize$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$MaximumPartitionCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$MaximumPartitionCount$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$MaximumPartitionCount$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$MaximumPartitionCount$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MaximumPartitionCount"));
    static final java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$MaximumPartitionCount$VH() { return _TAPE_GET_DRIVE_PARAMETERS$MaximumPartitionCount$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$FeaturesLow$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$FeaturesLow$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$FeaturesLow$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$FeaturesLow$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FeaturesLow"));
    static final java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$FeaturesLow$VH() { return _TAPE_GET_DRIVE_PARAMETERS$FeaturesLow$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$FeaturesHigh$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$FeaturesHigh$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$FeaturesHigh$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$FeaturesHigh$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FeaturesHigh"));
    static final java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$FeaturesHigh$VH() { return _TAPE_GET_DRIVE_PARAMETERS$FeaturesHigh$VH_; }

    static final MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$EOTWarningZoneSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_DRIVE_PARAMETERS$EOTWarningZoneSize$LAYOUT() { return _TAPE_GET_DRIVE_PARAMETERS$EOTWarningZoneSize$LAYOUT_; }

    static final VarHandle _TAPE_GET_DRIVE_PARAMETERS$EOTWarningZoneSize$VH_ = _TAPE_GET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EOTWarningZoneSize"));
    static final java.lang.invoke.VarHandle _TAPE_GET_DRIVE_PARAMETERS$EOTWarningZoneSize$VH() { return _TAPE_GET_DRIVE_PARAMETERS$EOTWarningZoneSize$VH_; }

    static final MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("ECC"),
        C_CHAR.withName("Compression"),
        C_CHAR.withName("DataPadding"),
        C_CHAR.withName("ReportSetmarks"),
        C_LONG.withName("EOTWarningZoneSize")
    ).withName("_TAPE_SET_DRIVE_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$struct$LAYOUT() { return _TAPE_SET_DRIVE_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$ECC$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$ECC$LAYOUT() { return _TAPE_SET_DRIVE_PARAMETERS$ECC$LAYOUT_; }

    static final VarHandle _TAPE_SET_DRIVE_PARAMETERS$ECC$VH_ = _TAPE_SET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ECC"));
    static final java.lang.invoke.VarHandle _TAPE_SET_DRIVE_PARAMETERS$ECC$VH() { return _TAPE_SET_DRIVE_PARAMETERS$ECC$VH_; }

    static final MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$Compression$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$Compression$LAYOUT() { return _TAPE_SET_DRIVE_PARAMETERS$Compression$LAYOUT_; }

    static final VarHandle _TAPE_SET_DRIVE_PARAMETERS$Compression$VH_ = _TAPE_SET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Compression"));
    static final java.lang.invoke.VarHandle _TAPE_SET_DRIVE_PARAMETERS$Compression$VH() { return _TAPE_SET_DRIVE_PARAMETERS$Compression$VH_; }

    static final MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$DataPadding$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$DataPadding$LAYOUT() { return _TAPE_SET_DRIVE_PARAMETERS$DataPadding$LAYOUT_; }

    static final VarHandle _TAPE_SET_DRIVE_PARAMETERS$DataPadding$VH_ = _TAPE_SET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("DataPadding"));
    static final java.lang.invoke.VarHandle _TAPE_SET_DRIVE_PARAMETERS$DataPadding$VH() { return _TAPE_SET_DRIVE_PARAMETERS$DataPadding$VH_; }

    static final MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$ReportSetmarks$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$ReportSetmarks$LAYOUT() { return _TAPE_SET_DRIVE_PARAMETERS$ReportSetmarks$LAYOUT_; }

    static final VarHandle _TAPE_SET_DRIVE_PARAMETERS$ReportSetmarks$VH_ = _TAPE_SET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ReportSetmarks"));
    static final java.lang.invoke.VarHandle _TAPE_SET_DRIVE_PARAMETERS$ReportSetmarks$VH() { return _TAPE_SET_DRIVE_PARAMETERS$ReportSetmarks$VH_; }

    static final MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$EOTWarningZoneSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_SET_DRIVE_PARAMETERS$EOTWarningZoneSize$LAYOUT() { return _TAPE_SET_DRIVE_PARAMETERS$EOTWarningZoneSize$LAYOUT_; }

    static final VarHandle _TAPE_SET_DRIVE_PARAMETERS$EOTWarningZoneSize$VH_ = _TAPE_SET_DRIVE_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EOTWarningZoneSize"));
    static final java.lang.invoke.VarHandle _TAPE_SET_DRIVE_PARAMETERS$EOTWarningZoneSize$VH() { return _TAPE_SET_DRIVE_PARAMETERS$EOTWarningZoneSize$VH_; }

    static final MemoryLayout _TAPE_GET_MEDIA_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("Capacity"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("Remaining"),
        C_LONG.withName("BlockSize"),
        C_LONG.withName("PartitionCount"),
        C_CHAR.withName("WriteProtected"),
        MemoryLayout.ofPaddingBits(56)
    ).withName("_TAPE_GET_MEDIA_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_MEDIA_PARAMETERS$struct$LAYOUT() { return _TAPE_GET_MEDIA_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_GET_MEDIA_PARAMETERS$BlockSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_MEDIA_PARAMETERS$BlockSize$LAYOUT() { return _TAPE_GET_MEDIA_PARAMETERS$BlockSize$LAYOUT_; }

    static final VarHandle _TAPE_GET_MEDIA_PARAMETERS$BlockSize$VH_ = _TAPE_GET_MEDIA_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BlockSize"));
    static final java.lang.invoke.VarHandle _TAPE_GET_MEDIA_PARAMETERS$BlockSize$VH() { return _TAPE_GET_MEDIA_PARAMETERS$BlockSize$VH_; }

    static final MemoryLayout _TAPE_GET_MEDIA_PARAMETERS$PartitionCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_MEDIA_PARAMETERS$PartitionCount$LAYOUT() { return _TAPE_GET_MEDIA_PARAMETERS$PartitionCount$LAYOUT_; }

    static final VarHandle _TAPE_GET_MEDIA_PARAMETERS$PartitionCount$VH_ = _TAPE_GET_MEDIA_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PartitionCount"));
    static final java.lang.invoke.VarHandle _TAPE_GET_MEDIA_PARAMETERS$PartitionCount$VH() { return _TAPE_GET_MEDIA_PARAMETERS$PartitionCount$VH_; }

    static final MemoryLayout _TAPE_GET_MEDIA_PARAMETERS$WriteProtected$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_GET_MEDIA_PARAMETERS$WriteProtected$LAYOUT() { return _TAPE_GET_MEDIA_PARAMETERS$WriteProtected$LAYOUT_; }

    static final VarHandle _TAPE_GET_MEDIA_PARAMETERS$WriteProtected$VH_ = _TAPE_GET_MEDIA_PARAMETERS$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("WriteProtected"));
    static final java.lang.invoke.VarHandle _TAPE_GET_MEDIA_PARAMETERS$WriteProtected$VH() { return _TAPE_GET_MEDIA_PARAMETERS$WriteProtected$VH_; }

    static final MemoryLayout _TAPE_SET_MEDIA_PARAMETERS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("BlockSize")
    ).withName("_TAPE_SET_MEDIA_PARAMETERS");
    static final jdk.incubator.foreign.MemoryLayout _TAPE_SET_MEDIA_PARAMETERS$struct$LAYOUT() { return _TAPE_SET_MEDIA_PARAMETERS$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_SET_MEDIA_PARAMETERS$BlockSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_SET_MEDIA_PARAMETERS$BlockSize$LAYOUT() { return _TAPE_SET_MEDIA_PARAMETERS$BlockSize$LAYOUT_; }

    static final VarHandle _TAPE_SET_MEDIA_PARAMETERS$BlockSize$VH_ = _TAPE_SET_MEDIA_PARAMETERS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BlockSize"));
    static final java.lang.invoke.VarHandle _TAPE_SET_MEDIA_PARAMETERS$BlockSize$VH() { return _TAPE_SET_MEDIA_PARAMETERS$BlockSize$VH_; }

    static final MemoryLayout _TAPE_CREATE_PARTITION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Method"),
        C_LONG.withName("Count"),
        C_LONG.withName("Size")
    ).withName("_TAPE_CREATE_PARTITION");
    static final jdk.incubator.foreign.MemoryLayout _TAPE_CREATE_PARTITION$struct$LAYOUT() { return _TAPE_CREATE_PARTITION$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_CREATE_PARTITION$Method$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_CREATE_PARTITION$Method$LAYOUT() { return _TAPE_CREATE_PARTITION$Method$LAYOUT_; }

    static final VarHandle _TAPE_CREATE_PARTITION$Method$VH_ = _TAPE_CREATE_PARTITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Method"));
    static final java.lang.invoke.VarHandle _TAPE_CREATE_PARTITION$Method$VH() { return _TAPE_CREATE_PARTITION$Method$VH_; }

    static final MemoryLayout _TAPE_CREATE_PARTITION$Count$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_CREATE_PARTITION$Count$LAYOUT() { return _TAPE_CREATE_PARTITION$Count$LAYOUT_; }

    static final VarHandle _TAPE_CREATE_PARTITION$Count$VH_ = _TAPE_CREATE_PARTITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Count"));
    static final java.lang.invoke.VarHandle _TAPE_CREATE_PARTITION$Count$VH() { return _TAPE_CREATE_PARTITION$Count$VH_; }

    static final MemoryLayout _TAPE_CREATE_PARTITION$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_CREATE_PARTITION$Size$LAYOUT() { return _TAPE_CREATE_PARTITION$Size$LAYOUT_; }

    static final VarHandle _TAPE_CREATE_PARTITION$Size$VH_ = _TAPE_CREATE_PARTITION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _TAPE_CREATE_PARTITION$Size$VH() { return _TAPE_CREATE_PARTITION$Size$VH_; }

    static final MemoryLayout _TAPE_WMI_OPERATIONS$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Method"),
        C_LONG.withName("DataBufferSize"),
        C_POINTER.withName("DataBuffer")
    ).withName("_TAPE_WMI_OPERATIONS");
    static final jdk.incubator.foreign.MemoryLayout _TAPE_WMI_OPERATIONS$struct$LAYOUT() { return _TAPE_WMI_OPERATIONS$struct$LAYOUT_; }

    static final MemoryLayout _TAPE_WMI_OPERATIONS$Method$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_WMI_OPERATIONS$Method$LAYOUT() { return _TAPE_WMI_OPERATIONS$Method$LAYOUT_; }

    static final VarHandle _TAPE_WMI_OPERATIONS$Method$VH_ = _TAPE_WMI_OPERATIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Method"));
    static final java.lang.invoke.VarHandle _TAPE_WMI_OPERATIONS$Method$VH() { return _TAPE_WMI_OPERATIONS$Method$VH_; }

    static final MemoryLayout _TAPE_WMI_OPERATIONS$DataBufferSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_WMI_OPERATIONS$DataBufferSize$LAYOUT() { return _TAPE_WMI_OPERATIONS$DataBufferSize$LAYOUT_; }

    static final VarHandle _TAPE_WMI_OPERATIONS$DataBufferSize$VH_ = _TAPE_WMI_OPERATIONS$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DataBufferSize"));
    static final java.lang.invoke.VarHandle _TAPE_WMI_OPERATIONS$DataBufferSize$VH() { return _TAPE_WMI_OPERATIONS$DataBufferSize$VH_; }

    static final MemoryLayout _TAPE_WMI_OPERATIONS$DataBuffer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _TAPE_WMI_OPERATIONS$DataBuffer$LAYOUT() { return _TAPE_WMI_OPERATIONS$DataBuffer$LAYOUT_; }

    static final VarHandle _TAPE_WMI_OPERATIONS$DataBuffer$VH_ = MemoryHandles.asAddressVarHandle(_TAPE_WMI_OPERATIONS$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("DataBuffer")));
    static final java.lang.invoke.VarHandle _TAPE_WMI_OPERATIONS$DataBuffer$VH() { return _TAPE_WMI_OPERATIONS$DataBuffer$VH_; }

    static final int TapeDriveProblemNone() { return (int)0L; }

    static final int TapeDriveReadWriteWarning() { return (int)1L; }

    static final int TapeDriveReadWriteError() { return (int)2L; }

    static final int TapeDriveReadWarning() { return (int)3L; }

    static final int TapeDriveWriteWarning() { return (int)4L; }

    static final int TapeDriveReadError() { return (int)5L; }

    static final int TapeDriveWriteError() { return (int)6L; }

    static final int TapeDriveHardwareError() { return (int)7L; }

    static final int TapeDriveUnsupportedMedia() { return (int)8L; }

    static final int TapeDriveScsiConnectionError() { return (int)9L; }

    static final int TapeDriveTimetoClean() { return (int)10L; }

    static final int TapeDriveCleanDriveNow() { return (int)11L; }

    static final int TapeDriveMediaLifeExpired() { return (int)12L; }

    static final int TapeDriveSnappedTape() { return (int)13L; }

    static final int TransactionOutcomeUndetermined() { return (int)1L; }

    static final int TransactionOutcomeCommitted() { return (int)2L; }

    static final int TransactionOutcomeAborted() { return (int)3L; }

    static final int TransactionStateNormal() { return (int)1L; }

    static final int TransactionStateIndoubt() { return (int)2L; }

    static final int TransactionStateCommittedNotify() { return (int)3L; }

    static final MemoryLayout _TRANSACTION_BASIC_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("TransactionId"),
        C_LONG.withName("State"),
        C_LONG.withName("Outcome")
    ).withName("_TRANSACTION_BASIC_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTION_BASIC_INFORMATION$struct$LAYOUT() { return _TRANSACTION_BASIC_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_BASIC_INFORMATION$State$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTION_BASIC_INFORMATION$State$LAYOUT() { return _TRANSACTION_BASIC_INFORMATION$State$LAYOUT_; }

    static final VarHandle _TRANSACTION_BASIC_INFORMATION$State$VH_ = _TRANSACTION_BASIC_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("State"));
    static final java.lang.invoke.VarHandle _TRANSACTION_BASIC_INFORMATION$State$VH() { return _TRANSACTION_BASIC_INFORMATION$State$VH_; }

    static final MemoryLayout _TRANSACTION_BASIC_INFORMATION$Outcome$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTION_BASIC_INFORMATION$Outcome$LAYOUT() { return _TRANSACTION_BASIC_INFORMATION$Outcome$LAYOUT_; }

    static final VarHandle _TRANSACTION_BASIC_INFORMATION$Outcome$VH_ = _TRANSACTION_BASIC_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Outcome"));
    static final java.lang.invoke.VarHandle _TRANSACTION_BASIC_INFORMATION$Outcome$VH() { return _TRANSACTION_BASIC_INFORMATION$Outcome$VH_; }

    static final MemoryLayout _TRANSACTIONMANAGER_BASIC_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("TmIdentity"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("VirtualClock")
    ).withName("_TRANSACTIONMANAGER_BASIC_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTIONMANAGER_BASIC_INFORMATION$struct$LAYOUT() { return _TRANSACTIONMANAGER_BASIC_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTIONMANAGER_LOG_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("LogIdentity")
    ).withName("_TRANSACTIONMANAGER_LOG_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTIONMANAGER_LOG_INFORMATION$struct$LAYOUT() { return _TRANSACTIONMANAGER_LOG_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTIONMANAGER_LOGPATH_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("LogPathLength"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("LogPath"),
        MemoryLayout.ofPaddingBits(16)
    ).withName("_TRANSACTIONMANAGER_LOGPATH_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTIONMANAGER_LOGPATH_INFORMATION$struct$LAYOUT() { return _TRANSACTIONMANAGER_LOGPATH_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTIONMANAGER_LOGPATH_INFORMATION$LogPathLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTIONMANAGER_LOGPATH_INFORMATION$LogPathLength$LAYOUT() { return _TRANSACTIONMANAGER_LOGPATH_INFORMATION$LogPathLength$LAYOUT_; }

    static final VarHandle _TRANSACTIONMANAGER_LOGPATH_INFORMATION$LogPathLength$VH_ = _TRANSACTIONMANAGER_LOGPATH_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LogPathLength"));
    static final java.lang.invoke.VarHandle _TRANSACTIONMANAGER_LOGPATH_INFORMATION$LogPathLength$VH() { return _TRANSACTIONMANAGER_LOGPATH_INFORMATION$LogPathLength$VH_; }

    static final MemoryLayout _TRANSACTIONMANAGER_RECOVERY_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("LastRecoveredLsn")
    ).withName("_TRANSACTIONMANAGER_RECOVERY_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTIONMANAGER_RECOVERY_INFORMATION$struct$LAYOUT() { return _TRANSACTIONMANAGER_RECOVERY_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTIONMANAGER_RECOVERY_INFORMATION$LastRecoveredLsn$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTIONMANAGER_RECOVERY_INFORMATION$LastRecoveredLsn$LAYOUT() { return _TRANSACTIONMANAGER_RECOVERY_INFORMATION$LastRecoveredLsn$LAYOUT_; }

    static final VarHandle _TRANSACTIONMANAGER_RECOVERY_INFORMATION$LastRecoveredLsn$VH_ = _TRANSACTIONMANAGER_RECOVERY_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("LastRecoveredLsn"));
    static final java.lang.invoke.VarHandle _TRANSACTIONMANAGER_RECOVERY_INFORMATION$LastRecoveredLsn$VH() { return _TRANSACTIONMANAGER_RECOVERY_INFORMATION$LastRecoveredLsn$VH_; }

    static final MemoryLayout _TRANSACTIONMANAGER_OLDEST_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("OldestTransactionGuid")
    ).withName("_TRANSACTIONMANAGER_OLDEST_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTIONMANAGER_OLDEST_INFORMATION$struct$LAYOUT() { return _TRANSACTIONMANAGER_OLDEST_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("IsolationLevel"),
        C_LONG.withName("IsolationFlags"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("Timeout"),
        C_LONG.withName("Outcome"),
        C_LONG.withName("DescriptionLength"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("Description"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("_TRANSACTION_PROPERTIES_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$struct$LAYOUT() { return _TRANSACTION_PROPERTIES_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$IsolationLevel$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$IsolationLevel$LAYOUT() { return _TRANSACTION_PROPERTIES_INFORMATION$IsolationLevel$LAYOUT_; }

    static final VarHandle _TRANSACTION_PROPERTIES_INFORMATION$IsolationLevel$VH_ = _TRANSACTION_PROPERTIES_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IsolationLevel"));
    static final java.lang.invoke.VarHandle _TRANSACTION_PROPERTIES_INFORMATION$IsolationLevel$VH() { return _TRANSACTION_PROPERTIES_INFORMATION$IsolationLevel$VH_; }

    static final MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$IsolationFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$IsolationFlags$LAYOUT() { return _TRANSACTION_PROPERTIES_INFORMATION$IsolationFlags$LAYOUT_; }

    static final VarHandle _TRANSACTION_PROPERTIES_INFORMATION$IsolationFlags$VH_ = _TRANSACTION_PROPERTIES_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("IsolationFlags"));
    static final java.lang.invoke.VarHandle _TRANSACTION_PROPERTIES_INFORMATION$IsolationFlags$VH() { return _TRANSACTION_PROPERTIES_INFORMATION$IsolationFlags$VH_; }

    static final MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$Outcome$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$Outcome$LAYOUT() { return _TRANSACTION_PROPERTIES_INFORMATION$Outcome$LAYOUT_; }

    static final VarHandle _TRANSACTION_PROPERTIES_INFORMATION$Outcome$VH_ = _TRANSACTION_PROPERTIES_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Outcome"));
    static final java.lang.invoke.VarHandle _TRANSACTION_PROPERTIES_INFORMATION$Outcome$VH() { return _TRANSACTION_PROPERTIES_INFORMATION$Outcome$VH_; }

    static final MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$DescriptionLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTION_PROPERTIES_INFORMATION$DescriptionLength$LAYOUT() { return _TRANSACTION_PROPERTIES_INFORMATION$DescriptionLength$LAYOUT_; }

    static final VarHandle _TRANSACTION_PROPERTIES_INFORMATION$DescriptionLength$VH_ = _TRANSACTION_PROPERTIES_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DescriptionLength"));
    static final java.lang.invoke.VarHandle _TRANSACTION_PROPERTIES_INFORMATION$DescriptionLength$VH() { return _TRANSACTION_PROPERTIES_INFORMATION$DescriptionLength$VH_; }

    static final MemoryLayout _TRANSACTION_BIND_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("TmHandle")
    ).withName("_TRANSACTION_BIND_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTION_BIND_INFORMATION$struct$LAYOUT() { return _TRANSACTION_BIND_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_BIND_INFORMATION$TmHandle$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTION_BIND_INFORMATION$TmHandle$LAYOUT() { return _TRANSACTION_BIND_INFORMATION$TmHandle$LAYOUT_; }

    static final VarHandle _TRANSACTION_BIND_INFORMATION$TmHandle$VH_ = MemoryHandles.asAddressVarHandle(_TRANSACTION_BIND_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("TmHandle")));
    static final java.lang.invoke.VarHandle _TRANSACTION_BIND_INFORMATION$TmHandle$VH() { return _TRANSACTION_BIND_INFORMATION$TmHandle$VH_; }

    static final MemoryLayout _TRANSACTION_ENLISTMENT_PAIR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("EnlistmentId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ResourceManagerId")
    ).withName("_TRANSACTION_ENLISTMENT_PAIR");
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTION_ENLISTMENT_PAIR$struct$LAYOUT() { return _TRANSACTION_ENLISTMENT_PAIR$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_ENLISTMENTS_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("NumberOfEnlistments"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("EnlistmentId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("ResourceManagerId")
        ).withName("_TRANSACTION_ENLISTMENT_PAIR")).withName("EnlistmentPair")
    ).withName("_TRANSACTION_ENLISTMENTS_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTION_ENLISTMENTS_INFORMATION$struct$LAYOUT() { return _TRANSACTION_ENLISTMENTS_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_ENLISTMENTS_INFORMATION$NumberOfEnlistments$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTION_ENLISTMENTS_INFORMATION$NumberOfEnlistments$LAYOUT() { return _TRANSACTION_ENLISTMENTS_INFORMATION$NumberOfEnlistments$LAYOUT_; }

    static final VarHandle _TRANSACTION_ENLISTMENTS_INFORMATION$NumberOfEnlistments$VH_ = _TRANSACTION_ENLISTMENTS_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfEnlistments"));
    static final java.lang.invoke.VarHandle _TRANSACTION_ENLISTMENTS_INFORMATION$NumberOfEnlistments$VH() { return _TRANSACTION_ENLISTMENTS_INFORMATION$NumberOfEnlistments$VH_; }

    static final MemoryLayout _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("EnlistmentId"),
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("ResourceManagerId")
        ).withName("SuperiorEnlistmentPair")
    ).withName("_TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION$struct$LAYOUT() { return _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _RESOURCEMANAGER_BASIC_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ResourceManagerId"),
        C_LONG.withName("DescriptionLength"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("Description"),
        MemoryLayout.ofPaddingBits(16)
    ).withName("_RESOURCEMANAGER_BASIC_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _RESOURCEMANAGER_BASIC_INFORMATION$struct$LAYOUT() { return _RESOURCEMANAGER_BASIC_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _RESOURCEMANAGER_BASIC_INFORMATION$DescriptionLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _RESOURCEMANAGER_BASIC_INFORMATION$DescriptionLength$LAYOUT() { return _RESOURCEMANAGER_BASIC_INFORMATION$DescriptionLength$LAYOUT_; }

    static final VarHandle _RESOURCEMANAGER_BASIC_INFORMATION$DescriptionLength$VH_ = _RESOURCEMANAGER_BASIC_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DescriptionLength"));
    static final java.lang.invoke.VarHandle _RESOURCEMANAGER_BASIC_INFORMATION$DescriptionLength$VH() { return _RESOURCEMANAGER_BASIC_INFORMATION$DescriptionLength$VH_; }

    static final MemoryLayout _RESOURCEMANAGER_COMPLETION_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("IoCompletionPortHandle"),
        C_LONGLONG.withName("CompletionKey")
    ).withName("_RESOURCEMANAGER_COMPLETION_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _RESOURCEMANAGER_COMPLETION_INFORMATION$struct$LAYOUT() { return _RESOURCEMANAGER_COMPLETION_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _RESOURCEMANAGER_COMPLETION_INFORMATION$IoCompletionPortHandle$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _RESOURCEMANAGER_COMPLETION_INFORMATION$IoCompletionPortHandle$LAYOUT() { return _RESOURCEMANAGER_COMPLETION_INFORMATION$IoCompletionPortHandle$LAYOUT_; }

    static final VarHandle _RESOURCEMANAGER_COMPLETION_INFORMATION$IoCompletionPortHandle$VH_ = MemoryHandles.asAddressVarHandle(_RESOURCEMANAGER_COMPLETION_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("IoCompletionPortHandle")));
    static final java.lang.invoke.VarHandle _RESOURCEMANAGER_COMPLETION_INFORMATION$IoCompletionPortHandle$VH() { return _RESOURCEMANAGER_COMPLETION_INFORMATION$IoCompletionPortHandle$VH_; }

    static final MemoryLayout _RESOURCEMANAGER_COMPLETION_INFORMATION$CompletionKey$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _RESOURCEMANAGER_COMPLETION_INFORMATION$CompletionKey$LAYOUT() { return _RESOURCEMANAGER_COMPLETION_INFORMATION$CompletionKey$LAYOUT_; }

    static final VarHandle _RESOURCEMANAGER_COMPLETION_INFORMATION$CompletionKey$VH_ = _RESOURCEMANAGER_COMPLETION_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CompletionKey"));
    static final java.lang.invoke.VarHandle _RESOURCEMANAGER_COMPLETION_INFORMATION$CompletionKey$VH() { return _RESOURCEMANAGER_COMPLETION_INFORMATION$CompletionKey$VH_; }

    static final int TransactionBasicInformation() { return (int)0L; }

    static final int TransactionPropertiesInformation() { return (int)1L; }

    static final int TransactionEnlistmentInformation() { return (int)2L; }

    static final int TransactionSuperiorEnlistmentInformation() { return (int)3L; }

    static final int TransactionBindInformation() { return (int)4L; }

    static final int TransactionDTCPrivateInformation() { return (int)5L; }

    static final int TransactionManagerBasicInformation() { return (int)0L; }

    static final int TransactionManagerLogInformation() { return (int)1L; }

    static final int TransactionManagerLogPathInformation() { return (int)2L; }

    static final int TransactionManagerRecoveryInformation() { return (int)4L; }

    static final int TransactionManagerOnlineProbeInformation() { return (int)3L; }

    static final int TransactionManagerOldestTransactionInformation() { return (int)5L; }

    static final int ResourceManagerBasicInformation() { return (int)0L; }

    static final int ResourceManagerCompletionInformation() { return (int)1L; }

    static final MemoryLayout _ENLISTMENT_BASIC_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("EnlistmentId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("TransactionId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ResourceManagerId")
    ).withName("_ENLISTMENT_BASIC_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _ENLISTMENT_BASIC_INFORMATION$struct$LAYOUT() { return _ENLISTMENT_BASIC_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _ENLISTMENT_CRM_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("CrmTransactionManagerId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("CrmResourceManagerId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("CrmEnlistmentId")
    ).withName("_ENLISTMENT_CRM_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _ENLISTMENT_CRM_INFORMATION$struct$LAYOUT() { return _ENLISTMENT_CRM_INFORMATION$struct$LAYOUT_; }

    static final int EnlistmentBasicInformation() { return (int)0L; }

    static final int EnlistmentRecoveryInformation() { return (int)1L; }

    static final int EnlistmentCrmInformation() { return (int)2L; }

    static final MemoryLayout _TRANSACTION_LIST_ENTRY$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("UOW")
    ).withName("_TRANSACTION_LIST_ENTRY");
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTION_LIST_ENTRY$struct$LAYOUT() { return _TRANSACTION_LIST_ENTRY$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_LIST_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("NumberOfTransactions"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
            ).withName("UOW")
        ).withName("_TRANSACTION_LIST_ENTRY")).withName("TransactionInformation")
    ).withName("_TRANSACTION_LIST_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTION_LIST_INFORMATION$struct$LAYOUT() { return _TRANSACTION_LIST_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TRANSACTION_LIST_INFORMATION$NumberOfTransactions$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TRANSACTION_LIST_INFORMATION$NumberOfTransactions$LAYOUT() { return _TRANSACTION_LIST_INFORMATION$NumberOfTransactions$LAYOUT_; }

    static final VarHandle _TRANSACTION_LIST_INFORMATION$NumberOfTransactions$VH_ = _TRANSACTION_LIST_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfTransactions"));
    static final java.lang.invoke.VarHandle _TRANSACTION_LIST_INFORMATION$NumberOfTransactions$VH() { return _TRANSACTION_LIST_INFORMATION$NumberOfTransactions$VH_; }

    static final int KTMOBJECT_TRANSACTION() { return (int)0L; }

    static final int KTMOBJECT_TRANSACTION_MANAGER() { return (int)1L; }

    static final int KTMOBJECT_RESOURCE_MANAGER() { return (int)2L; }

    static final int KTMOBJECT_ENLISTMENT() { return (int)3L; }

    static final int KTMOBJECT_INVALID() { return (int)4L; }

    static final MemoryLayout _KTMOBJECT_CURSOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("LastQuery"),
        C_LONG.withName("ObjectIdCount"),
        MemoryLayout.ofSequence(1, MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("_GUID")).withName("ObjectIds")
    ).withName("_KTMOBJECT_CURSOR");
    static final jdk.incubator.foreign.MemoryLayout _KTMOBJECT_CURSOR$struct$LAYOUT() { return _KTMOBJECT_CURSOR$struct$LAYOUT_; }

    static final MemoryLayout _KTMOBJECT_CURSOR$ObjectIdCount$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _KTMOBJECT_CURSOR$ObjectIdCount$LAYOUT() { return _KTMOBJECT_CURSOR$ObjectIdCount$LAYOUT_; }

    static final VarHandle _KTMOBJECT_CURSOR$ObjectIdCount$VH_ = _KTMOBJECT_CURSOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ObjectIdCount"));
    static final java.lang.invoke.VarHandle _KTMOBJECT_CURSOR$ObjectIdCount$VH() { return _KTMOBJECT_CURSOR$ObjectIdCount$VH_; }

    static final int TP_CALLBACK_PRIORITY_HIGH() { return (int)0L; }

    static final int TP_CALLBACK_PRIORITY_NORMAL() { return (int)1L; }

    static final int TP_CALLBACK_PRIORITY_LOW() { return (int)2L; }

    static final int TP_CALLBACK_PRIORITY_INVALID() { return (int)3L; }

    static final int TP_CALLBACK_PRIORITY_COUNT() { return (int)3L; }

    static final MemoryLayout _TP_POOL_STACK_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("StackReserve"),
        C_LONGLONG.withName("StackCommit")
    ).withName("_TP_POOL_STACK_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _TP_POOL_STACK_INFORMATION$struct$LAYOUT() { return _TP_POOL_STACK_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _TP_POOL_STACK_INFORMATION$StackReserve$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _TP_POOL_STACK_INFORMATION$StackReserve$LAYOUT() { return _TP_POOL_STACK_INFORMATION$StackReserve$LAYOUT_; }

    static final VarHandle _TP_POOL_STACK_INFORMATION$StackReserve$VH_ = _TP_POOL_STACK_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StackReserve"));
    static final java.lang.invoke.VarHandle _TP_POOL_STACK_INFORMATION$StackReserve$VH() { return _TP_POOL_STACK_INFORMATION$StackReserve$VH_; }

    static final MemoryLayout _TP_POOL_STACK_INFORMATION$StackCommit$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _TP_POOL_STACK_INFORMATION$StackCommit$LAYOUT() { return _TP_POOL_STACK_INFORMATION$StackCommit$LAYOUT_; }

    static final VarHandle _TP_POOL_STACK_INFORMATION$StackCommit$VH_ = _TP_POOL_STACK_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("StackCommit"));
    static final java.lang.invoke.VarHandle _TP_POOL_STACK_INFORMATION$StackCommit$VH() { return _TP_POOL_STACK_INFORMATION$StackCommit$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Version"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("Pool"),
        C_POINTER.withName("CleanupGroup"),
        C_POINTER.withName("CleanupGroupCancelCallback"),
        C_POINTER.withName("RaceDll"),
        C_POINTER.withName("ActivationContext"),
        C_POINTER.withName("FinalizationCallback"),
        MemoryLayout.ofUnion(
            C_LONG.withName("Flags"),
            MemoryLayout.ofStruct(
                C_INT
            ).withName("s")
        ).withName("u"),
        C_INT.withName("CallbackPriority"),
        C_LONG.withName("Size"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_TP_CALLBACK_ENVIRON_V3");
    static final jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$struct$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$Version$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$Version$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$Version$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$Version$VH_ = _TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Version"));
    static final java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$Version$VH() { return _TP_CALLBACK_ENVIRON_V3$Version$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$Pool$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$Pool$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$Pool$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$Pool$VH_ = MemoryHandles.asAddressVarHandle(_TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("Pool")));
    static final java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$Pool$VH() { return _TP_CALLBACK_ENVIRON_V3$Pool$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$CleanupGroup$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$CleanupGroup$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$CleanupGroup$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$CleanupGroup$VH_ = MemoryHandles.asAddressVarHandle(_TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CleanupGroup")));
    static final java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$CleanupGroup$VH() { return _TP_CALLBACK_ENVIRON_V3$CleanupGroup$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$CleanupGroupCancelCallback$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$CleanupGroupCancelCallback$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$CleanupGroupCancelCallback$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$CleanupGroupCancelCallback$VH_ = MemoryHandles.asAddressVarHandle(_TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("CleanupGroupCancelCallback")));
    static final java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$CleanupGroupCancelCallback$VH() { return _TP_CALLBACK_ENVIRON_V3$CleanupGroupCancelCallback$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$RaceDll$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$RaceDll$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$RaceDll$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$RaceDll$VH_ = MemoryHandles.asAddressVarHandle(_TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RaceDll")));
    static final java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$RaceDll$VH() { return _TP_CALLBACK_ENVIRON_V3$RaceDll$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$ActivationContext$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$ActivationContext$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$ActivationContext$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$ActivationContext$VH_ = MemoryHandles.asAddressVarHandle(_TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ActivationContext")));
    static final java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$ActivationContext$VH() { return _TP_CALLBACK_ENVIRON_V3$ActivationContext$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$FinalizationCallback$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$FinalizationCallback$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$FinalizationCallback$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$FinalizationCallback$VH_ = MemoryHandles.asAddressVarHandle(_TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("FinalizationCallback")));
    static final java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$FinalizationCallback$VH() { return _TP_CALLBACK_ENVIRON_V3$FinalizationCallback$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$u$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_LONG.withName("Flags"),
        MemoryLayout.ofStruct(
            C_INT
        ).withName("s")
    );
    static final jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$u$union$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$u$union$LAYOUT_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$u$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$u$Flags$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$u$Flags$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$u$Flags$VH_ = _TP_CALLBACK_ENVIRON_V3$u$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$u$Flags$VH() { return _TP_CALLBACK_ENVIRON_V3$u$Flags$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$u$s$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT
    );
    static final jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$u$s$struct$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$u$s$struct$LAYOUT_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$CallbackPriority$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$CallbackPriority$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$CallbackPriority$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$CallbackPriority$VH_ = _TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CallbackPriority"));
    static final java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$CallbackPriority$VH() { return _TP_CALLBACK_ENVIRON_V3$CallbackPriority$VH_; }

    static final MemoryLayout _TP_CALLBACK_ENVIRON_V3$Size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _TP_CALLBACK_ENVIRON_V3$Size$LAYOUT() { return _TP_CALLBACK_ENVIRON_V3$Size$LAYOUT_; }

    static final VarHandle _TP_CALLBACK_ENVIRON_V3$Size$VH_ = _TP_CALLBACK_ENVIRON_V3$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Size"));
    static final java.lang.invoke.VarHandle _TP_CALLBACK_ENVIRON_V3$Size$VH() { return _TP_CALLBACK_ENVIRON_V3$Size$VH_; }

    static final FunctionDescriptor TpInitializeCallbackEnviron$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor TpInitializeCallbackEnviron$FUNC() { return TpInitializeCallbackEnviron$FUNC_; }

    static final MethodHandle TpInitializeCallbackEnviron$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "TpInitializeCallbackEnviron",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        TpInitializeCallbackEnviron$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle TpInitializeCallbackEnviron$MH() { return TpInitializeCallbackEnviron$MH_; }

}

