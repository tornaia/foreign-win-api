// Generated by jextract

package com.github.tornaia.foreign.win.api.winbase.internal;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class winbase_h$constants$2 extends winbase_h$constants$1 {

    /* package-private */ winbase_h$constants$2() {}
    static final MemoryLayout tagACTCTXA$lpApplicationName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTXA$lpApplicationName$LAYOUT() { return tagACTCTXA$lpApplicationName$LAYOUT_; }

    static final VarHandle tagACTCTXA$lpApplicationName$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpApplicationName")));
    static final java.lang.invoke.VarHandle tagACTCTXA$lpApplicationName$VH() { return tagACTCTXA$lpApplicationName$VH_; }

    static final MemoryLayout tagACTCTXA$hModule$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTXA$hModule$LAYOUT() { return tagACTCTXA$hModule$LAYOUT_; }

    static final VarHandle tagACTCTXA$hModule$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTXA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hModule")));
    static final java.lang.invoke.VarHandle tagACTCTXA$hModule$VH() { return tagACTCTXA$hModule$VH_; }

    static final MemoryLayout tagACTCTXW$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("dwFlags"),
        C_POINTER.withName("lpSource"),
        C_SHORT.withName("wProcessorArchitecture"),
        C_SHORT.withName("wLangId"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpAssemblyDirectory"),
        C_POINTER.withName("lpResourceName"),
        C_POINTER.withName("lpApplicationName"),
        C_POINTER.withName("hModule")
    ).withName("tagACTCTXW");
    static final jdk.incubator.foreign.MemoryLayout tagACTCTXW$struct$LAYOUT() { return tagACTCTXW$struct$LAYOUT_; }

    static final MemoryLayout tagACTCTXW$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTXW$cbSize$LAYOUT() { return tagACTCTXW$cbSize$LAYOUT_; }

    static final VarHandle tagACTCTXW$cbSize$VH_ = tagACTCTXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle tagACTCTXW$cbSize$VH() { return tagACTCTXW$cbSize$VH_; }

    static final MemoryLayout tagACTCTXW$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTXW$dwFlags$LAYOUT() { return tagACTCTXW$dwFlags$LAYOUT_; }

    static final VarHandle tagACTCTXW$dwFlags$VH_ = tagACTCTXW$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle tagACTCTXW$dwFlags$VH() { return tagACTCTXW$dwFlags$VH_; }

    static final MemoryLayout tagACTCTXW$lpSource$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTXW$lpSource$LAYOUT() { return tagACTCTXW$lpSource$LAYOUT_; }

    static final VarHandle tagACTCTXW$lpSource$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpSource")));
    static final java.lang.invoke.VarHandle tagACTCTXW$lpSource$VH() { return tagACTCTXW$lpSource$VH_; }

    static final MemoryLayout tagACTCTXW$wProcessorArchitecture$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTXW$wProcessorArchitecture$LAYOUT() { return tagACTCTXW$wProcessorArchitecture$LAYOUT_; }

    static final VarHandle tagACTCTXW$wProcessorArchitecture$VH_ = tagACTCTXW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wProcessorArchitecture"));
    static final java.lang.invoke.VarHandle tagACTCTXW$wProcessorArchitecture$VH() { return tagACTCTXW$wProcessorArchitecture$VH_; }

    static final MemoryLayout tagACTCTXW$wLangId$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTXW$wLangId$LAYOUT() { return tagACTCTXW$wLangId$LAYOUT_; }

    static final VarHandle tagACTCTXW$wLangId$VH_ = tagACTCTXW$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("wLangId"));
    static final java.lang.invoke.VarHandle tagACTCTXW$wLangId$VH() { return tagACTCTXW$wLangId$VH_; }

    static final MemoryLayout tagACTCTXW$lpAssemblyDirectory$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTXW$lpAssemblyDirectory$LAYOUT() { return tagACTCTXW$lpAssemblyDirectory$LAYOUT_; }

    static final VarHandle tagACTCTXW$lpAssemblyDirectory$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpAssemblyDirectory")));
    static final java.lang.invoke.VarHandle tagACTCTXW$lpAssemblyDirectory$VH() { return tagACTCTXW$lpAssemblyDirectory$VH_; }

    static final MemoryLayout tagACTCTXW$lpResourceName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTXW$lpResourceName$LAYOUT() { return tagACTCTXW$lpResourceName$LAYOUT_; }

    static final VarHandle tagACTCTXW$lpResourceName$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpResourceName")));
    static final java.lang.invoke.VarHandle tagACTCTXW$lpResourceName$VH() { return tagACTCTXW$lpResourceName$VH_; }

    static final MemoryLayout tagACTCTXW$lpApplicationName$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTXW$lpApplicationName$LAYOUT() { return tagACTCTXW$lpApplicationName$LAYOUT_; }

    static final VarHandle tagACTCTXW$lpApplicationName$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpApplicationName")));
    static final java.lang.invoke.VarHandle tagACTCTXW$lpApplicationName$VH() { return tagACTCTXW$lpApplicationName$VH_; }

    static final MemoryLayout tagACTCTXW$hModule$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTXW$hModule$LAYOUT() { return tagACTCTXW$hModule$LAYOUT_; }

    static final VarHandle tagACTCTXW$hModule$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTXW$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hModule")));
    static final java.lang.invoke.VarHandle tagACTCTXW$hModule$VH() { return tagACTCTXW$hModule$VH_; }

    static final FunctionDescriptor CreateActCtxA$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateActCtxA$FUNC() { return CreateActCtxA$FUNC_; }

    static final MethodHandle CreateActCtxA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateActCtxA",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CreateActCtxA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateActCtxA$MH() { return CreateActCtxA$MH_; }

    static final FunctionDescriptor CreateActCtxW$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateActCtxW$FUNC() { return CreateActCtxW$FUNC_; }

    static final MethodHandle CreateActCtxW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateActCtxW",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        CreateActCtxW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateActCtxW$MH() { return CreateActCtxW$MH_; }

    static final FunctionDescriptor AddRefActCtx$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddRefActCtx$FUNC() { return AddRefActCtx$FUNC_; }

    static final MethodHandle AddRefActCtx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddRefActCtx",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        AddRefActCtx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddRefActCtx$MH() { return AddRefActCtx$MH_; }

    static final FunctionDescriptor ReleaseActCtx$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReleaseActCtx$FUNC() { return ReleaseActCtx$FUNC_; }

    static final MethodHandle ReleaseActCtx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReleaseActCtx",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        ReleaseActCtx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReleaseActCtx$MH() { return ReleaseActCtx$MH_; }

    static final FunctionDescriptor ZombifyActCtx$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ZombifyActCtx$FUNC() { return ZombifyActCtx$FUNC_; }

    static final MethodHandle ZombifyActCtx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ZombifyActCtx",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ZombifyActCtx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ZombifyActCtx$MH() { return ZombifyActCtx$MH_; }

    static final FunctionDescriptor ActivateActCtx$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ActivateActCtx$FUNC() { return ActivateActCtx$FUNC_; }

    static final MethodHandle ActivateActCtx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ActivateActCtx",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        ActivateActCtx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ActivateActCtx$MH() { return ActivateActCtx$MH_; }

    static final FunctionDescriptor DeactivateActCtx$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor DeactivateActCtx$FUNC() { return DeactivateActCtx$FUNC_; }

    static final MethodHandle DeactivateActCtx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DeactivateActCtx",
        "(IJ)I",
        DeactivateActCtx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DeactivateActCtx$MH() { return DeactivateActCtx$MH_; }

    static final FunctionDescriptor GetCurrentActCtx$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetCurrentActCtx$FUNC() { return GetCurrentActCtx$FUNC_; }

    static final MethodHandle GetCurrentActCtx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetCurrentActCtx",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        GetCurrentActCtx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetCurrentActCtx$MH() { return GetCurrentActCtx$MH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("ulDataFormatVersion"),
        C_POINTER.withName("lpData"),
        C_LONG.withName("ulLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpSectionGlobalData"),
        C_LONG.withName("ulSectionGlobalDataLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpSectionBase"),
        C_LONG.withName("ulSectionTotalLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hActCtx"),
        C_LONG.withName("ulAssemblyRosterIndex"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagACTCTX_SECTION_KEYED_DATA_2600");
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$struct$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA_2600$struct$LAYOUT_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$cbSize$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA_2600$cbSize$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$cbSize$VH_ = tagACTCTX_SECTION_KEYED_DATA_2600$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$cbSize$VH() { return tagACTCTX_SECTION_KEYED_DATA_2600$cbSize$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$ulDataFormatVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$ulDataFormatVersion$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA_2600$ulDataFormatVersion$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$ulDataFormatVersion$VH_ = tagACTCTX_SECTION_KEYED_DATA_2600$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulDataFormatVersion"));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$ulDataFormatVersion$VH() { return tagACTCTX_SECTION_KEYED_DATA_2600$ulDataFormatVersion$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$lpData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$lpData$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA_2600$lpData$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$lpData$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTX_SECTION_KEYED_DATA_2600$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpData")));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$lpData$VH() { return tagACTCTX_SECTION_KEYED_DATA_2600$lpData$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$ulLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$ulLength$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA_2600$ulLength$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$ulLength$VH_ = tagACTCTX_SECTION_KEYED_DATA_2600$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulLength"));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$ulLength$VH() { return tagACTCTX_SECTION_KEYED_DATA_2600$ulLength$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$lpSectionGlobalData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$lpSectionGlobalData$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA_2600$lpSectionGlobalData$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$lpSectionGlobalData$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTX_SECTION_KEYED_DATA_2600$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpSectionGlobalData")));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$lpSectionGlobalData$VH() { return tagACTCTX_SECTION_KEYED_DATA_2600$lpSectionGlobalData$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$ulSectionGlobalDataLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$ulSectionGlobalDataLength$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA_2600$ulSectionGlobalDataLength$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$ulSectionGlobalDataLength$VH_ = tagACTCTX_SECTION_KEYED_DATA_2600$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulSectionGlobalDataLength"));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$ulSectionGlobalDataLength$VH() { return tagACTCTX_SECTION_KEYED_DATA_2600$ulSectionGlobalDataLength$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$lpSectionBase$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$lpSectionBase$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA_2600$lpSectionBase$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$lpSectionBase$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTX_SECTION_KEYED_DATA_2600$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpSectionBase")));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$lpSectionBase$VH() { return tagACTCTX_SECTION_KEYED_DATA_2600$lpSectionBase$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$ulSectionTotalLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$ulSectionTotalLength$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA_2600$ulSectionTotalLength$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$ulSectionTotalLength$VH_ = tagACTCTX_SECTION_KEYED_DATA_2600$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulSectionTotalLength"));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$ulSectionTotalLength$VH() { return tagACTCTX_SECTION_KEYED_DATA_2600$ulSectionTotalLength$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$hActCtx$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$hActCtx$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA_2600$hActCtx$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$hActCtx$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTX_SECTION_KEYED_DATA_2600$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hActCtx")));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$hActCtx$VH() { return tagACTCTX_SECTION_KEYED_DATA_2600$hActCtx$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$ulAssemblyRosterIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA_2600$ulAssemblyRosterIndex$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA_2600$ulAssemblyRosterIndex$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$ulAssemblyRosterIndex$VH_ = tagACTCTX_SECTION_KEYED_DATA_2600$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulAssemblyRosterIndex"));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA_2600$ulAssemblyRosterIndex$VH() { return tagACTCTX_SECTION_KEYED_DATA_2600$ulAssemblyRosterIndex$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("lpInformation"),
        C_POINTER.withName("lpSectionBase"),
        C_LONG.withName("ulSectionLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpSectionGlobalDataBase"),
        C_LONG.withName("ulSectionGlobalDataLength"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA");
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$struct$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$struct$LAYOUT_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpInformation$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpInformation$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpInformation$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpInformation$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpInformation")));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpInformation$VH() { return tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpInformation$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpSectionBase$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpSectionBase$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpSectionBase$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpSectionBase$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpSectionBase")));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpSectionBase$VH() { return tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpSectionBase$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$ulSectionLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$ulSectionLength$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$ulSectionLength$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$ulSectionLength$VH_ = tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulSectionLength"));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$ulSectionLength$VH() { return tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$ulSectionLength$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpSectionGlobalDataBase$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpSectionGlobalDataBase$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpSectionGlobalDataBase$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpSectionGlobalDataBase$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpSectionGlobalDataBase")));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpSectionGlobalDataBase$VH() { return tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$lpSectionGlobalDataBase$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$ulSectionGlobalDataLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$ulSectionGlobalDataLength$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$ulSectionGlobalDataLength$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$ulSectionGlobalDataLength$VH_ = tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulSectionGlobalDataLength"));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$ulSectionGlobalDataLength$VH() { return tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA$ulSectionGlobalDataLength$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("cbSize"),
        C_LONG.withName("ulDataFormatVersion"),
        C_POINTER.withName("lpData"),
        C_LONG.withName("ulLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpSectionGlobalData"),
        C_LONG.withName("ulSectionGlobalDataLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("lpSectionBase"),
        C_LONG.withName("ulSectionTotalLength"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("hActCtx"),
        C_LONG.withName("ulAssemblyRosterIndex"),
        C_LONG.withName("ulFlags"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("lpInformation"),
            C_POINTER.withName("lpSectionBase"),
            C_LONG.withName("ulSectionLength"),
            MemoryLayout.ofPaddingBits(32),
            C_POINTER.withName("lpSectionGlobalDataBase"),
            C_LONG.withName("ulSectionGlobalDataLength"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("AssemblyMetadata")
    ).withName("tagACTCTX_SECTION_KEYED_DATA");
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA$struct$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA$struct$LAYOUT_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA$cbSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA$cbSize$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA$cbSize$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA$cbSize$VH_ = tagACTCTX_SECTION_KEYED_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cbSize"));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA$cbSize$VH() { return tagACTCTX_SECTION_KEYED_DATA$cbSize$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA$ulDataFormatVersion$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA$ulDataFormatVersion$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA$ulDataFormatVersion$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA$ulDataFormatVersion$VH_ = tagACTCTX_SECTION_KEYED_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulDataFormatVersion"));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA$ulDataFormatVersion$VH() { return tagACTCTX_SECTION_KEYED_DATA$ulDataFormatVersion$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA$lpData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA$lpData$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA$lpData$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA$lpData$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTX_SECTION_KEYED_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpData")));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA$lpData$VH() { return tagACTCTX_SECTION_KEYED_DATA$lpData$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA$ulLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA$ulLength$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA$ulLength$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA$ulLength$VH_ = tagACTCTX_SECTION_KEYED_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulLength"));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA$ulLength$VH() { return tagACTCTX_SECTION_KEYED_DATA$ulLength$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA$lpSectionGlobalData$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA$lpSectionGlobalData$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA$lpSectionGlobalData$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA$lpSectionGlobalData$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTX_SECTION_KEYED_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpSectionGlobalData")));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA$lpSectionGlobalData$VH() { return tagACTCTX_SECTION_KEYED_DATA$lpSectionGlobalData$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA$ulSectionGlobalDataLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA$ulSectionGlobalDataLength$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA$ulSectionGlobalDataLength$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA$ulSectionGlobalDataLength$VH_ = tagACTCTX_SECTION_KEYED_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulSectionGlobalDataLength"));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA$ulSectionGlobalDataLength$VH() { return tagACTCTX_SECTION_KEYED_DATA$ulSectionGlobalDataLength$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA$lpSectionBase$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA$lpSectionBase$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA$lpSectionBase$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA$lpSectionBase$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTX_SECTION_KEYED_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpSectionBase")));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA$lpSectionBase$VH() { return tagACTCTX_SECTION_KEYED_DATA$lpSectionBase$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA$ulSectionTotalLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA$ulSectionTotalLength$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA$ulSectionTotalLength$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA$ulSectionTotalLength$VH_ = tagACTCTX_SECTION_KEYED_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulSectionTotalLength"));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA$ulSectionTotalLength$VH() { return tagACTCTX_SECTION_KEYED_DATA$ulSectionTotalLength$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA$hActCtx$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA$hActCtx$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA$hActCtx$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA$hActCtx$VH_ = MemoryHandles.asAddressVarHandle(tagACTCTX_SECTION_KEYED_DATA$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hActCtx")));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA$hActCtx$VH() { return tagACTCTX_SECTION_KEYED_DATA$hActCtx$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA$ulAssemblyRosterIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA$ulAssemblyRosterIndex$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA$ulAssemblyRosterIndex$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA$ulAssemblyRosterIndex$VH_ = tagACTCTX_SECTION_KEYED_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulAssemblyRosterIndex"));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA$ulAssemblyRosterIndex$VH() { return tagACTCTX_SECTION_KEYED_DATA$ulAssemblyRosterIndex$VH_; }

    static final MemoryLayout tagACTCTX_SECTION_KEYED_DATA$ulFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout tagACTCTX_SECTION_KEYED_DATA$ulFlags$LAYOUT() { return tagACTCTX_SECTION_KEYED_DATA$ulFlags$LAYOUT_; }

    static final VarHandle tagACTCTX_SECTION_KEYED_DATA$ulFlags$VH_ = tagACTCTX_SECTION_KEYED_DATA$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ulFlags"));
    static final java.lang.invoke.VarHandle tagACTCTX_SECTION_KEYED_DATA$ulFlags$VH() { return tagACTCTX_SECTION_KEYED_DATA$ulFlags$VH_; }

    static final FunctionDescriptor FindActCtxSectionStringA$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FindActCtxSectionStringA$FUNC() { return FindActCtxSectionStringA$FUNC_; }

    static final MethodHandle FindActCtxSectionStringA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FindActCtxSectionStringA",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        FindActCtxSectionStringA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FindActCtxSectionStringA$MH() { return FindActCtxSectionStringA$MH_; }

    static final FunctionDescriptor FindActCtxSectionStringW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FindActCtxSectionStringW$FUNC() { return FindActCtxSectionStringW$FUNC_; }

    static final MethodHandle FindActCtxSectionStringW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FindActCtxSectionStringW",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        FindActCtxSectionStringW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FindActCtxSectionStringW$MH() { return FindActCtxSectionStringW$MH_; }

    static final FunctionDescriptor FindActCtxSectionGuid$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor FindActCtxSectionGuid$FUNC() { return FindActCtxSectionGuid$FUNC_; }

    static final MethodHandle FindActCtxSectionGuid$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "FindActCtxSectionGuid",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        FindActCtxSectionGuid$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle FindActCtxSectionGuid$MH() { return FindActCtxSectionGuid$MH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_BASIC_INFORMATION$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("hActCtx"),
        C_LONG.withName("dwFlags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_ACTIVATION_CONTEXT_BASIC_INFORMATION");
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_BASIC_INFORMATION$struct$LAYOUT() { return _ACTIVATION_CONTEXT_BASIC_INFORMATION$struct$LAYOUT_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_BASIC_INFORMATION$hActCtx$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_BASIC_INFORMATION$hActCtx$LAYOUT() { return _ACTIVATION_CONTEXT_BASIC_INFORMATION$hActCtx$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_BASIC_INFORMATION$hActCtx$VH_ = MemoryHandles.asAddressVarHandle(_ACTIVATION_CONTEXT_BASIC_INFORMATION$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hActCtx")));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_BASIC_INFORMATION$hActCtx$VH() { return _ACTIVATION_CONTEXT_BASIC_INFORMATION$hActCtx$VH_; }

    static final MemoryLayout _ACTIVATION_CONTEXT_BASIC_INFORMATION$dwFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _ACTIVATION_CONTEXT_BASIC_INFORMATION$dwFlags$LAYOUT() { return _ACTIVATION_CONTEXT_BASIC_INFORMATION$dwFlags$LAYOUT_; }

    static final VarHandle _ACTIVATION_CONTEXT_BASIC_INFORMATION$dwFlags$VH_ = _ACTIVATION_CONTEXT_BASIC_INFORMATION$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwFlags"));
    static final java.lang.invoke.VarHandle _ACTIVATION_CONTEXT_BASIC_INFORMATION$dwFlags$VH() { return _ACTIVATION_CONTEXT_BASIC_INFORMATION$dwFlags$VH_; }

    static final FunctionDescriptor QueryActCtxW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor QueryActCtxW$FUNC() { return QueryActCtxW$FUNC_; }

    static final MethodHandle QueryActCtxW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "QueryActCtxW",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        QueryActCtxW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle QueryActCtxW$MH() { return QueryActCtxW$MH_; }

    static final FunctionDescriptor WTSGetActiveConsoleSessionId$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor WTSGetActiveConsoleSessionId$FUNC() { return WTSGetActiveConsoleSessionId$FUNC_; }

    static final MethodHandle WTSGetActiveConsoleSessionId$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WTSGetActiveConsoleSessionId",
        "()I",
        WTSGetActiveConsoleSessionId$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WTSGetActiveConsoleSessionId$MH() { return WTSGetActiveConsoleSessionId$MH_; }

    static final FunctionDescriptor WTSGetServiceSessionId$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor WTSGetServiceSessionId$FUNC() { return WTSGetServiceSessionId$FUNC_; }

    static final MethodHandle WTSGetServiceSessionId$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WTSGetServiceSessionId",
        "()I",
        WTSGetServiceSessionId$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WTSGetServiceSessionId$MH() { return WTSGetServiceSessionId$MH_; }

    static final FunctionDescriptor WTSIsServerContainer$FUNC_ = FunctionDescriptor.of(C_CHAR);
    static final jdk.incubator.foreign.FunctionDescriptor WTSIsServerContainer$FUNC() { return WTSIsServerContainer$FUNC_; }

    static final MethodHandle WTSIsServerContainer$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "WTSIsServerContainer",
        "()B",
        WTSIsServerContainer$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle WTSIsServerContainer$MH() { return WTSIsServerContainer$MH_; }

    static final FunctionDescriptor GetActiveProcessorGroupCount$FUNC_ = FunctionDescriptor.of(C_SHORT);
    static final jdk.incubator.foreign.FunctionDescriptor GetActiveProcessorGroupCount$FUNC() { return GetActiveProcessorGroupCount$FUNC_; }

    static final MethodHandle GetActiveProcessorGroupCount$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetActiveProcessorGroupCount",
        "()S",
        GetActiveProcessorGroupCount$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetActiveProcessorGroupCount$MH() { return GetActiveProcessorGroupCount$MH_; }

    static final FunctionDescriptor GetMaximumProcessorGroupCount$FUNC_ = FunctionDescriptor.of(C_SHORT);
    static final jdk.incubator.foreign.FunctionDescriptor GetMaximumProcessorGroupCount$FUNC() { return GetMaximumProcessorGroupCount$FUNC_; }

    static final MethodHandle GetMaximumProcessorGroupCount$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetMaximumProcessorGroupCount",
        "()S",
        GetMaximumProcessorGroupCount$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetMaximumProcessorGroupCount$MH() { return GetMaximumProcessorGroupCount$MH_; }

    static final FunctionDescriptor GetActiveProcessorCount$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetActiveProcessorCount$FUNC() { return GetActiveProcessorCount$FUNC_; }

    static final MethodHandle GetActiveProcessorCount$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetActiveProcessorCount",
        "(S)I",
        GetActiveProcessorCount$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetActiveProcessorCount$MH() { return GetActiveProcessorCount$MH_; }

    static final FunctionDescriptor GetMaximumProcessorCount$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_SHORT
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetMaximumProcessorCount$FUNC() { return GetMaximumProcessorCount$FUNC_; }

    static final MethodHandle GetMaximumProcessorCount$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetMaximumProcessorCount",
        "(S)I",
        GetMaximumProcessorCount$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetMaximumProcessorCount$MH() { return GetMaximumProcessorCount$MH_; }

    static final FunctionDescriptor GetNumaProcessorNode$FUNC_ = FunctionDescriptor.of(C_INT,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetNumaProcessorNode$FUNC() { return GetNumaProcessorNode$FUNC_; }

    static final MethodHandle GetNumaProcessorNode$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetNumaProcessorNode",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        GetNumaProcessorNode$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetNumaProcessorNode$MH() { return GetNumaProcessorNode$MH_; }

    static final FunctionDescriptor GetNumaNodeNumberFromHandle$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetNumaNodeNumberFromHandle$FUNC() { return GetNumaNodeNumberFromHandle$FUNC_; }

    static final MethodHandle GetNumaNodeNumberFromHandle$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetNumaNodeNumberFromHandle",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        GetNumaNodeNumberFromHandle$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetNumaNodeNumberFromHandle$MH() { return GetNumaNodeNumberFromHandle$MH_; }

    static final FunctionDescriptor GetNumaProcessorNodeEx$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetNumaProcessorNodeEx$FUNC() { return GetNumaProcessorNodeEx$FUNC_; }

    static final MethodHandle GetNumaProcessorNodeEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetNumaProcessorNodeEx",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        GetNumaProcessorNodeEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetNumaProcessorNodeEx$MH() { return GetNumaProcessorNodeEx$MH_; }

    static final FunctionDescriptor GetNumaNodeProcessorMask$FUNC_ = FunctionDescriptor.of(C_INT,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetNumaNodeProcessorMask$FUNC() { return GetNumaNodeProcessorMask$FUNC_; }

    static final MethodHandle GetNumaNodeProcessorMask$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetNumaNodeProcessorMask",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        GetNumaNodeProcessorMask$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetNumaNodeProcessorMask$MH() { return GetNumaNodeProcessorMask$MH_; }

    static final FunctionDescriptor GetNumaAvailableMemoryNode$FUNC_ = FunctionDescriptor.of(C_INT,
        C_CHAR,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetNumaAvailableMemoryNode$FUNC() { return GetNumaAvailableMemoryNode$FUNC_; }

    static final MethodHandle GetNumaAvailableMemoryNode$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetNumaAvailableMemoryNode",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        GetNumaAvailableMemoryNode$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetNumaAvailableMemoryNode$MH() { return GetNumaAvailableMemoryNode$MH_; }

    static final FunctionDescriptor GetNumaAvailableMemoryNodeEx$FUNC_ = FunctionDescriptor.of(C_INT,
        C_SHORT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetNumaAvailableMemoryNodeEx$FUNC() { return GetNumaAvailableMemoryNodeEx$FUNC_; }

    static final MethodHandle GetNumaAvailableMemoryNodeEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetNumaAvailableMemoryNodeEx",
        "(SLjdk/incubator/foreign/MemoryAddress;)I",
        GetNumaAvailableMemoryNodeEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetNumaAvailableMemoryNodeEx$MH() { return GetNumaAvailableMemoryNodeEx$MH_; }

    static final FunctionDescriptor GetNumaProximityNode$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetNumaProximityNode$FUNC() { return GetNumaProximityNode$FUNC_; }

    static final MethodHandle GetNumaProximityNode$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetNumaProximityNode",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        GetNumaProximityNode$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetNumaProximityNode$MH() { return GetNumaProximityNode$MH_; }

    static final FunctionDescriptor RegisterApplicationRecoveryCallback$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RegisterApplicationRecoveryCallback$FUNC() { return RegisterApplicationRecoveryCallback$FUNC_; }

    static final MethodHandle RegisterApplicationRecoveryCallback$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RegisterApplicationRecoveryCallback",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        RegisterApplicationRecoveryCallback$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RegisterApplicationRecoveryCallback$MH() { return RegisterApplicationRecoveryCallback$MH_; }

    static final FunctionDescriptor RegisterApplicationRecoveryCallback$pRecoveyCallback$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RegisterApplicationRecoveryCallback$pRecoveyCallback$FUNC() { return RegisterApplicationRecoveryCallback$pRecoveyCallback$FUNC_; }

    static final FunctionDescriptor UnregisterApplicationRecoveryCallback$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor UnregisterApplicationRecoveryCallback$FUNC() { return UnregisterApplicationRecoveryCallback$FUNC_; }

    static final MethodHandle UnregisterApplicationRecoveryCallback$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UnregisterApplicationRecoveryCallback",
        "()I",
        UnregisterApplicationRecoveryCallback$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UnregisterApplicationRecoveryCallback$MH() { return UnregisterApplicationRecoveryCallback$MH_; }

    static final FunctionDescriptor RegisterApplicationRestart$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RegisterApplicationRestart$FUNC() { return RegisterApplicationRestart$FUNC_; }

    static final MethodHandle RegisterApplicationRestart$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RegisterApplicationRestart",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        RegisterApplicationRestart$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RegisterApplicationRestart$MH() { return RegisterApplicationRestart$MH_; }

    static final FunctionDescriptor UnregisterApplicationRestart$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor UnregisterApplicationRestart$FUNC() { return UnregisterApplicationRestart$FUNC_; }

    static final MethodHandle UnregisterApplicationRestart$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "UnregisterApplicationRestart",
        "()I",
        UnregisterApplicationRestart$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle UnregisterApplicationRestart$MH() { return UnregisterApplicationRestart$MH_; }

    static final FunctionDescriptor GetApplicationRecoveryCallback$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetApplicationRecoveryCallback$FUNC() { return GetApplicationRecoveryCallback$FUNC_; }

    static final MethodHandle GetApplicationRecoveryCallback$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetApplicationRecoveryCallback",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        GetApplicationRecoveryCallback$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetApplicationRecoveryCallback$MH() { return GetApplicationRecoveryCallback$MH_; }

    static final FunctionDescriptor GetApplicationRestartSettings$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetApplicationRestartSettings$FUNC() { return GetApplicationRestartSettings$FUNC_; }

    static final MethodHandle GetApplicationRestartSettings$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetApplicationRestartSettings",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        GetApplicationRestartSettings$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetApplicationRestartSettings$MH() { return GetApplicationRestartSettings$MH_; }

    static final FunctionDescriptor ApplicationRecoveryInProgress$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ApplicationRecoveryInProgress$FUNC() { return ApplicationRecoveryInProgress$FUNC_; }

    static final MethodHandle ApplicationRecoveryInProgress$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ApplicationRecoveryInProgress",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        ApplicationRecoveryInProgress$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ApplicationRecoveryInProgress$MH() { return ApplicationRecoveryInProgress$MH_; }

    static final FunctionDescriptor ApplicationRecoveryFinished$FUNC_ = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor ApplicationRecoveryFinished$FUNC() { return ApplicationRecoveryFinished$FUNC_; }

    static final MethodHandle ApplicationRecoveryFinished$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ApplicationRecoveryFinished",
        "(I)V",
        ApplicationRecoveryFinished$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ApplicationRecoveryFinished$MH() { return ApplicationRecoveryFinished$MH_; }

    static final MemoryLayout _FILE_BASIC_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("CreationTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("LastAccessTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("LastWriteTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("ChangeTime"),
        C_LONG.withName("FileAttributes"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("_FILE_BASIC_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_BASIC_INFO$struct$LAYOUT() { return _FILE_BASIC_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_BASIC_INFO$FileAttributes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_BASIC_INFO$FileAttributes$LAYOUT() { return _FILE_BASIC_INFO$FileAttributes$LAYOUT_; }

    static final VarHandle _FILE_BASIC_INFO$FileAttributes$VH_ = _FILE_BASIC_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FileAttributes"));
    static final java.lang.invoke.VarHandle _FILE_BASIC_INFO$FileAttributes$VH() { return _FILE_BASIC_INFO$FileAttributes$VH_; }

    static final MemoryLayout _FILE_STANDARD_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("AllocationSize"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("EndOfFile"),
        C_LONG.withName("NumberOfLinks"),
        C_CHAR.withName("DeletePending"),
        C_CHAR.withName("Directory"),
        MemoryLayout.ofPaddingBits(16)
    ).withName("_FILE_STANDARD_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_STANDARD_INFO$struct$LAYOUT() { return _FILE_STANDARD_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_STANDARD_INFO$NumberOfLinks$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_STANDARD_INFO$NumberOfLinks$LAYOUT() { return _FILE_STANDARD_INFO$NumberOfLinks$LAYOUT_; }

    static final VarHandle _FILE_STANDARD_INFO$NumberOfLinks$VH_ = _FILE_STANDARD_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumberOfLinks"));
    static final java.lang.invoke.VarHandle _FILE_STANDARD_INFO$NumberOfLinks$VH() { return _FILE_STANDARD_INFO$NumberOfLinks$VH_; }

    static final MemoryLayout _FILE_STANDARD_INFO$DeletePending$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _FILE_STANDARD_INFO$DeletePending$LAYOUT() { return _FILE_STANDARD_INFO$DeletePending$LAYOUT_; }

    static final VarHandle _FILE_STANDARD_INFO$DeletePending$VH_ = _FILE_STANDARD_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("DeletePending"));
    static final java.lang.invoke.VarHandle _FILE_STANDARD_INFO$DeletePending$VH() { return _FILE_STANDARD_INFO$DeletePending$VH_; }

    static final MemoryLayout _FILE_STANDARD_INFO$Directory$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _FILE_STANDARD_INFO$Directory$LAYOUT() { return _FILE_STANDARD_INFO$Directory$LAYOUT_; }

    static final VarHandle _FILE_STANDARD_INFO$Directory$VH_ = _FILE_STANDARD_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Directory"));
    static final java.lang.invoke.VarHandle _FILE_STANDARD_INFO$Directory$VH() { return _FILE_STANDARD_INFO$Directory$VH_; }

    static final MemoryLayout _FILE_NAME_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("FileNameLength"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("FileName"),
        MemoryLayout.ofPaddingBits(16)
    ).withName("_FILE_NAME_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_NAME_INFO$struct$LAYOUT() { return _FILE_NAME_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_NAME_INFO$FileNameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_NAME_INFO$FileNameLength$LAYOUT() { return _FILE_NAME_INFO$FileNameLength$LAYOUT_; }

    static final VarHandle _FILE_NAME_INFO$FileNameLength$VH_ = _FILE_NAME_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FileNameLength"));
    static final java.lang.invoke.VarHandle _FILE_NAME_INFO$FileNameLength$VH() { return _FILE_NAME_INFO$FileNameLength$VH_; }

    static final MemoryLayout _FILE_CASE_SENSITIVE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags")
    ).withName("_FILE_CASE_SENSITIVE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_CASE_SENSITIVE_INFO$struct$LAYOUT() { return _FILE_CASE_SENSITIVE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_CASE_SENSITIVE_INFO$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_CASE_SENSITIVE_INFO$Flags$LAYOUT() { return _FILE_CASE_SENSITIVE_INFO$Flags$LAYOUT_; }

    static final VarHandle _FILE_CASE_SENSITIVE_INFO$Flags$VH_ = _FILE_CASE_SENSITIVE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _FILE_CASE_SENSITIVE_INFO$Flags$VH() { return _FILE_CASE_SENSITIVE_INFO$Flags$VH_; }

    static final MemoryLayout _FILE_RENAME_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("ReplaceIfExists"),
        C_LONG.withName("Flags"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("RootDirectory"),
        C_LONG.withName("FileNameLength"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("FileName"),
        MemoryLayout.ofPaddingBits(16)
    ).withName("_FILE_RENAME_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_RENAME_INFO$struct$LAYOUT() { return _FILE_RENAME_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_RENAME_INFO$ReplaceIfExists$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _FILE_RENAME_INFO$ReplaceIfExists$LAYOUT() { return _FILE_RENAME_INFO$ReplaceIfExists$LAYOUT_; }

    static final VarHandle _FILE_RENAME_INFO$ReplaceIfExists$VH_ = _FILE_RENAME_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ReplaceIfExists"));
    static final java.lang.invoke.VarHandle _FILE_RENAME_INFO$ReplaceIfExists$VH() { return _FILE_RENAME_INFO$ReplaceIfExists$VH_; }

    static final MemoryLayout _FILE_RENAME_INFO$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_RENAME_INFO$Flags$LAYOUT() { return _FILE_RENAME_INFO$Flags$LAYOUT_; }

    static final VarHandle _FILE_RENAME_INFO$Flags$VH_ = _FILE_RENAME_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _FILE_RENAME_INFO$Flags$VH() { return _FILE_RENAME_INFO$Flags$VH_; }

    static final MemoryLayout _FILE_RENAME_INFO$RootDirectory$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout _FILE_RENAME_INFO$RootDirectory$LAYOUT() { return _FILE_RENAME_INFO$RootDirectory$LAYOUT_; }

    static final VarHandle _FILE_RENAME_INFO$RootDirectory$VH_ = MemoryHandles.asAddressVarHandle(_FILE_RENAME_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("RootDirectory")));
    static final java.lang.invoke.VarHandle _FILE_RENAME_INFO$RootDirectory$VH() { return _FILE_RENAME_INFO$RootDirectory$VH_; }

    static final MemoryLayout _FILE_RENAME_INFO$FileNameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_RENAME_INFO$FileNameLength$LAYOUT() { return _FILE_RENAME_INFO$FileNameLength$LAYOUT_; }

    static final VarHandle _FILE_RENAME_INFO$FileNameLength$VH_ = _FILE_RENAME_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FileNameLength"));
    static final java.lang.invoke.VarHandle _FILE_RENAME_INFO$FileNameLength$VH() { return _FILE_RENAME_INFO$FileNameLength$VH_; }

    static final MemoryLayout _FILE_ALLOCATION_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("AllocationSize")
    ).withName("_FILE_ALLOCATION_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_ALLOCATION_INFO$struct$LAYOUT() { return _FILE_ALLOCATION_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_END_OF_FILE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("EndOfFile")
    ).withName("_FILE_END_OF_FILE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_END_OF_FILE_INFO$struct$LAYOUT() { return _FILE_END_OF_FILE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_STREAM_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("NextEntryOffset"),
        C_LONG.withName("StreamNameLength"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("StreamSize"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("StreamAllocationSize"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("StreamName"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("_FILE_STREAM_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_STREAM_INFO$struct$LAYOUT() { return _FILE_STREAM_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_STREAM_INFO$NextEntryOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_STREAM_INFO$NextEntryOffset$LAYOUT() { return _FILE_STREAM_INFO$NextEntryOffset$LAYOUT_; }

    static final VarHandle _FILE_STREAM_INFO$NextEntryOffset$VH_ = _FILE_STREAM_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NextEntryOffset"));
    static final java.lang.invoke.VarHandle _FILE_STREAM_INFO$NextEntryOffset$VH() { return _FILE_STREAM_INFO$NextEntryOffset$VH_; }

    static final MemoryLayout _FILE_STREAM_INFO$StreamNameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_STREAM_INFO$StreamNameLength$LAYOUT() { return _FILE_STREAM_INFO$StreamNameLength$LAYOUT_; }

    static final VarHandle _FILE_STREAM_INFO$StreamNameLength$VH_ = _FILE_STREAM_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("StreamNameLength"));
    static final java.lang.invoke.VarHandle _FILE_STREAM_INFO$StreamNameLength$VH() { return _FILE_STREAM_INFO$StreamNameLength$VH_; }

    static final MemoryLayout _FILE_COMPRESSION_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("CompressedFileSize"),
        C_SHORT.withName("CompressionFormat"),
        C_CHAR.withName("CompressionUnitShift"),
        C_CHAR.withName("ChunkShift"),
        C_CHAR.withName("ClusterShift"),
        MemoryLayout.ofSequence(3, C_CHAR).withName("Reserved")
    ).withName("_FILE_COMPRESSION_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_COMPRESSION_INFO$struct$LAYOUT() { return _FILE_COMPRESSION_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_COMPRESSION_INFO$CompressionFormat$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _FILE_COMPRESSION_INFO$CompressionFormat$LAYOUT() { return _FILE_COMPRESSION_INFO$CompressionFormat$LAYOUT_; }

    static final VarHandle _FILE_COMPRESSION_INFO$CompressionFormat$VH_ = _FILE_COMPRESSION_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("CompressionFormat"));
    static final java.lang.invoke.VarHandle _FILE_COMPRESSION_INFO$CompressionFormat$VH() { return _FILE_COMPRESSION_INFO$CompressionFormat$VH_; }

    static final MemoryLayout _FILE_COMPRESSION_INFO$CompressionUnitShift$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _FILE_COMPRESSION_INFO$CompressionUnitShift$LAYOUT() { return _FILE_COMPRESSION_INFO$CompressionUnitShift$LAYOUT_; }

    static final VarHandle _FILE_COMPRESSION_INFO$CompressionUnitShift$VH_ = _FILE_COMPRESSION_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("CompressionUnitShift"));
    static final java.lang.invoke.VarHandle _FILE_COMPRESSION_INFO$CompressionUnitShift$VH() { return _FILE_COMPRESSION_INFO$CompressionUnitShift$VH_; }

    static final MemoryLayout _FILE_COMPRESSION_INFO$ChunkShift$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _FILE_COMPRESSION_INFO$ChunkShift$LAYOUT() { return _FILE_COMPRESSION_INFO$ChunkShift$LAYOUT_; }

    static final VarHandle _FILE_COMPRESSION_INFO$ChunkShift$VH_ = _FILE_COMPRESSION_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ChunkShift"));
    static final java.lang.invoke.VarHandle _FILE_COMPRESSION_INFO$ChunkShift$VH() { return _FILE_COMPRESSION_INFO$ChunkShift$VH_; }

    static final MemoryLayout _FILE_COMPRESSION_INFO$ClusterShift$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _FILE_COMPRESSION_INFO$ClusterShift$LAYOUT() { return _FILE_COMPRESSION_INFO$ClusterShift$LAYOUT_; }

    static final VarHandle _FILE_COMPRESSION_INFO$ClusterShift$VH_ = _FILE_COMPRESSION_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ClusterShift"));
    static final java.lang.invoke.VarHandle _FILE_COMPRESSION_INFO$ClusterShift$VH() { return _FILE_COMPRESSION_INFO$ClusterShift$VH_; }

    static final MemoryLayout _FILE_ATTRIBUTE_TAG_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("FileAttributes"),
        C_LONG.withName("ReparseTag")
    ).withName("_FILE_ATTRIBUTE_TAG_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_ATTRIBUTE_TAG_INFO$struct$LAYOUT() { return _FILE_ATTRIBUTE_TAG_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_ATTRIBUTE_TAG_INFO$FileAttributes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_ATTRIBUTE_TAG_INFO$FileAttributes$LAYOUT() { return _FILE_ATTRIBUTE_TAG_INFO$FileAttributes$LAYOUT_; }

    static final VarHandle _FILE_ATTRIBUTE_TAG_INFO$FileAttributes$VH_ = _FILE_ATTRIBUTE_TAG_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FileAttributes"));
    static final java.lang.invoke.VarHandle _FILE_ATTRIBUTE_TAG_INFO$FileAttributes$VH() { return _FILE_ATTRIBUTE_TAG_INFO$FileAttributes$VH_; }

    static final MemoryLayout _FILE_ATTRIBUTE_TAG_INFO$ReparseTag$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_ATTRIBUTE_TAG_INFO$ReparseTag$LAYOUT() { return _FILE_ATTRIBUTE_TAG_INFO$ReparseTag$LAYOUT_; }

    static final VarHandle _FILE_ATTRIBUTE_TAG_INFO$ReparseTag$VH_ = _FILE_ATTRIBUTE_TAG_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ReparseTag"));
    static final java.lang.invoke.VarHandle _FILE_ATTRIBUTE_TAG_INFO$ReparseTag$VH() { return _FILE_ATTRIBUTE_TAG_INFO$ReparseTag$VH_; }

    static final MemoryLayout _FILE_DISPOSITION_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_CHAR.withName("DeleteFileA")
    ).withName("_FILE_DISPOSITION_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_DISPOSITION_INFO$struct$LAYOUT() { return _FILE_DISPOSITION_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_DISPOSITION_INFO$DeleteFileA$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _FILE_DISPOSITION_INFO$DeleteFileA$LAYOUT() { return _FILE_DISPOSITION_INFO$DeleteFileA$LAYOUT_; }

    static final VarHandle _FILE_DISPOSITION_INFO$DeleteFileA$VH_ = _FILE_DISPOSITION_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("DeleteFileA"));
    static final java.lang.invoke.VarHandle _FILE_DISPOSITION_INFO$DeleteFileA$VH() { return _FILE_DISPOSITION_INFO$DeleteFileA$VH_; }

    static final MemoryLayout _FILE_DISPOSITION_INFO_EX$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Flags")
    ).withName("_FILE_DISPOSITION_INFO_EX");
    static final jdk.incubator.foreign.MemoryLayout _FILE_DISPOSITION_INFO_EX$struct$LAYOUT() { return _FILE_DISPOSITION_INFO_EX$struct$LAYOUT_; }

    static final MemoryLayout _FILE_DISPOSITION_INFO_EX$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_DISPOSITION_INFO_EX$Flags$LAYOUT() { return _FILE_DISPOSITION_INFO_EX$Flags$LAYOUT_; }

    static final VarHandle _FILE_DISPOSITION_INFO_EX$Flags$VH_ = _FILE_DISPOSITION_INFO_EX$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _FILE_DISPOSITION_INFO_EX$Flags$VH() { return _FILE_DISPOSITION_INFO_EX$Flags$VH_; }

    static final MemoryLayout _FILE_ID_BOTH_DIR_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("NextEntryOffset"),
        C_LONG.withName("FileIndex"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("CreationTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("LastAccessTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("LastWriteTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("ChangeTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("EndOfFile"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("AllocationSize"),
        C_LONG.withName("FileAttributes"),
        C_LONG.withName("FileNameLength"),
        C_LONG.withName("EaSize"),
        C_CHAR.withName("ShortNameLength"),
        MemoryLayout.ofPaddingBits(8),
        MemoryLayout.ofSequence(12, C_SHORT).withName("ShortName"),
        MemoryLayout.ofPaddingBits(16),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("FileId"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("FileName"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("_FILE_ID_BOTH_DIR_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_ID_BOTH_DIR_INFO$struct$LAYOUT() { return _FILE_ID_BOTH_DIR_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_ID_BOTH_DIR_INFO$NextEntryOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_ID_BOTH_DIR_INFO$NextEntryOffset$LAYOUT() { return _FILE_ID_BOTH_DIR_INFO$NextEntryOffset$LAYOUT_; }

    static final VarHandle _FILE_ID_BOTH_DIR_INFO$NextEntryOffset$VH_ = _FILE_ID_BOTH_DIR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NextEntryOffset"));
    static final java.lang.invoke.VarHandle _FILE_ID_BOTH_DIR_INFO$NextEntryOffset$VH() { return _FILE_ID_BOTH_DIR_INFO$NextEntryOffset$VH_; }

    static final MemoryLayout _FILE_ID_BOTH_DIR_INFO$FileIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_ID_BOTH_DIR_INFO$FileIndex$LAYOUT() { return _FILE_ID_BOTH_DIR_INFO$FileIndex$LAYOUT_; }

    static final VarHandle _FILE_ID_BOTH_DIR_INFO$FileIndex$VH_ = _FILE_ID_BOTH_DIR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FileIndex"));
    static final java.lang.invoke.VarHandle _FILE_ID_BOTH_DIR_INFO$FileIndex$VH() { return _FILE_ID_BOTH_DIR_INFO$FileIndex$VH_; }

    static final MemoryLayout _FILE_ID_BOTH_DIR_INFO$FileAttributes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_ID_BOTH_DIR_INFO$FileAttributes$LAYOUT() { return _FILE_ID_BOTH_DIR_INFO$FileAttributes$LAYOUT_; }

    static final VarHandle _FILE_ID_BOTH_DIR_INFO$FileAttributes$VH_ = _FILE_ID_BOTH_DIR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FileAttributes"));
    static final java.lang.invoke.VarHandle _FILE_ID_BOTH_DIR_INFO$FileAttributes$VH() { return _FILE_ID_BOTH_DIR_INFO$FileAttributes$VH_; }

    static final MemoryLayout _FILE_ID_BOTH_DIR_INFO$FileNameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_ID_BOTH_DIR_INFO$FileNameLength$LAYOUT() { return _FILE_ID_BOTH_DIR_INFO$FileNameLength$LAYOUT_; }

    static final VarHandle _FILE_ID_BOTH_DIR_INFO$FileNameLength$VH_ = _FILE_ID_BOTH_DIR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FileNameLength"));
    static final java.lang.invoke.VarHandle _FILE_ID_BOTH_DIR_INFO$FileNameLength$VH() { return _FILE_ID_BOTH_DIR_INFO$FileNameLength$VH_; }

    static final MemoryLayout _FILE_ID_BOTH_DIR_INFO$EaSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_ID_BOTH_DIR_INFO$EaSize$LAYOUT() { return _FILE_ID_BOTH_DIR_INFO$EaSize$LAYOUT_; }

    static final VarHandle _FILE_ID_BOTH_DIR_INFO$EaSize$VH_ = _FILE_ID_BOTH_DIR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EaSize"));
    static final java.lang.invoke.VarHandle _FILE_ID_BOTH_DIR_INFO$EaSize$VH() { return _FILE_ID_BOTH_DIR_INFO$EaSize$VH_; }

    static final MemoryLayout _FILE_ID_BOTH_DIR_INFO$ShortNameLength$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout _FILE_ID_BOTH_DIR_INFO$ShortNameLength$LAYOUT() { return _FILE_ID_BOTH_DIR_INFO$ShortNameLength$LAYOUT_; }

    static final VarHandle _FILE_ID_BOTH_DIR_INFO$ShortNameLength$VH_ = _FILE_ID_BOTH_DIR_INFO$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ShortNameLength"));
    static final java.lang.invoke.VarHandle _FILE_ID_BOTH_DIR_INFO$ShortNameLength$VH() { return _FILE_ID_BOTH_DIR_INFO$ShortNameLength$VH_; }

    static final MemoryLayout _FILE_FULL_DIR_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("NextEntryOffset"),
        C_LONG.withName("FileIndex"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("CreationTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("LastAccessTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("LastWriteTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("ChangeTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("EndOfFile"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("AllocationSize"),
        C_LONG.withName("FileAttributes"),
        C_LONG.withName("FileNameLength"),
        C_LONG.withName("EaSize"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("FileName"),
        MemoryLayout.ofPaddingBits(16)
    ).withName("_FILE_FULL_DIR_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_FULL_DIR_INFO$struct$LAYOUT() { return _FILE_FULL_DIR_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_FULL_DIR_INFO$NextEntryOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_FULL_DIR_INFO$NextEntryOffset$LAYOUT() { return _FILE_FULL_DIR_INFO$NextEntryOffset$LAYOUT_; }

    static final VarHandle _FILE_FULL_DIR_INFO$NextEntryOffset$VH_ = _FILE_FULL_DIR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NextEntryOffset"));
    static final java.lang.invoke.VarHandle _FILE_FULL_DIR_INFO$NextEntryOffset$VH() { return _FILE_FULL_DIR_INFO$NextEntryOffset$VH_; }

    static final MemoryLayout _FILE_FULL_DIR_INFO$FileIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_FULL_DIR_INFO$FileIndex$LAYOUT() { return _FILE_FULL_DIR_INFO$FileIndex$LAYOUT_; }

    static final VarHandle _FILE_FULL_DIR_INFO$FileIndex$VH_ = _FILE_FULL_DIR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FileIndex"));
    static final java.lang.invoke.VarHandle _FILE_FULL_DIR_INFO$FileIndex$VH() { return _FILE_FULL_DIR_INFO$FileIndex$VH_; }

    static final MemoryLayout _FILE_FULL_DIR_INFO$FileAttributes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_FULL_DIR_INFO$FileAttributes$LAYOUT() { return _FILE_FULL_DIR_INFO$FileAttributes$LAYOUT_; }

    static final VarHandle _FILE_FULL_DIR_INFO$FileAttributes$VH_ = _FILE_FULL_DIR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FileAttributes"));
    static final java.lang.invoke.VarHandle _FILE_FULL_DIR_INFO$FileAttributes$VH() { return _FILE_FULL_DIR_INFO$FileAttributes$VH_; }

    static final MemoryLayout _FILE_FULL_DIR_INFO$FileNameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_FULL_DIR_INFO$FileNameLength$LAYOUT() { return _FILE_FULL_DIR_INFO$FileNameLength$LAYOUT_; }

    static final VarHandle _FILE_FULL_DIR_INFO$FileNameLength$VH_ = _FILE_FULL_DIR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FileNameLength"));
    static final java.lang.invoke.VarHandle _FILE_FULL_DIR_INFO$FileNameLength$VH() { return _FILE_FULL_DIR_INFO$FileNameLength$VH_; }

    static final MemoryLayout _FILE_FULL_DIR_INFO$EaSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_FULL_DIR_INFO$EaSize$LAYOUT() { return _FILE_FULL_DIR_INFO$EaSize$LAYOUT_; }

    static final VarHandle _FILE_FULL_DIR_INFO$EaSize$VH_ = _FILE_FULL_DIR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EaSize"));
    static final java.lang.invoke.VarHandle _FILE_FULL_DIR_INFO$EaSize$VH() { return _FILE_FULL_DIR_INFO$EaSize$VH_; }

    static final int IoPriorityHintVeryLow() { return (int)0L; }

    static final int IoPriorityHintLow() { return (int)1L; }

    static final int IoPriorityHintNormal() { return (int)2L; }

    static final int MaximumIoPriorityHintType() { return (int)3L; }

    static final MemoryLayout _FILE_IO_PRIORITY_HINT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("PriorityHint")
    ).withName("_FILE_IO_PRIORITY_HINT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_IO_PRIORITY_HINT_INFO$struct$LAYOUT() { return _FILE_IO_PRIORITY_HINT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_IO_PRIORITY_HINT_INFO$PriorityHint$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout _FILE_IO_PRIORITY_HINT_INFO$PriorityHint$LAYOUT() { return _FILE_IO_PRIORITY_HINT_INFO$PriorityHint$LAYOUT_; }

    static final VarHandle _FILE_IO_PRIORITY_HINT_INFO$PriorityHint$VH_ = _FILE_IO_PRIORITY_HINT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PriorityHint"));
    static final java.lang.invoke.VarHandle _FILE_IO_PRIORITY_HINT_INFO$PriorityHint$VH() { return _FILE_IO_PRIORITY_HINT_INFO$PriorityHint$VH_; }

    static final MemoryLayout _FILE_ALIGNMENT_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("AlignmentRequirement")
    ).withName("_FILE_ALIGNMENT_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_ALIGNMENT_INFO$struct$LAYOUT() { return _FILE_ALIGNMENT_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_ALIGNMENT_INFO$AlignmentRequirement$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_ALIGNMENT_INFO$AlignmentRequirement$LAYOUT() { return _FILE_ALIGNMENT_INFO$AlignmentRequirement$LAYOUT_; }

    static final VarHandle _FILE_ALIGNMENT_INFO$AlignmentRequirement$VH_ = _FILE_ALIGNMENT_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AlignmentRequirement"));
    static final java.lang.invoke.VarHandle _FILE_ALIGNMENT_INFO$AlignmentRequirement$VH() { return _FILE_ALIGNMENT_INFO$AlignmentRequirement$VH_; }

    static final MemoryLayout _FILE_STORAGE_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("LogicalBytesPerSector"),
        C_LONG.withName("PhysicalBytesPerSectorForAtomicity"),
        C_LONG.withName("PhysicalBytesPerSectorForPerformance"),
        C_LONG.withName("FileSystemEffectivePhysicalBytesPerSectorForAtomicity"),
        C_LONG.withName("Flags"),
        C_LONG.withName("ByteOffsetForSectorAlignment"),
        C_LONG.withName("ByteOffsetForPartitionAlignment")
    ).withName("_FILE_STORAGE_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_STORAGE_INFO$struct$LAYOUT() { return _FILE_STORAGE_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_STORAGE_INFO$LogicalBytesPerSector$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_STORAGE_INFO$LogicalBytesPerSector$LAYOUT() { return _FILE_STORAGE_INFO$LogicalBytesPerSector$LAYOUT_; }

    static final VarHandle _FILE_STORAGE_INFO$LogicalBytesPerSector$VH_ = _FILE_STORAGE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LogicalBytesPerSector"));
    static final java.lang.invoke.VarHandle _FILE_STORAGE_INFO$LogicalBytesPerSector$VH() { return _FILE_STORAGE_INFO$LogicalBytesPerSector$VH_; }

    static final MemoryLayout _FILE_STORAGE_INFO$PhysicalBytesPerSectorForAtomicity$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_STORAGE_INFO$PhysicalBytesPerSectorForAtomicity$LAYOUT() { return _FILE_STORAGE_INFO$PhysicalBytesPerSectorForAtomicity$LAYOUT_; }

    static final VarHandle _FILE_STORAGE_INFO$PhysicalBytesPerSectorForAtomicity$VH_ = _FILE_STORAGE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PhysicalBytesPerSectorForAtomicity"));
    static final java.lang.invoke.VarHandle _FILE_STORAGE_INFO$PhysicalBytesPerSectorForAtomicity$VH() { return _FILE_STORAGE_INFO$PhysicalBytesPerSectorForAtomicity$VH_; }

    static final MemoryLayout _FILE_STORAGE_INFO$PhysicalBytesPerSectorForPerformance$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_STORAGE_INFO$PhysicalBytesPerSectorForPerformance$LAYOUT() { return _FILE_STORAGE_INFO$PhysicalBytesPerSectorForPerformance$LAYOUT_; }

    static final VarHandle _FILE_STORAGE_INFO$PhysicalBytesPerSectorForPerformance$VH_ = _FILE_STORAGE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PhysicalBytesPerSectorForPerformance"));
    static final java.lang.invoke.VarHandle _FILE_STORAGE_INFO$PhysicalBytesPerSectorForPerformance$VH() { return _FILE_STORAGE_INFO$PhysicalBytesPerSectorForPerformance$VH_; }

    static final MemoryLayout _FILE_STORAGE_INFO$FileSystemEffectivePhysicalBytesPerSectorForAtomicity$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_STORAGE_INFO$FileSystemEffectivePhysicalBytesPerSectorForAtomicity$LAYOUT() { return _FILE_STORAGE_INFO$FileSystemEffectivePhysicalBytesPerSectorForAtomicity$LAYOUT_; }

    static final VarHandle _FILE_STORAGE_INFO$FileSystemEffectivePhysicalBytesPerSectorForAtomicity$VH_ = _FILE_STORAGE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FileSystemEffectivePhysicalBytesPerSectorForAtomicity"));
    static final java.lang.invoke.VarHandle _FILE_STORAGE_INFO$FileSystemEffectivePhysicalBytesPerSectorForAtomicity$VH() { return _FILE_STORAGE_INFO$FileSystemEffectivePhysicalBytesPerSectorForAtomicity$VH_; }

    static final MemoryLayout _FILE_STORAGE_INFO$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_STORAGE_INFO$Flags$LAYOUT() { return _FILE_STORAGE_INFO$Flags$LAYOUT_; }

    static final VarHandle _FILE_STORAGE_INFO$Flags$VH_ = _FILE_STORAGE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _FILE_STORAGE_INFO$Flags$VH() { return _FILE_STORAGE_INFO$Flags$VH_; }

    static final MemoryLayout _FILE_STORAGE_INFO$ByteOffsetForSectorAlignment$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_STORAGE_INFO$ByteOffsetForSectorAlignment$LAYOUT() { return _FILE_STORAGE_INFO$ByteOffsetForSectorAlignment$LAYOUT_; }

    static final VarHandle _FILE_STORAGE_INFO$ByteOffsetForSectorAlignment$VH_ = _FILE_STORAGE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ByteOffsetForSectorAlignment"));
    static final java.lang.invoke.VarHandle _FILE_STORAGE_INFO$ByteOffsetForSectorAlignment$VH() { return _FILE_STORAGE_INFO$ByteOffsetForSectorAlignment$VH_; }

    static final MemoryLayout _FILE_STORAGE_INFO$ByteOffsetForPartitionAlignment$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_STORAGE_INFO$ByteOffsetForPartitionAlignment$LAYOUT() { return _FILE_STORAGE_INFO$ByteOffsetForPartitionAlignment$LAYOUT_; }

    static final VarHandle _FILE_STORAGE_INFO$ByteOffsetForPartitionAlignment$VH_ = _FILE_STORAGE_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ByteOffsetForPartitionAlignment"));
    static final java.lang.invoke.VarHandle _FILE_STORAGE_INFO$ByteOffsetForPartitionAlignment$VH() { return _FILE_STORAGE_INFO$ByteOffsetForPartitionAlignment$VH_; }

    static final MemoryLayout _FILE_ID_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONGLONG.withName("VolumeSerialNumber"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("Identifier")
        ).withName("FileId")
    ).withName("_FILE_ID_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_ID_INFO$struct$LAYOUT() { return _FILE_ID_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_ID_INFO$VolumeSerialNumber$LAYOUT_ = C_LONGLONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_ID_INFO$VolumeSerialNumber$LAYOUT() { return _FILE_ID_INFO$VolumeSerialNumber$LAYOUT_; }

    static final VarHandle _FILE_ID_INFO$VolumeSerialNumber$VH_ = _FILE_ID_INFO$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("VolumeSerialNumber"));
    static final java.lang.invoke.VarHandle _FILE_ID_INFO$VolumeSerialNumber$VH() { return _FILE_ID_INFO$VolumeSerialNumber$VH_; }

    static final MemoryLayout _FILE_ID_EXTD_DIR_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("NextEntryOffset"),
        C_LONG.withName("FileIndex"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("CreationTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("LastAccessTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("LastWriteTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("ChangeTime"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("EndOfFile"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("AllocationSize"),
        C_LONG.withName("FileAttributes"),
        C_LONG.withName("FileNameLength"),
        C_LONG.withName("EaSize"),
        C_LONG.withName("ReparsePointTag"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("Identifier")
        ).withName("FileId"),
        MemoryLayout.ofSequence(1, C_SHORT).withName("FileName"),
        MemoryLayout.ofPaddingBits(48)
    ).withName("_FILE_ID_EXTD_DIR_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_ID_EXTD_DIR_INFO$struct$LAYOUT() { return _FILE_ID_EXTD_DIR_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_ID_EXTD_DIR_INFO$NextEntryOffset$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_ID_EXTD_DIR_INFO$NextEntryOffset$LAYOUT() { return _FILE_ID_EXTD_DIR_INFO$NextEntryOffset$LAYOUT_; }

    static final VarHandle _FILE_ID_EXTD_DIR_INFO$NextEntryOffset$VH_ = _FILE_ID_EXTD_DIR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NextEntryOffset"));
    static final java.lang.invoke.VarHandle _FILE_ID_EXTD_DIR_INFO$NextEntryOffset$VH() { return _FILE_ID_EXTD_DIR_INFO$NextEntryOffset$VH_; }

    static final MemoryLayout _FILE_ID_EXTD_DIR_INFO$FileIndex$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_ID_EXTD_DIR_INFO$FileIndex$LAYOUT() { return _FILE_ID_EXTD_DIR_INFO$FileIndex$LAYOUT_; }

    static final VarHandle _FILE_ID_EXTD_DIR_INFO$FileIndex$VH_ = _FILE_ID_EXTD_DIR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FileIndex"));
    static final java.lang.invoke.VarHandle _FILE_ID_EXTD_DIR_INFO$FileIndex$VH() { return _FILE_ID_EXTD_DIR_INFO$FileIndex$VH_; }

    static final MemoryLayout _FILE_ID_EXTD_DIR_INFO$FileAttributes$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_ID_EXTD_DIR_INFO$FileAttributes$LAYOUT() { return _FILE_ID_EXTD_DIR_INFO$FileAttributes$LAYOUT_; }

    static final VarHandle _FILE_ID_EXTD_DIR_INFO$FileAttributes$VH_ = _FILE_ID_EXTD_DIR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FileAttributes"));
    static final java.lang.invoke.VarHandle _FILE_ID_EXTD_DIR_INFO$FileAttributes$VH() { return _FILE_ID_EXTD_DIR_INFO$FileAttributes$VH_; }

    static final MemoryLayout _FILE_ID_EXTD_DIR_INFO$FileNameLength$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_ID_EXTD_DIR_INFO$FileNameLength$LAYOUT() { return _FILE_ID_EXTD_DIR_INFO$FileNameLength$LAYOUT_; }

    static final VarHandle _FILE_ID_EXTD_DIR_INFO$FileNameLength$VH_ = _FILE_ID_EXTD_DIR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FileNameLength"));
    static final java.lang.invoke.VarHandle _FILE_ID_EXTD_DIR_INFO$FileNameLength$VH() { return _FILE_ID_EXTD_DIR_INFO$FileNameLength$VH_; }

    static final MemoryLayout _FILE_ID_EXTD_DIR_INFO$EaSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_ID_EXTD_DIR_INFO$EaSize$LAYOUT() { return _FILE_ID_EXTD_DIR_INFO$EaSize$LAYOUT_; }

    static final VarHandle _FILE_ID_EXTD_DIR_INFO$EaSize$VH_ = _FILE_ID_EXTD_DIR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("EaSize"));
    static final java.lang.invoke.VarHandle _FILE_ID_EXTD_DIR_INFO$EaSize$VH() { return _FILE_ID_EXTD_DIR_INFO$EaSize$VH_; }

    static final MemoryLayout _FILE_ID_EXTD_DIR_INFO$ReparsePointTag$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_ID_EXTD_DIR_INFO$ReparsePointTag$LAYOUT() { return _FILE_ID_EXTD_DIR_INFO$ReparsePointTag$LAYOUT_; }

    static final VarHandle _FILE_ID_EXTD_DIR_INFO$ReparsePointTag$VH_ = _FILE_ID_EXTD_DIR_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ReparsePointTag"));
    static final java.lang.invoke.VarHandle _FILE_ID_EXTD_DIR_INFO$ReparsePointTag$VH() { return _FILE_ID_EXTD_DIR_INFO$ReparsePointTag$VH_; }

    static final MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("StructureVersion"),
        C_SHORT.withName("StructureSize"),
        C_LONG.withName("Protocol"),
        C_SHORT.withName("ProtocolMajorVersion"),
        C_SHORT.withName("ProtocolMinorVersion"),
        C_SHORT.withName("ProtocolRevision"),
        C_SHORT.withName("Reserved"),
        C_LONG.withName("Flags"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_LONG).withName("Reserved")
        ).withName("GenericReserved"),
        MemoryLayout.ofUnion(
            MemoryLayout.ofStruct(
                MemoryLayout.ofStruct(
                    C_LONG.withName("Capabilities")
                ).withName("Server"),
                MemoryLayout.ofStruct(
                    C_LONG.withName("Capabilities"),
                    C_LONG.withName("CachingFlags")
                ).withName("Share")
            ).withName("Smb2"),
            MemoryLayout.ofSequence(16, C_LONG).withName("Reserved")
        ).withName("ProtocolSpecific")
    ).withName("_FILE_REMOTE_PROTOCOL_INFO");
    static final jdk.incubator.foreign.MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$struct$LAYOUT() { return _FILE_REMOTE_PROTOCOL_INFO$struct$LAYOUT_; }

    static final MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$StructureVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$StructureVersion$LAYOUT() { return _FILE_REMOTE_PROTOCOL_INFO$StructureVersion$LAYOUT_; }

    static final VarHandle _FILE_REMOTE_PROTOCOL_INFO$StructureVersion$VH_ = _FILE_REMOTE_PROTOCOL_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("StructureVersion"));
    static final java.lang.invoke.VarHandle _FILE_REMOTE_PROTOCOL_INFO$StructureVersion$VH() { return _FILE_REMOTE_PROTOCOL_INFO$StructureVersion$VH_; }

    static final MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$StructureSize$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$StructureSize$LAYOUT() { return _FILE_REMOTE_PROTOCOL_INFO$StructureSize$LAYOUT_; }

    static final VarHandle _FILE_REMOTE_PROTOCOL_INFO$StructureSize$VH_ = _FILE_REMOTE_PROTOCOL_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("StructureSize"));
    static final java.lang.invoke.VarHandle _FILE_REMOTE_PROTOCOL_INFO$StructureSize$VH() { return _FILE_REMOTE_PROTOCOL_INFO$StructureSize$VH_; }

    static final MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$Protocol$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$Protocol$LAYOUT() { return _FILE_REMOTE_PROTOCOL_INFO$Protocol$LAYOUT_; }

    static final VarHandle _FILE_REMOTE_PROTOCOL_INFO$Protocol$VH_ = _FILE_REMOTE_PROTOCOL_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Protocol"));
    static final java.lang.invoke.VarHandle _FILE_REMOTE_PROTOCOL_INFO$Protocol$VH() { return _FILE_REMOTE_PROTOCOL_INFO$Protocol$VH_; }

    static final MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolMajorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolMajorVersion$LAYOUT() { return _FILE_REMOTE_PROTOCOL_INFO$ProtocolMajorVersion$LAYOUT_; }

    static final VarHandle _FILE_REMOTE_PROTOCOL_INFO$ProtocolMajorVersion$VH_ = _FILE_REMOTE_PROTOCOL_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ProtocolMajorVersion"));
    static final java.lang.invoke.VarHandle _FILE_REMOTE_PROTOCOL_INFO$ProtocolMajorVersion$VH() { return _FILE_REMOTE_PROTOCOL_INFO$ProtocolMajorVersion$VH_; }

    static final MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolMinorVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolMinorVersion$LAYOUT() { return _FILE_REMOTE_PROTOCOL_INFO$ProtocolMinorVersion$LAYOUT_; }

    static final VarHandle _FILE_REMOTE_PROTOCOL_INFO$ProtocolMinorVersion$VH_ = _FILE_REMOTE_PROTOCOL_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ProtocolMinorVersion"));
    static final java.lang.invoke.VarHandle _FILE_REMOTE_PROTOCOL_INFO$ProtocolMinorVersion$VH() { return _FILE_REMOTE_PROTOCOL_INFO$ProtocolMinorVersion$VH_; }

    static final MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolRevision$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolRevision$LAYOUT() { return _FILE_REMOTE_PROTOCOL_INFO$ProtocolRevision$LAYOUT_; }

    static final VarHandle _FILE_REMOTE_PROTOCOL_INFO$ProtocolRevision$VH_ = _FILE_REMOTE_PROTOCOL_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ProtocolRevision"));
    static final java.lang.invoke.VarHandle _FILE_REMOTE_PROTOCOL_INFO$ProtocolRevision$VH() { return _FILE_REMOTE_PROTOCOL_INFO$ProtocolRevision$VH_; }

    static final MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$Reserved$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$Reserved$LAYOUT() { return _FILE_REMOTE_PROTOCOL_INFO$Reserved$LAYOUT_; }

    static final VarHandle _FILE_REMOTE_PROTOCOL_INFO$Reserved$VH_ = _FILE_REMOTE_PROTOCOL_INFO$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Reserved"));
    static final java.lang.invoke.VarHandle _FILE_REMOTE_PROTOCOL_INFO$Reserved$VH() { return _FILE_REMOTE_PROTOCOL_INFO$Reserved$VH_; }

    static final MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$Flags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$Flags$LAYOUT() { return _FILE_REMOTE_PROTOCOL_INFO$Flags$LAYOUT_; }

    static final VarHandle _FILE_REMOTE_PROTOCOL_INFO$Flags$VH_ = _FILE_REMOTE_PROTOCOL_INFO$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Flags"));
    static final java.lang.invoke.VarHandle _FILE_REMOTE_PROTOCOL_INFO$Flags$VH() { return _FILE_REMOTE_PROTOCOL_INFO$Flags$VH_; }

    static final MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$GenericReserved$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(8, C_LONG).withName("Reserved")
    );
    static final jdk.incubator.foreign.MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$GenericReserved$struct$LAYOUT() { return _FILE_REMOTE_PROTOCOL_INFO$GenericReserved$struct$LAYOUT_; }

    static final MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$union$LAYOUT_ = MemoryLayout.ofUnion(
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG.withName("Capabilities")
            ).withName("Server"),
            MemoryLayout.ofStruct(
                C_LONG.withName("Capabilities"),
                C_LONG.withName("CachingFlags")
            ).withName("Share")
        ).withName("Smb2"),
        MemoryLayout.ofSequence(16, C_LONG).withName("Reserved")
    );
    static final jdk.incubator.foreign.MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$union$LAYOUT() { return _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$union$LAYOUT_; }

    static final MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG.withName("Capabilities")
        ).withName("Server"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Capabilities"),
            C_LONG.withName("CachingFlags")
        ).withName("Share")
    );
    static final jdk.incubator.foreign.MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$struct$LAYOUT() { return _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$struct$LAYOUT_; }

    static final MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Server$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Capabilities")
    );
    static final jdk.incubator.foreign.MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Server$struct$LAYOUT() { return _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Server$struct$LAYOUT_; }

    static final MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Server$Capabilities$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Server$Capabilities$LAYOUT() { return _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Server$Capabilities$LAYOUT_; }

    static final VarHandle _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Server$Capabilities$VH_ = _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Server$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Capabilities"));
    static final java.lang.invoke.VarHandle _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Server$Capabilities$VH() { return _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Server$Capabilities$VH_; }

    static final MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Share$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("Capabilities"),
        C_LONG.withName("CachingFlags")
    );
    static final jdk.incubator.foreign.MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Share$struct$LAYOUT() { return _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Share$struct$LAYOUT_; }

    static final MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Share$Capabilities$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Share$Capabilities$LAYOUT() { return _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Share$Capabilities$LAYOUT_; }

    static final VarHandle _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Share$Capabilities$VH_ = _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Share$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Capabilities"));
    static final java.lang.invoke.VarHandle _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Share$Capabilities$VH() { return _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Share$Capabilities$VH_; }

    static final MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Share$CachingFlags$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Share$CachingFlags$LAYOUT() { return _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Share$CachingFlags$LAYOUT_; }

    static final VarHandle _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Share$CachingFlags$VH_ = _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Share$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CachingFlags"));
    static final java.lang.invoke.VarHandle _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Share$CachingFlags$VH() { return _FILE_REMOTE_PROTOCOL_INFO$ProtocolSpecific$Smb2$Share$CachingFlags$VH_; }

    static final FunctionDescriptor GetFileInformationByHandleEx$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetFileInformationByHandleEx$FUNC() { return GetFileInformationByHandleEx$FUNC_; }

    static final MethodHandle GetFileInformationByHandleEx$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetFileInformationByHandleEx",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        GetFileInformationByHandleEx$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetFileInformationByHandleEx$MH() { return GetFileInformationByHandleEx$MH_; }

    static final int FileIdType() { return (int)0L; }

    static final int ObjectIdType() { return (int)1L; }

    static final int ExtendedFileIdType() { return (int)2L; }

    static final int MaximumFileIdType() { return (int)3L; }

    static final MemoryLayout FILE_ID_DESCRIPTOR$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG.withName("dwSize"),
        C_INT.withName("Type"),
        MemoryLayout.ofUnion(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart"),
            MemoryLayout.ofStruct(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONGLONG.withName("QuadPart")
        ).withName("FileId"),
        MemoryLayout.ofStruct(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.ofSequence(8, C_CHAR).withName("Data4")
        ).withName("ObjectId"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("Identifier")
        ).withName("ExtendedFileId")
    ).withName("FILE_ID_DESCRIPTOR");
    static final jdk.incubator.foreign.MemoryLayout FILE_ID_DESCRIPTOR$struct$LAYOUT() { return FILE_ID_DESCRIPTOR$struct$LAYOUT_; }

    static final MemoryLayout FILE_ID_DESCRIPTOR$dwSize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout FILE_ID_DESCRIPTOR$dwSize$LAYOUT() { return FILE_ID_DESCRIPTOR$dwSize$LAYOUT_; }

    static final VarHandle FILE_ID_DESCRIPTOR$dwSize$VH_ = FILE_ID_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwSize"));
    static final java.lang.invoke.VarHandle FILE_ID_DESCRIPTOR$dwSize$VH() { return FILE_ID_DESCRIPTOR$dwSize$VH_; }

    static final MemoryLayout FILE_ID_DESCRIPTOR$Type$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout FILE_ID_DESCRIPTOR$Type$LAYOUT() { return FILE_ID_DESCRIPTOR$Type$LAYOUT_; }

    static final VarHandle FILE_ID_DESCRIPTOR$Type$VH_ = FILE_ID_DESCRIPTOR$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Type"));
    static final java.lang.invoke.VarHandle FILE_ID_DESCRIPTOR$Type$VH() { return FILE_ID_DESCRIPTOR$Type$VH_; }

    static final FunctionDescriptor OpenFileById$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor OpenFileById$FUNC() { return OpenFileById$FUNC_; }

    static final MethodHandle OpenFileById$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "OpenFileById",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        OpenFileById$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle OpenFileById$MH() { return OpenFileById$MH_; }

    static final FunctionDescriptor CreateSymbolicLinkA$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateSymbolicLinkA$FUNC() { return CreateSymbolicLinkA$FUNC_; }

    static final MethodHandle CreateSymbolicLinkA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateSymbolicLinkA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)B",
        CreateSymbolicLinkA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateSymbolicLinkA$MH() { return CreateSymbolicLinkA$MH_; }

    static final FunctionDescriptor CreateSymbolicLinkW$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateSymbolicLinkW$FUNC() { return CreateSymbolicLinkW$FUNC_; }

    static final MethodHandle CreateSymbolicLinkW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateSymbolicLinkW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)B",
        CreateSymbolicLinkW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateSymbolicLinkW$MH() { return CreateSymbolicLinkW$MH_; }

    static final FunctionDescriptor QueryActCtxSettingsW$FUNC_ = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor QueryActCtxSettingsW$FUNC() { return QueryActCtxSettingsW$FUNC_; }

    static final MethodHandle QueryActCtxSettingsW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "QueryActCtxSettingsW",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        QueryActCtxSettingsW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle QueryActCtxSettingsW$MH() { return QueryActCtxSettingsW$MH_; }

    static final FunctionDescriptor CreateSymbolicLinkTransactedA$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateSymbolicLinkTransactedA$FUNC() { return CreateSymbolicLinkTransactedA$FUNC_; }

    static final MethodHandle CreateSymbolicLinkTransactedA$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateSymbolicLinkTransactedA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)B",
        CreateSymbolicLinkTransactedA$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateSymbolicLinkTransactedA$MH() { return CreateSymbolicLinkTransactedA$MH_; }

    static final FunctionDescriptor CreateSymbolicLinkTransactedW$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CreateSymbolicLinkTransactedW$FUNC() { return CreateSymbolicLinkTransactedW$FUNC_; }

    static final MethodHandle CreateSymbolicLinkTransactedW$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CreateSymbolicLinkTransactedW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)B",
        CreateSymbolicLinkTransactedW$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CreateSymbolicLinkTransactedW$MH() { return CreateSymbolicLinkTransactedW$MH_; }

    static final FunctionDescriptor ReplacePartitionUnit$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReplacePartitionUnit$FUNC() { return ReplacePartitionUnit$FUNC_; }

    static final MethodHandle ReplacePartitionUnit$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReplacePartitionUnit",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        ReplacePartitionUnit$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReplacePartitionUnit$MH() { return ReplacePartitionUnit$MH_; }

    static final FunctionDescriptor AddSecureMemoryCacheCallback$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddSecureMemoryCacheCallback$FUNC() { return AddSecureMemoryCacheCallback$FUNC_; }

    static final MethodHandle AddSecureMemoryCacheCallback$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "AddSecureMemoryCacheCallback",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        AddSecureMemoryCacheCallback$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle AddSecureMemoryCacheCallback$MH() { return AddSecureMemoryCacheCallback$MH_; }

    static final FunctionDescriptor AddSecureMemoryCacheCallback$pfnCallBack$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor AddSecureMemoryCacheCallback$pfnCallBack$FUNC() { return AddSecureMemoryCacheCallback$pfnCallBack$FUNC_; }

    static final FunctionDescriptor RemoveSecureMemoryCacheCallback$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RemoveSecureMemoryCacheCallback$FUNC() { return RemoveSecureMemoryCacheCallback$FUNC_; }

    static final MethodHandle RemoveSecureMemoryCacheCallback$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RemoveSecureMemoryCacheCallback",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RemoveSecureMemoryCacheCallback$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RemoveSecureMemoryCacheCallback$MH() { return RemoveSecureMemoryCacheCallback$MH_; }

    static final FunctionDescriptor RemoveSecureMemoryCacheCallback$pfnCallBack$FUNC_ = FunctionDescriptor.of(C_CHAR,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor RemoveSecureMemoryCacheCallback$pfnCallBack$FUNC() { return RemoveSecureMemoryCacheCallback$pfnCallBack$FUNC_; }

    static final FunctionDescriptor CopyContext$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor CopyContext$FUNC() { return CopyContext$FUNC_; }

    static final MethodHandle CopyContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "CopyContext",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        CopyContext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle CopyContext$MH() { return CopyContext$MH_; }

    static final FunctionDescriptor InitializeContext$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor InitializeContext$FUNC() { return InitializeContext$FUNC_; }

    static final MethodHandle InitializeContext$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "InitializeContext",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        InitializeContext$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle InitializeContext$MH() { return InitializeContext$MH_; }

    static final FunctionDescriptor InitializeContext2$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor InitializeContext2$FUNC() { return InitializeContext2$FUNC_; }

    static final MethodHandle InitializeContext2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "InitializeContext2",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        InitializeContext2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle InitializeContext2$MH() { return InitializeContext2$MH_; }

    static final FunctionDescriptor GetEnabledXStateFeatures$FUNC_ = FunctionDescriptor.of(C_LONGLONG);
    static final jdk.incubator.foreign.FunctionDescriptor GetEnabledXStateFeatures$FUNC() { return GetEnabledXStateFeatures$FUNC_; }

    static final MethodHandle GetEnabledXStateFeatures$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetEnabledXStateFeatures",
        "()J",
        GetEnabledXStateFeatures$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetEnabledXStateFeatures$MH() { return GetEnabledXStateFeatures$MH_; }

    static final FunctionDescriptor GetXStateFeaturesMask$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor GetXStateFeaturesMask$FUNC() { return GetXStateFeaturesMask$FUNC_; }

    static final MethodHandle GetXStateFeaturesMask$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "GetXStateFeaturesMask",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        GetXStateFeaturesMask$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle GetXStateFeaturesMask$MH() { return GetXStateFeaturesMask$MH_; }

    static final FunctionDescriptor LocateXStateFeature$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor LocateXStateFeature$FUNC() { return LocateXStateFeature$FUNC_; }

    static final MethodHandle LocateXStateFeature$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "LocateXStateFeature",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        LocateXStateFeature$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle LocateXStateFeature$MH() { return LocateXStateFeature$MH_; }

    static final FunctionDescriptor SetXStateFeaturesMask$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONGLONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor SetXStateFeaturesMask$FUNC() { return SetXStateFeaturesMask$FUNC_; }

    static final MethodHandle SetXStateFeaturesMask$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "SetXStateFeaturesMask",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        SetXStateFeaturesMask$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle SetXStateFeaturesMask$MH() { return SetXStateFeaturesMask$MH_; }

    static final FunctionDescriptor EnableThreadProfiling$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONGLONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor EnableThreadProfiling$FUNC() { return EnableThreadProfiling$FUNC_; }

    static final MethodHandle EnableThreadProfiling$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "EnableThreadProfiling",
        "(Ljdk/incubator/foreign/MemoryAddress;IJLjdk/incubator/foreign/MemoryAddress;)I",
        EnableThreadProfiling$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle EnableThreadProfiling$MH() { return EnableThreadProfiling$MH_; }

    static final FunctionDescriptor DisableThreadProfiling$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor DisableThreadProfiling$FUNC() { return DisableThreadProfiling$FUNC_; }

    static final MethodHandle DisableThreadProfiling$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "DisableThreadProfiling",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        DisableThreadProfiling$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle DisableThreadProfiling$MH() { return DisableThreadProfiling$MH_; }

    static final FunctionDescriptor QueryThreadProfiling$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor QueryThreadProfiling$FUNC() { return QueryThreadProfiling$FUNC_; }

    static final MethodHandle QueryThreadProfiling$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "QueryThreadProfiling",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        QueryThreadProfiling$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle QueryThreadProfiling$MH() { return QueryThreadProfiling$MH_; }

    static final FunctionDescriptor ReadThreadProfilingData$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor ReadThreadProfilingData$FUNC() { return ReadThreadProfilingData$FUNC_; }

    static final MethodHandle ReadThreadProfilingData$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "ReadThreadProfilingData",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        ReadThreadProfilingData$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle ReadThreadProfilingData$MH() { return ReadThreadProfilingData$MH_; }

    static final FunctionDescriptor RaiseCustomSystemEventTrigger$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor RaiseCustomSystemEventTrigger$FUNC() { return RaiseCustomSystemEventTrigger$FUNC_; }

    static final MethodHandle RaiseCustomSystemEventTrigger$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "RaiseCustomSystemEventTrigger",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        RaiseCustomSystemEventTrigger$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle RaiseCustomSystemEventTrigger$MH() { return RaiseCustomSystemEventTrigger$MH_; }

    static final int WAIT_FAILED() { return (int)4294967295L; }

    static final int WAIT_OBJECT_0() { return (int)0L; }

    static final int WAIT_ABANDONED() { return (int)128L; }

    static final int WAIT_ABANDONED_0() { return (int)128L; }

    static final int WAIT_IO_COMPLETION() { return (int)192L; }

    static final int FILE_FLAG_WRITE_THROUGH() { return (int)2147483648L; }

    static final int SECURITY_ANONYMOUS() { return (int)0L; }

    static final int SECURITY_IDENTIFICATION() { return (int)65536L; }

    static final int SECURITY_IMPERSONATION() { return (int)131072L; }

    static final int SECURITY_DELEGATION() { return (int)196608L; }

    static final int SP_SERIALCOMM() { return (int)1L; }

    static final int PST_UNSPECIFIED() { return (int)0L; }

    static final int PST_RS232() { return (int)1L; }

    static final int PST_PARALLELPORT() { return (int)2L; }

    static final int PST_RS422() { return (int)3L; }

    static final int PST_RS423() { return (int)4L; }

    static final int PST_RS449() { return (int)5L; }

    static final int PST_MODEM() { return (int)6L; }

    static final int PST_FAX() { return (int)33L; }

    static final int PST_SCANNER() { return (int)34L; }

    static final int PST_NETWORK_BRIDGE() { return (int)256L; }

    static final int PST_LAT() { return (int)257L; }

    static final int PST_TCPIP_TELNET() { return (int)258L; }

    static final int PST_X25() { return (int)259L; }

    static final int PCF_DTRDSR() { return (int)1L; }

    static final int PCF_RTSCTS() { return (int)2L; }

    static final int PCF_RLSD() { return (int)4L; }

    static final int PCF_PARITY_CHECK() { return (int)8L; }

    static final int PCF_XONXOFF() { return (int)16L; }

    static final int PCF_SETXCHAR() { return (int)32L; }

    static final int PCF_TOTALTIMEOUTS() { return (int)64L; }

    static final int PCF_INTTIMEOUTS() { return (int)128L; }

    static final int PCF_SPECIALCHARS() { return (int)256L; }

    static final int PCF_16BITMODE() { return (int)512L; }

    static final int SP_PARITY() { return (int)1L; }

    static final int SP_BAUD() { return (int)2L; }

    static final int SP_DATABITS() { return (int)4L; }

    static final int SP_STOPBITS() { return (int)8L; }

    static final int SP_HANDSHAKING() { return (int)16L; }

    static final int SP_PARITY_CHECK() { return (int)32L; }

    static final int SP_RLSD() { return (int)64L; }

    static final int BAUD_075() { return (int)1L; }

    static final int BAUD_110() { return (int)2L; }

    static final int BAUD_134_5() { return (int)4L; }

    static final int BAUD_150() { return (int)8L; }

    static final int BAUD_300() { return (int)16L; }

    static final int BAUD_600() { return (int)32L; }

    static final int BAUD_1200() { return (int)64L; }

    static final int BAUD_1800() { return (int)128L; }

    static final int BAUD_2400() { return (int)256L; }

    static final int BAUD_4800() { return (int)512L; }

    static final int BAUD_7200() { return (int)1024L; }

    static final int BAUD_9600() { return (int)2048L; }

    static final int BAUD_14400() { return (int)4096L; }

    static final int BAUD_19200() { return (int)8192L; }

    static final int BAUD_38400() { return (int)16384L; }

    static final int BAUD_56K() { return (int)32768L; }

    static final int BAUD_128K() { return (int)65536L; }

    static final int BAUD_115200() { return (int)131072L; }

    static final int BAUD_57600() { return (int)262144L; }

    static final int BAUD_USER() { return (int)268435456L; }

    static final short DATABITS_5() { return (short)1L; }

    static final short DATABITS_6() { return (short)2L; }

    static final short DATABITS_7() { return (short)4L; }

    static final short DATABITS_8() { return (short)8L; }

    static final short DATABITS_16() { return (short)16L; }

    static final short DATABITS_16X() { return (short)32L; }

    static final short STOPBITS_10() { return (short)1L; }

    static final short STOPBITS_15() { return (short)2L; }

    static final short STOPBITS_20() { return (short)4L; }

    static final short PARITY_NONE() { return (short)256L; }

    static final short PARITY_ODD() { return (short)512L; }

    static final short PARITY_EVEN() { return (short)1024L; }

    static final short PARITY_MARK() { return (short)2048L; }

    static final short PARITY_SPACE() { return (short)4096L; }

    static final int COMMPROP_INITIALIZED() { return (int)3879531822L; }

    static final int GMEM_LOWER() { return (int)4096L; }

    static final int GHND() { return (int)66L; }

    static final int GPTR() { return (int)64L; }

    static final int CREATE_IGNORE_SYSTEM_DEFAULT() { return (int)2147483648L; }

    static final int THREAD_PRIORITY_LOWEST() { return (int)-2L; }

    static final int THREAD_PRIORITY_BELOW_NORMAL() { return (int)-1L; }

    static final int THREAD_PRIORITY_HIGHEST() { return (int)2L; }

    static final int THREAD_PRIORITY_ABOVE_NORMAL() { return (int)1L; }

    static final int THREAD_PRIORITY_ERROR_RETURN() { return (int)2147483647L; }

    static final int THREAD_PRIORITY_TIME_CRITICAL() { return (int)15L; }

    static final int THREAD_PRIORITY_IDLE() { return (int)-15L; }

    static final int STD_INPUT_HANDLE() { return (int)4294967286L; }

    static final int STD_OUTPUT_HANDLE() { return (int)4294967285L; }

    static final int STD_ERROR_HANDLE() { return (int)4294967284L; }

    static final int INFINITE() { return (int)4294967295L; }

    static final int IE_BADID() { return (int)-1L; }

    static final int IE_OPEN() { return (int)-2L; }

    static final int IE_NOPEN() { return (int)-3L; }

    static final int IE_MEMORY() { return (int)-4L; }

    static final int IE_DEFAULT() { return (int)-5L; }

    static final int IE_HARDWARE() { return (int)-10L; }

    static final int IE_BYTESIZE() { return (int)-11L; }

    static final int IE_BAUDRATE() { return (int)-12L; }

    static final int MS_CTS_ON() { return (int)16L; }

    static final int MS_DSR_ON() { return (int)32L; }

    static final int MS_RING_ON() { return (int)64L; }

    static final int MS_RLSD_ON() { return (int)128L; }

    static final int S_SERDVNA() { return (int)-1L; }

    static final int S_SEROFM() { return (int)-2L; }

    static final int S_SERMACT() { return (int)-3L; }

    static final int S_SERQFUL() { return (int)-4L; }

    static final int S_SERBDNT() { return (int)-5L; }

    static final int S_SERDLN() { return (int)-6L; }

    static final int S_SERDCC() { return (int)-7L; }

    static final int S_SERDTP() { return (int)-8L; }

    static final int S_SERDVL() { return (int)-9L; }

    static final int S_SERDMD() { return (int)-10L; }

    static final int S_SERDSH() { return (int)-11L; }

    static final int S_SERDPT() { return (int)-12L; }

    static final int S_SERDFQ() { return (int)-13L; }

    static final int S_SERDDR() { return (int)-14L; }

    static final int S_SERDSR() { return (int)-15L; }

    static final int S_SERDST() { return (int)-16L; }

    static final int NMPWAIT_WAIT_FOREVER() { return (int)4294967295L; }

    static final int FS_CASE_IS_PRESERVED() { return (int)2L; }

    static final int FS_CASE_SENSITIVE() { return (int)1L; }

    static final int FS_UNICODE_STORED_ON_DISK() { return (int)4L; }

    static final int FS_PERSISTENT_ACLS() { return (int)8L; }

    static final int FS_VOL_IS_COMPRESSED() { return (int)32768L; }

    static final int FS_FILE_COMPRESSION() { return (int)16L; }

    static final int FS_FILE_ENCRYPTION() { return (int)131072L; }

    static final short INVALID_ATOM() { return (short)0L; }

    static final int SCS_THIS_PLATFORM_BINARY() { return (int)6L; }

    static final int UMS_VERSION() { return (int)256L; }

    static final int CRITICAL_SECTION_NO_DEBUG_INFO() { return (int)16777216L; }

    static final int EFS_USE_RECOVERY_KEYS() { return (int)1L; }

    static final int CREATE_FOR_IMPORT() { return (int)1L; }

    static final int CREATE_FOR_DIR() { return (int)2L; }

    static final int OVERWRITE_HIDDEN() { return (int)4L; }

    static final int EFSRPC_SECURE_ONLY() { return (int)8L; }

    static final int EFS_DROP_ALTERNATE_STREAMS() { return (int)16L; }

    static final int PROTECTION_LEVEL_SAME() { return (int)4294967295L; }

    static final int PROTECTION_LEVEL_NONE() { return (int)4294967294L; }

    static final int PROC_THREAD_ATTRIBUTE_PARENT_PROCESS() { return (int)131072L; }

    static final int PROC_THREAD_ATTRIBUTE_HANDLE_LIST() { return (int)131074L; }

    static final int PROC_THREAD_ATTRIBUTE_GROUP_AFFINITY() { return (int)196611L; }

    static final int PROC_THREAD_ATTRIBUTE_PREFERRED_NODE() { return (int)131076L; }

    static final int PROC_THREAD_ATTRIBUTE_IDEAL_PROCESSOR() { return (int)196613L; }

    static final int PROC_THREAD_ATTRIBUTE_UMS_THREAD() { return (int)196614L; }

    static final int PROC_THREAD_ATTRIBUTE_MITIGATION_POLICY() { return (int)131079L; }

    static final int PROC_THREAD_ATTRIBUTE_SECURITY_CAPABILITIES() { return (int)131081L; }

    static final int PROC_THREAD_ATTRIBUTE_PROTECTION_LEVEL() { return (int)131083L; }

    static final int PROC_THREAD_ATTRIBUTE_PSEUDOCONSOLE() { return (int)131094L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_MASK() { return (int)768L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_DEFER() { return (int)0L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON() { return (int)256L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_OFF() { return (int)512L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON_REQ_RELOCS() { return (int)768L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_MASK() { return (int)12288L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_DEFER() { return (int)0L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_ON() { return (int)4096L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_OFF() { return (int)8192L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_RESERVED() { return (int)12288L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_MASK() { return (int)196608L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_DEFER() { return (int)0L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_ON() { return (int)65536L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_OFF() { return (int)131072L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_RESERVED() { return (int)196608L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_MASK() { return (int)3145728L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_DEFER() { return (int)0L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_ON() { return (int)1048576L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_OFF() { return (int)2097152L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_RESERVED() { return (int)3145728L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_MASK() { return (int)50331648L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_DEFER() { return (int)0L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_ON() { return (int)16777216L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_OFF() { return (int)33554432L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_RESERVED() { return (int)50331648L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_MASK() { return (int)805306368L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_DEFER() { return (int)0L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_ON() { return (int)268435456L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_OFF() { return (int)536870912L; }

    static final int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_RESERVED() { return (int)805306368L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_MASK() { return 12884901888L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_DEFER() { return 0L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_ON() { return 4294967296L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_OFF() { return 8589934592L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_RESERVED() { return 12884901888L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_MASK() { return 206158430208L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_DEFER() { return 0L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON() { return 68719476736L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_OFF() { return 137438953472L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON_ALLOW_OPT_OUT() { return 206158430208L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_MASK() { return 3298534883328L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_DEFER() { return 0L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_ON() { return 1099511627776L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_OFF() { return 2199023255552L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_EXPORT_SUPPRESSION() { return 3298534883328L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_MASK() { return 52776558133248L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_DEFER() { return 0L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_ON() { return 17592186044416L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_OFF() { return 35184372088832L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALLOW_STORE() { return 52776558133248L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_MASK() { return 844424930131968L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_DEFER() { return 0L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_ON() { return 281474976710656L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_OFF() { return 562949953421312L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_AUDIT_NONSYSTEM_FONTS() { return 844424930131968L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_MASK() { return 13510798882111488L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_DEFER() { return 0L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_ON() { return 4503599627370496L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_OFF() { return 9007199254740992L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_RESERVED() { return 13510798882111488L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_MASK() { return 216172782113783808L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_DEFER() { return 0L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_ON() { return 72057594037927936L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_OFF() { return 144115188075855872L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_RESERVED() { return 216172782113783808L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_MASK() { return 3458764513820540928L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_DEFER() { return 0L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_ON() { return 1152921504606846976L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_OFF() { return 2305843009213693952L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_RESERVED() { return 3458764513820540928L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_MASK() { return 48L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_DEFER() { return 0L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_ON() { return 16L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_OFF() { return 32L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_AUDIT() { return 48L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_MASK() { return 768L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_DEFER() { return 0L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_ON() { return 256L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_OFF() { return 512L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_RESERVED() { return 768L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_MASK() { return 12288L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_DEFER() { return 0L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_ON() { return 4096L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_OFF() { return 8192L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_NOINHERIT() { return 12288L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_MASK() { return 196608L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_DEFER() { return 0L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_ON() { return 65536L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_OFF() { return 131072L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_RESERVED() { return 196608L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_MASK() { return 3145728L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_DEFER() { return 0L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_ON() { return 1048576L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_OFF() { return 2097152L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_RESERVED() { return 3145728L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_MASK() { return 50331648L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_DEFER() { return 0L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_ON() { return 16777216L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_OFF() { return 33554432L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_RESERVED() { return 50331648L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_MASK() { return 805306368L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_DEFER() { return 0L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_ON() { return 268435456L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_OFF() { return 536870912L; }

    static final long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_RESERVED() { return 805306368L; }

    static final int PROC_THREAD_ATTRIBUTE_JOB_LIST() { return (int)131085L; }

    static final int PROC_THREAD_ATTRIBUTE_CHILD_PROCESS_POLICY() { return (int)131086L; }

    static final int PROC_THREAD_ATTRIBUTE_ALL_APPLICATION_PACKAGES_POLICY() { return (int)131087L; }

    static final int PROC_THREAD_ATTRIBUTE_WIN32K_FILTER() { return (int)131088L; }

    static final int PROC_THREAD_ATTRIBUTE_DESKTOP_APP_POLICY() { return (int)131090L; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A$SEGMENT_CONSTANT_ = CLinker.toCString("GetSystemWow64DirectoryA");
    static final jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A$SEGMENT_CONSTANT_; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W$SEGMENT_CONSTANT_ = CLinker.toCString("G");
    static final jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W$SEGMENT_CONSTANT_; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T$SEGMENT_CONSTANT_ = CLinker.toCString("GetSystemWow64DirectoryA");
    static final jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T$SEGMENT_CONSTANT_; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A$SEGMENT_CONSTANT_ = CLinker.toCString("GetSystemWow64DirectoryW");
    static final jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A$SEGMENT_CONSTANT_; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W$SEGMENT_CONSTANT_ = CLinker.toCString("G");
    static final jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W$SEGMENT_CONSTANT_; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T$SEGMENT_CONSTANT_ = CLinker.toCString("GetSystemWow64DirectoryW");
    static final jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T$SEGMENT_CONSTANT_; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A$SEGMENT_CONSTANT_ = CLinker.toCString("GetSystemWow64DirectoryA");
    static final jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A$SEGMENT_CONSTANT_; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W$SEGMENT_CONSTANT_ = CLinker.toCString("G");
    static final jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W$SEGMENT_CONSTANT_; }

    static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T$SEGMENT_CONSTANT_ = CLinker.toCString("GetSystemWow64DirectoryA");
    static final jdk.incubator.foreign.MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T() { return GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T$SEGMENT_CONSTANT_; }

    static final int BASE_SEARCH_PATH_INVALID_FLAGS() { return (int)-98306L; }

    static final int COPYFILE2_MESSAGE_COPY_OFFLOAD() { return (int)1L; }

    static final int LOGON_ZERO_PASSWORD_BUFFER() { return (int)2147483648L; }

    static final int DOCKINFO_UNDOCKED() { return (int)1L; }

    static final int DOCKINFO_DOCKED() { return (int)2L; }

    static final int DOCKINFO_USER_SUPPLIED() { return (int)4L; }

    static final int DOCKINFO_USER_UNDOCKED() { return (int)5L; }

    static final int DOCKINFO_USER_DOCKED() { return (int)6L; }

    static final int BATTERY_LIFE_UNKNOWN() { return (int)4294967295L; }

    static final int ACTCTX_FLAG_PROCESSOR_ARCHITECTURE_VALID() { return (int)1L; }

    static final int ACTCTX_FLAG_LANGID_VALID() { return (int)2L; }

    static final int ACTCTX_FLAG_ASSEMBLY_DIRECTORY_VALID() { return (int)4L; }

    static final int ACTCTX_FLAG_RESOURCE_NAME_VALID() { return (int)8L; }

    static final int ACTCTX_FLAG_SET_PROCESS_DEFAULT() { return (int)16L; }

    static final int ACTCTX_FLAG_APPLICATION_NAME_VALID() { return (int)32L; }

    static final int ACTCTX_FLAG_SOURCE_IS_ASSEMBLYREF() { return (int)64L; }

    static final int ACTCTX_FLAG_HMODULE_VALID() { return (int)128L; }

    static final int DEACTIVATE_ACTCTX_FLAG_FORCE_EARLY_DEACTIVATION() { return (int)1L; }

    static final int FIND_ACTCTX_SECTION_KEY_RETURN_HACTCTX() { return (int)1L; }

    static final int FIND_ACTCTX_SECTION_KEY_RETURN_FLAGS() { return (int)2L; }

    static final int FIND_ACTCTX_SECTION_KEY_RETURN_ASSEMBLY_METADATA() { return (int)4L; }

    static final int QUERY_ACTCTX_FLAG_USE_ACTIVE_ACTCTX() { return (int)4L; }

    static final int QUERY_ACTCTX_FLAG_ACTCTX_IS_HMODULE() { return (int)8L; }

    static final int QUERY_ACTCTX_FLAG_ACTCTX_IS_ADDRESS() { return (int)16L; }

    static final int QUERY_ACTCTX_FLAG_NO_ADDREF() { return (int)2147483648L; }

    static final int RECOVERY_MAX_PING_INTERVAL() { return (int)300000L; }

    static final int STORAGE_INFO_OFFSET_UNKNOWN() { return (int)4294967295L; }

    static final int SYMBOLIC_LINK_FLAG_DIRECTORY() { return (int)1L; }

    static final int SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE() { return (int)2L; }

    static final int MICROSOFT_WINDOWS_WINBASE_H_DEFINE_INTERLOCKED_CPLUSPLUS_OVERLOADS() { return (int)1L; }

}

