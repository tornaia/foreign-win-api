// Generated by jextract

package com.github.tornaia.foreign.win.api.searchapi.internal;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
public final class searchapi_h  {

    /* package-private */ searchapi_h() {}
    public static @C("int") int __REQUIRED_RPCNDR_H_VERSION__() {
        return searchapi_h$constants$0.__REQUIRED_RPCNDR_H_VERSION__();
    }
    public static @C("int") int __REQUIRED_RPCSAL_H_VERSION__() {
        return searchapi_h$constants$0.__REQUIRED_RPCSAL_H_VERSION__();
    }
    public static @C("long") ValueLayout ITEMID = C_LONG;
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0000_v0_0_c_ifspec$LAYOUT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0000_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0000_v0_0_c_ifspec$VH() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0000_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0000_v0_0_c_ifspec$SEGMENT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0000_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0000_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0000_v0_0_c_ifspec$VH().get(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0000_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0000_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0000_v0_0_c_ifspec$VH().set(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0000_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0000_v0_0_s_ifspec$LAYOUT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0000_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0000_v0_0_s_ifspec$VH() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0000_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0000_v0_0_s_ifspec$SEGMENT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0000_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0000_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0000_v0_0_s_ifspec$VH().get(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0000_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0000_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0000_v0_0_s_ifspec$VH().set(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0000_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_IUrlAccessor$SEGMENT() {
        return searchapi_h$constants$0.IID_IUrlAccessor$SEGMENT();
    }
    @C("struct IUrlAccessorVtbl")public static class IUrlAccessorVtbl {

        /* package-private */ IUrlAccessorVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.IUrlAccessorVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$0.IUrlAccessorVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IUrlAccessorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$0.IUrlAccessorVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IUrlAccessor*)") MemoryAddress AddRef$get(@C("struct IUrlAccessorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IUrlAccessor*)") MemoryAddress AddRef$get(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, @C("ULONG(*)(IUrlAccessor*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index, @C("ULONG(*)(IUrlAccessor*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$0.IUrlAccessorVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IUrlAccessor*)") MemoryAddress Release$get(@C("struct IUrlAccessorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IUrlAccessor*)") MemoryAddress Release$get(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, @C("ULONG(*)(IUrlAccessor*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index, @C("ULONG(*)(IUrlAccessor*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRequestParameter$VH() {
            return searchapi_h$constants$0.IUrlAccessorVtbl$AddRequestParameter$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,PROPSPEC*,PROPVARIANT*)") MemoryAddress AddRequestParameter$get(@C("struct IUrlAccessorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$AddRequestParameter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,PROPSPEC*,PROPVARIANT*)") MemoryAddress AddRequestParameter$get(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$AddRequestParameter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRequestParameter$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor*,PROPSPEC*,PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$AddRequestParameter$VH().set(seg, x);
        }
        public static void AddRequestParameter$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor*,PROPSPEC*,PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$AddRequestParameter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDocFormat$VH() {
            return searchapi_h$constants$0.IUrlAccessorVtbl$GetDocFormat$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetDocFormat$get(@C("struct IUrlAccessorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetDocFormat$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetDocFormat$get(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetDocFormat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDocFormat$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetDocFormat$VH().set(seg, x);
        }
        public static void GetDocFormat$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetDocFormat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCLSID$VH() {
            return searchapi_h$constants$0.IUrlAccessorVtbl$GetCLSID$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,CLSID*)") MemoryAddress GetCLSID$get(@C("struct IUrlAccessorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetCLSID$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,CLSID*)") MemoryAddress GetCLSID$get(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetCLSID$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCLSID$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor*,CLSID*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetCLSID$VH().set(seg, x);
        }
        public static void GetCLSID$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor*,CLSID*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetCLSID$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetHost$VH() {
            return searchapi_h$constants$0.IUrlAccessorVtbl$GetHost$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetHost$get(@C("struct IUrlAccessorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetHost$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetHost$get(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetHost$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetHost$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetHost$VH().set(seg, x);
        }
        public static void GetHost$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetHost$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IsDirectory$VH() {
            return searchapi_h$constants$0.IUrlAccessorVtbl$IsDirectory$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor*)") MemoryAddress IsDirectory$get(@C("struct IUrlAccessorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$IsDirectory$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor*)") MemoryAddress IsDirectory$get(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$IsDirectory$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IsDirectory$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$IsDirectory$VH().set(seg, x);
        }
        public static void IsDirectory$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$IsDirectory$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSize$VH() {
            return searchapi_h$constants$0.IUrlAccessorVtbl$GetSize$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,ULONGLONG*)") MemoryAddress GetSize$get(@C("struct IUrlAccessorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetSize$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,ULONGLONG*)") MemoryAddress GetSize$get(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSize$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor*,ULONGLONG*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetSize$VH().set(seg, x);
        }
        public static void GetSize$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor*,ULONGLONG*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetLastModified$VH() {
            return searchapi_h$constants$0.IUrlAccessorVtbl$GetLastModified$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,FILETIME*)") MemoryAddress GetLastModified$get(@C("struct IUrlAccessorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetLastModified$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,FILETIME*)") MemoryAddress GetLastModified$get(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetLastModified$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetLastModified$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor*,FILETIME*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetLastModified$VH().set(seg, x);
        }
        public static void GetLastModified$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor*,FILETIME*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetLastModified$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetFileName$VH() {
            return searchapi_h$constants$0.IUrlAccessorVtbl$GetFileName$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetFileName$get(@C("struct IUrlAccessorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetFileName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetFileName$get(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetFileName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetFileName$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetFileName$VH().set(seg, x);
        }
        public static void GetFileName$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetFileName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSecurityDescriptor$VH() {
            return searchapi_h$constants$0.IUrlAccessorVtbl$GetSecurityDescriptor$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,BYTE*,DWORD,DWORD*)") MemoryAddress GetSecurityDescriptor$get(@C("struct IUrlAccessorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetSecurityDescriptor$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,BYTE*,DWORD,DWORD*)") MemoryAddress GetSecurityDescriptor$get(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetSecurityDescriptor$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSecurityDescriptor$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor*,BYTE*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetSecurityDescriptor$VH().set(seg, x);
        }
        public static void GetSecurityDescriptor$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor*,BYTE*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetSecurityDescriptor$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetRedirectedURL$VH() {
            return searchapi_h$constants$0.IUrlAccessorVtbl$GetRedirectedURL$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetRedirectedURL$get(@C("struct IUrlAccessorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetRedirectedURL$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetRedirectedURL$get(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetRedirectedURL$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetRedirectedURL$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetRedirectedURL$VH().set(seg, x);
        }
        public static void GetRedirectedURL$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetRedirectedURL$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSecurityProvider$VH() {
            return searchapi_h$constants$0.IUrlAccessorVtbl$GetSecurityProvider$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,CLSID*)") MemoryAddress GetSecurityProvider$get(@C("struct IUrlAccessorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetSecurityProvider$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,CLSID*)") MemoryAddress GetSecurityProvider$get(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$GetSecurityProvider$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSecurityProvider$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor*,CLSID*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetSecurityProvider$VH().set(seg, x);
        }
        public static void GetSecurityProvider$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor*,CLSID*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$GetSecurityProvider$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BindToStream$VH() {
            return searchapi_h$constants$0.IUrlAccessorVtbl$BindToStream$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,IStream**)") MemoryAddress BindToStream$get(@C("struct IUrlAccessorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$BindToStream$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,IStream**)") MemoryAddress BindToStream$get(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$BindToStream$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BindToStream$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor*,IStream**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$BindToStream$VH().set(seg, x);
        }
        public static void BindToStream$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor*,IStream**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$BindToStream$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BindToFilter$VH() {
            return searchapi_h$constants$0.IUrlAccessorVtbl$BindToFilter$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,IFilter**)") MemoryAddress BindToFilter$get(@C("struct IUrlAccessorVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$BindToFilter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor*,IFilter**)") MemoryAddress BindToFilter$get(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessorVtbl$BindToFilter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BindToFilter$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor*,IFilter**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$BindToFilter$VH().set(seg, x);
        }
        public static void BindToFilter$set(@C("struct IUrlAccessorVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor*,IFilter**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessorVtbl$BindToFilter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IUrlAccessorVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IUrlAccessorVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IUrlAccessorVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IUrlAccessorVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IUrlAccessorVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IUrlAccessorVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IUrlAccessorVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct IUrlAccessor")public static class IUrlAccessor {

        /* package-private */ IUrlAccessor() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.IUrlAccessor$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$0.IUrlAccessor$lpVtbl$VH();
        }
        public static  @C("struct IUrlAccessorVtbl*") MemoryAddress lpVtbl$get(@C("struct IUrlAccessor") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IUrlAccessorVtbl*") MemoryAddress lpVtbl$get(@C("struct IUrlAccessor") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IUrlAccessor") MemorySegment seg, @C("struct IUrlAccessorVtbl*") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IUrlAccessor") MemorySegment seg, long index, @C("struct IUrlAccessorVtbl*") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IUrlAccessor") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IUrlAccessor") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IUrlAccessor[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IUrlAccessor[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IUrlAccessor*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IUrlAccessor*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IUrlAccessor") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemorySegment IID_IUrlAccessor2$SEGMENT() {
        return searchapi_h$constants$0.IID_IUrlAccessor2$SEGMENT();
    }
    @C("struct IUrlAccessor2Vtbl")public static class IUrlAccessor2Vtbl {

        /* package-private */ IUrlAccessor2Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor2*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor2*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IUrlAccessor2*)") MemoryAddress AddRef$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IUrlAccessor2*)") MemoryAddress AddRef$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("ULONG(*)(IUrlAccessor2*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("ULONG(*)(IUrlAccessor2*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IUrlAccessor2*)") MemoryAddress Release$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IUrlAccessor2*)") MemoryAddress Release$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("ULONG(*)(IUrlAccessor2*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("ULONG(*)(IUrlAccessor2*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRequestParameter$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$AddRequestParameter$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,PROPSPEC*,PROPVARIANT*)") MemoryAddress AddRequestParameter$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$AddRequestParameter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,PROPSPEC*,PROPVARIANT*)") MemoryAddress AddRequestParameter$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$AddRequestParameter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRequestParameter$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor2*,PROPSPEC*,PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$AddRequestParameter$VH().set(seg, x);
        }
        public static void AddRequestParameter$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor2*,PROPSPEC*,PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$AddRequestParameter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDocFormat$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$GetDocFormat$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetDocFormat$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetDocFormat$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetDocFormat$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetDocFormat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDocFormat$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetDocFormat$VH().set(seg, x);
        }
        public static void GetDocFormat$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetDocFormat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCLSID$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$GetCLSID$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,CLSID*)") MemoryAddress GetCLSID$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetCLSID$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,CLSID*)") MemoryAddress GetCLSID$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetCLSID$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCLSID$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor2*,CLSID*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetCLSID$VH().set(seg, x);
        }
        public static void GetCLSID$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor2*,CLSID*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetCLSID$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetHost$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$GetHost$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetHost$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetHost$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetHost$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetHost$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetHost$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetHost$VH().set(seg, x);
        }
        public static void GetHost$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetHost$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IsDirectory$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$IsDirectory$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*)") MemoryAddress IsDirectory$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$IsDirectory$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*)") MemoryAddress IsDirectory$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$IsDirectory$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IsDirectory$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor2*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$IsDirectory$VH().set(seg, x);
        }
        public static void IsDirectory$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor2*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$IsDirectory$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSize$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$GetSize$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,ULONGLONG*)") MemoryAddress GetSize$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetSize$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,ULONGLONG*)") MemoryAddress GetSize$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSize$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor2*,ULONGLONG*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetSize$VH().set(seg, x);
        }
        public static void GetSize$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor2*,ULONGLONG*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetLastModified$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$GetLastModified$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,FILETIME*)") MemoryAddress GetLastModified$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetLastModified$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,FILETIME*)") MemoryAddress GetLastModified$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetLastModified$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetLastModified$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor2*,FILETIME*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetLastModified$VH().set(seg, x);
        }
        public static void GetLastModified$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor2*,FILETIME*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetLastModified$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetFileName$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$GetFileName$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetFileName$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetFileName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetFileName$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetFileName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetFileName$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetFileName$VH().set(seg, x);
        }
        public static void GetFileName$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetFileName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSecurityDescriptor$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$GetSecurityDescriptor$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,BYTE*,DWORD,DWORD*)") MemoryAddress GetSecurityDescriptor$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetSecurityDescriptor$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,BYTE*,DWORD,DWORD*)") MemoryAddress GetSecurityDescriptor$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetSecurityDescriptor$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSecurityDescriptor$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor2*,BYTE*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetSecurityDescriptor$VH().set(seg, x);
        }
        public static void GetSecurityDescriptor$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor2*,BYTE*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetSecurityDescriptor$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetRedirectedURL$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$GetRedirectedURL$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetRedirectedURL$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetRedirectedURL$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetRedirectedURL$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetRedirectedURL$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetRedirectedURL$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetRedirectedURL$VH().set(seg, x);
        }
        public static void GetRedirectedURL$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetRedirectedURL$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSecurityProvider$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$GetSecurityProvider$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,CLSID*)") MemoryAddress GetSecurityProvider$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetSecurityProvider$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,CLSID*)") MemoryAddress GetSecurityProvider$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetSecurityProvider$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSecurityProvider$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor2*,CLSID*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetSecurityProvider$VH().set(seg, x);
        }
        public static void GetSecurityProvider$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor2*,CLSID*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetSecurityProvider$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BindToStream$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$BindToStream$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,IStream**)") MemoryAddress BindToStream$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$BindToStream$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,IStream**)") MemoryAddress BindToStream$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$BindToStream$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BindToStream$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor2*,IStream**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$BindToStream$VH().set(seg, x);
        }
        public static void BindToStream$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor2*,IStream**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$BindToStream$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BindToFilter$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$BindToFilter$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,IFilter**)") MemoryAddress BindToFilter$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$BindToFilter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,IFilter**)") MemoryAddress BindToFilter$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$BindToFilter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BindToFilter$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor2*,IFilter**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$BindToFilter$VH().set(seg, x);
        }
        public static void BindToFilter$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor2*,IFilter**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$BindToFilter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDisplayUrl$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$GetDisplayUrl$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetDisplayUrl$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetDisplayUrl$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetDisplayUrl$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetDisplayUrl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDisplayUrl$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetDisplayUrl$VH().set(seg, x);
        }
        public static void GetDisplayUrl$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetDisplayUrl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IsDocument$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$IsDocument$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*)") MemoryAddress IsDocument$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$IsDocument$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*)") MemoryAddress IsDocument$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$IsDocument$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IsDocument$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor2*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$IsDocument$VH().set(seg, x);
        }
        public static void IsDocument$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor2*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$IsDocument$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCodePage$VH() {
            return searchapi_h$constants$0.IUrlAccessor2Vtbl$GetCodePage$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetCodePage$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetCodePage$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetCodePage$get(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2Vtbl$GetCodePage$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCodePage$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetCodePage$VH().set(seg, x);
        }
        public static void GetCodePage$set(@C("struct IUrlAccessor2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor2*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2Vtbl$GetCodePage$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IUrlAccessor2Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IUrlAccessor2Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IUrlAccessor2Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IUrlAccessor2Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IUrlAccessor2Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IUrlAccessor2Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IUrlAccessor2Vtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct IUrlAccessor2")public static class IUrlAccessor2 {

        /* package-private */ IUrlAccessor2() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.IUrlAccessor2$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$0.IUrlAccessor2$lpVtbl$VH();
        }
        public static  @C("struct IUrlAccessor2Vtbl*") MemoryAddress lpVtbl$get(@C("struct IUrlAccessor2") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IUrlAccessor2Vtbl*") MemoryAddress lpVtbl$get(@C("struct IUrlAccessor2") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor2$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IUrlAccessor2") MemorySegment seg, @C("struct IUrlAccessor2Vtbl*") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IUrlAccessor2") MemorySegment seg, long index, @C("struct IUrlAccessor2Vtbl*") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor2$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IUrlAccessor2") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IUrlAccessor2") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IUrlAccessor2[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IUrlAccessor2[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IUrlAccessor2*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IUrlAccessor2*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IUrlAccessor2") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemorySegment IID_IUrlAccessor3$SEGMENT() {
        return searchapi_h$constants$0.IID_IUrlAccessor3$SEGMENT();
    }
    @C("struct IUrlAccessor3Vtbl")public static class IUrlAccessor3Vtbl {

        /* package-private */ IUrlAccessor3Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IUrlAccessor3*)") MemoryAddress AddRef$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IUrlAccessor3*)") MemoryAddress AddRef$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("ULONG(*)(IUrlAccessor3*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("ULONG(*)(IUrlAccessor3*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IUrlAccessor3*)") MemoryAddress Release$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IUrlAccessor3*)") MemoryAddress Release$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("ULONG(*)(IUrlAccessor3*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("ULONG(*)(IUrlAccessor3*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRequestParameter$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$AddRequestParameter$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,PROPSPEC*,PROPVARIANT*)") MemoryAddress AddRequestParameter$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$AddRequestParameter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,PROPSPEC*,PROPVARIANT*)") MemoryAddress AddRequestParameter$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$AddRequestParameter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRequestParameter$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*,PROPSPEC*,PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$AddRequestParameter$VH().set(seg, x);
        }
        public static void AddRequestParameter$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*,PROPSPEC*,PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$AddRequestParameter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDocFormat$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$GetDocFormat$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetDocFormat$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetDocFormat$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetDocFormat$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetDocFormat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDocFormat$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetDocFormat$VH().set(seg, x);
        }
        public static void GetDocFormat$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetDocFormat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCLSID$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$GetCLSID$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,CLSID*)") MemoryAddress GetCLSID$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetCLSID$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,CLSID*)") MemoryAddress GetCLSID$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetCLSID$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCLSID$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*,CLSID*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetCLSID$VH().set(seg, x);
        }
        public static void GetCLSID$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*,CLSID*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetCLSID$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetHost$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$GetHost$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetHost$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetHost$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetHost$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetHost$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetHost$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetHost$VH().set(seg, x);
        }
        public static void GetHost$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetHost$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IsDirectory$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$IsDirectory$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*)") MemoryAddress IsDirectory$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$IsDirectory$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*)") MemoryAddress IsDirectory$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$IsDirectory$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IsDirectory$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$IsDirectory$VH().set(seg, x);
        }
        public static void IsDirectory$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$IsDirectory$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSize$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$GetSize$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,ULONGLONG*)") MemoryAddress GetSize$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetSize$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,ULONGLONG*)") MemoryAddress GetSize$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSize$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*,ULONGLONG*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetSize$VH().set(seg, x);
        }
        public static void GetSize$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*,ULONGLONG*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetLastModified$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$GetLastModified$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,FILETIME*)") MemoryAddress GetLastModified$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetLastModified$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,FILETIME*)") MemoryAddress GetLastModified$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetLastModified$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetLastModified$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*,FILETIME*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetLastModified$VH().set(seg, x);
        }
        public static void GetLastModified$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*,FILETIME*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetLastModified$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetFileName$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$GetFileName$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetFileName$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetFileName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetFileName$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetFileName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetFileName$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetFileName$VH().set(seg, x);
        }
        public static void GetFileName$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetFileName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSecurityDescriptor$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$GetSecurityDescriptor$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,BYTE*,DWORD,DWORD*)") MemoryAddress GetSecurityDescriptor$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetSecurityDescriptor$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,BYTE*,DWORD,DWORD*)") MemoryAddress GetSecurityDescriptor$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetSecurityDescriptor$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSecurityDescriptor$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*,BYTE*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetSecurityDescriptor$VH().set(seg, x);
        }
        public static void GetSecurityDescriptor$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*,BYTE*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetSecurityDescriptor$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetRedirectedURL$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$GetRedirectedURL$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetRedirectedURL$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetRedirectedURL$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetRedirectedURL$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetRedirectedURL$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetRedirectedURL$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetRedirectedURL$VH().set(seg, x);
        }
        public static void GetRedirectedURL$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetRedirectedURL$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSecurityProvider$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$GetSecurityProvider$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,CLSID*)") MemoryAddress GetSecurityProvider$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetSecurityProvider$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,CLSID*)") MemoryAddress GetSecurityProvider$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetSecurityProvider$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSecurityProvider$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*,CLSID*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetSecurityProvider$VH().set(seg, x);
        }
        public static void GetSecurityProvider$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*,CLSID*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetSecurityProvider$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BindToStream$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$BindToStream$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,IStream**)") MemoryAddress BindToStream$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$BindToStream$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,IStream**)") MemoryAddress BindToStream$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$BindToStream$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BindToStream$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*,IStream**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$BindToStream$VH().set(seg, x);
        }
        public static void BindToStream$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*,IStream**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$BindToStream$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BindToFilter$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$BindToFilter$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,IFilter**)") MemoryAddress BindToFilter$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$BindToFilter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,IFilter**)") MemoryAddress BindToFilter$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$BindToFilter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BindToFilter$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*,IFilter**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$BindToFilter$VH().set(seg, x);
        }
        public static void BindToFilter$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*,IFilter**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$BindToFilter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDisplayUrl$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$GetDisplayUrl$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetDisplayUrl$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetDisplayUrl$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetDisplayUrl$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetDisplayUrl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDisplayUrl$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetDisplayUrl$VH().set(seg, x);
        }
        public static void GetDisplayUrl$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetDisplayUrl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IsDocument$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$IsDocument$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*)") MemoryAddress IsDocument$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$IsDocument$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*)") MemoryAddress IsDocument$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$IsDocument$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IsDocument$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$IsDocument$VH().set(seg, x);
        }
        public static void IsDocument$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$IsDocument$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCodePage$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$GetCodePage$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetCodePage$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetCodePage$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetCodePage$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetCodePage$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCodePage$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetCodePage$VH().set(seg, x);
        }
        public static void GetCodePage$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetCodePage$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetImpersonationSidBlobs$VH() {
            return searchapi_h$constants$0.IUrlAccessor3Vtbl$GetImpersonationSidBlobs$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,LPCWSTR,DWORD*,BLOB**)") MemoryAddress GetImpersonationSidBlobs$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetImpersonationSidBlobs$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor3*,LPCWSTR,DWORD*,BLOB**)") MemoryAddress GetImpersonationSidBlobs$get(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3Vtbl$GetImpersonationSidBlobs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetImpersonationSidBlobs$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor3*,LPCWSTR,DWORD*,BLOB**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetImpersonationSidBlobs$VH().set(seg, x);
        }
        public static void GetImpersonationSidBlobs$set(@C("struct IUrlAccessor3Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor3*,LPCWSTR,DWORD*,BLOB**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3Vtbl$GetImpersonationSidBlobs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IUrlAccessor3Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IUrlAccessor3Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IUrlAccessor3Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IUrlAccessor3Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IUrlAccessor3Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IUrlAccessor3Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IUrlAccessor3Vtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct IUrlAccessor3")public static class IUrlAccessor3 {

        /* package-private */ IUrlAccessor3() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.IUrlAccessor3$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$0.IUrlAccessor3$lpVtbl$VH();
        }
        public static  @C("struct IUrlAccessor3Vtbl*") MemoryAddress lpVtbl$get(@C("struct IUrlAccessor3") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IUrlAccessor3Vtbl*") MemoryAddress lpVtbl$get(@C("struct IUrlAccessor3") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor3$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IUrlAccessor3") MemorySegment seg, @C("struct IUrlAccessor3Vtbl*") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IUrlAccessor3") MemorySegment seg, long index, @C("struct IUrlAccessor3Vtbl*") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor3$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IUrlAccessor3") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IUrlAccessor3") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IUrlAccessor3[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IUrlAccessor3[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IUrlAccessor3*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IUrlAccessor3*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IUrlAccessor3") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemorySegment IID_IUrlAccessor4$SEGMENT() {
        return searchapi_h$constants$0.IID_IUrlAccessor4$SEGMENT();
    }
    @C("struct IUrlAccessor4Vtbl")public static class IUrlAccessor4Vtbl {

        /* package-private */ IUrlAccessor4Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IUrlAccessor4*)") MemoryAddress AddRef$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IUrlAccessor4*)") MemoryAddress AddRef$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("ULONG(*)(IUrlAccessor4*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("ULONG(*)(IUrlAccessor4*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IUrlAccessor4*)") MemoryAddress Release$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IUrlAccessor4*)") MemoryAddress Release$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("ULONG(*)(IUrlAccessor4*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("ULONG(*)(IUrlAccessor4*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRequestParameter$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$AddRequestParameter$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,PROPSPEC*,PROPVARIANT*)") MemoryAddress AddRequestParameter$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$AddRequestParameter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,PROPSPEC*,PROPVARIANT*)") MemoryAddress AddRequestParameter$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$AddRequestParameter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRequestParameter$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,PROPSPEC*,PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$AddRequestParameter$VH().set(seg, x);
        }
        public static void AddRequestParameter$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,PROPSPEC*,PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$AddRequestParameter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDocFormat$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$GetDocFormat$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetDocFormat$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetDocFormat$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetDocFormat$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetDocFormat$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDocFormat$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetDocFormat$VH().set(seg, x);
        }
        public static void GetDocFormat$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetDocFormat$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCLSID$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$GetCLSID$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,CLSID*)") MemoryAddress GetCLSID$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetCLSID$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,CLSID*)") MemoryAddress GetCLSID$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetCLSID$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCLSID$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,CLSID*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetCLSID$VH().set(seg, x);
        }
        public static void GetCLSID$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,CLSID*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetCLSID$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetHost$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$GetHost$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetHost$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetHost$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetHost$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetHost$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetHost$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetHost$VH().set(seg, x);
        }
        public static void GetHost$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetHost$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IsDirectory$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$IsDirectory$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*)") MemoryAddress IsDirectory$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$IsDirectory$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*)") MemoryAddress IsDirectory$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$IsDirectory$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IsDirectory$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$IsDirectory$VH().set(seg, x);
        }
        public static void IsDirectory$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$IsDirectory$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSize$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$GetSize$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,ULONGLONG*)") MemoryAddress GetSize$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetSize$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,ULONGLONG*)") MemoryAddress GetSize$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSize$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,ULONGLONG*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetSize$VH().set(seg, x);
        }
        public static void GetSize$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,ULONGLONG*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetLastModified$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$GetLastModified$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,FILETIME*)") MemoryAddress GetLastModified$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetLastModified$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,FILETIME*)") MemoryAddress GetLastModified$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetLastModified$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetLastModified$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,FILETIME*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetLastModified$VH().set(seg, x);
        }
        public static void GetLastModified$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,FILETIME*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetLastModified$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetFileName$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$GetFileName$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetFileName$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetFileName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetFileName$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetFileName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetFileName$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetFileName$VH().set(seg, x);
        }
        public static void GetFileName$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetFileName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSecurityDescriptor$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$GetSecurityDescriptor$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,BYTE*,DWORD,DWORD*)") MemoryAddress GetSecurityDescriptor$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetSecurityDescriptor$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,BYTE*,DWORD,DWORD*)") MemoryAddress GetSecurityDescriptor$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetSecurityDescriptor$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSecurityDescriptor$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,BYTE*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetSecurityDescriptor$VH().set(seg, x);
        }
        public static void GetSecurityDescriptor$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,BYTE*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetSecurityDescriptor$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetRedirectedURL$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$GetRedirectedURL$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetRedirectedURL$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetRedirectedURL$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetRedirectedURL$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetRedirectedURL$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetRedirectedURL$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetRedirectedURL$VH().set(seg, x);
        }
        public static void GetRedirectedURL$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetRedirectedURL$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetSecurityProvider$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$GetSecurityProvider$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,CLSID*)") MemoryAddress GetSecurityProvider$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetSecurityProvider$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,CLSID*)") MemoryAddress GetSecurityProvider$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetSecurityProvider$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetSecurityProvider$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,CLSID*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetSecurityProvider$VH().set(seg, x);
        }
        public static void GetSecurityProvider$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,CLSID*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetSecurityProvider$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BindToStream$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$BindToStream$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,IStream**)") MemoryAddress BindToStream$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$BindToStream$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,IStream**)") MemoryAddress BindToStream$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$BindToStream$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BindToStream$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,IStream**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$BindToStream$VH().set(seg, x);
        }
        public static void BindToStream$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,IStream**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$BindToStream$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle BindToFilter$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$BindToFilter$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,IFilter**)") MemoryAddress BindToFilter$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$BindToFilter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,IFilter**)") MemoryAddress BindToFilter$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$BindToFilter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void BindToFilter$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,IFilter**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$BindToFilter$VH().set(seg, x);
        }
        public static void BindToFilter$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,IFilter**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$BindToFilter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDisplayUrl$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$GetDisplayUrl$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetDisplayUrl$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetDisplayUrl$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetDisplayUrl$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetDisplayUrl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDisplayUrl$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetDisplayUrl$VH().set(seg, x);
        }
        public static void GetDisplayUrl$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetDisplayUrl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IsDocument$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$IsDocument$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*)") MemoryAddress IsDocument$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$IsDocument$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*)") MemoryAddress IsDocument$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$IsDocument$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IsDocument$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$IsDocument$VH().set(seg, x);
        }
        public static void IsDocument$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$IsDocument$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCodePage$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$GetCodePage$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetCodePage$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetCodePage$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress GetCodePage$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetCodePage$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCodePage$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetCodePage$VH().set(seg, x);
        }
        public static void GetCodePage$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,WCHAR*,DWORD,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetCodePage$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetImpersonationSidBlobs$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$GetImpersonationSidBlobs$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,LPCWSTR,DWORD*,BLOB**)") MemoryAddress GetImpersonationSidBlobs$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetImpersonationSidBlobs$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,LPCWSTR,DWORD*,BLOB**)") MemoryAddress GetImpersonationSidBlobs$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$GetImpersonationSidBlobs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetImpersonationSidBlobs$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,LPCWSTR,DWORD*,BLOB**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetImpersonationSidBlobs$VH().set(seg, x);
        }
        public static void GetImpersonationSidBlobs$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,LPCWSTR,DWORD*,BLOB**)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$GetImpersonationSidBlobs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ShouldIndexItemContent$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$ShouldIndexItemContent$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,BOOL*)") MemoryAddress ShouldIndexItemContent$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$ShouldIndexItemContent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,BOOL*)") MemoryAddress ShouldIndexItemContent$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$ShouldIndexItemContent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ShouldIndexItemContent$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$ShouldIndexItemContent$VH().set(seg, x);
        }
        public static void ShouldIndexItemContent$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$ShouldIndexItemContent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ShouldIndexProperty$VH() {
            return searchapi_h$constants$0.IUrlAccessor4Vtbl$ShouldIndexProperty$VH();
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,const PROPERTYKEY*,BOOL*)") MemoryAddress ShouldIndexProperty$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$ShouldIndexProperty$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IUrlAccessor4*,const PROPERTYKEY*,BOOL*)") MemoryAddress ShouldIndexProperty$get(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4Vtbl$ShouldIndexProperty$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ShouldIndexProperty$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, @C("HRESULT(*)(IUrlAccessor4*,const PROPERTYKEY*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$ShouldIndexProperty$VH().set(seg, x);
        }
        public static void ShouldIndexProperty$set(@C("struct IUrlAccessor4Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(IUrlAccessor4*,const PROPERTYKEY*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4Vtbl$ShouldIndexProperty$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IUrlAccessor4Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IUrlAccessor4Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IUrlAccessor4Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IUrlAccessor4Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IUrlAccessor4Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IUrlAccessor4Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IUrlAccessor4Vtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct IUrlAccessor4")public static class IUrlAccessor4 {

        /* package-private */ IUrlAccessor4() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.IUrlAccessor4$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$0.IUrlAccessor4$lpVtbl$VH();
        }
        public static  @C("struct IUrlAccessor4Vtbl*") MemoryAddress lpVtbl$get(@C("struct IUrlAccessor4") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IUrlAccessor4Vtbl*") MemoryAddress lpVtbl$get(@C("struct IUrlAccessor4") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IUrlAccessor4$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IUrlAccessor4") MemorySegment seg, @C("struct IUrlAccessor4Vtbl*") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IUrlAccessor4") MemorySegment seg, long index, @C("struct IUrlAccessor4Vtbl*") MemoryAddress x) {
            searchapi_h$constants$0.IUrlAccessor4$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IUrlAccessor4") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IUrlAccessor4") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IUrlAccessor4[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IUrlAccessor4[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IUrlAccessor4*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IUrlAccessor4*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IUrlAccessor4") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemoryLayout __MIDL_itf_searchapi_0000_0004_v0_0_c_ifspec$LAYOUT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0004_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0004_v0_0_c_ifspec$VH() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0004_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0004_v0_0_c_ifspec$SEGMENT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0004_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0004_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0004_v0_0_c_ifspec$VH().get(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0004_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0004_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0004_v0_0_c_ifspec$VH().set(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0004_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0004_v0_0_s_ifspec$LAYOUT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0004_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0004_v0_0_s_ifspec$VH() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0004_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0004_v0_0_s_ifspec$SEGMENT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0004_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0004_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0004_v0_0_s_ifspec$VH().get(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0004_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0004_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0004_v0_0_s_ifspec$VH().set(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0004_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_IOpLockStatus$SEGMENT() {
        return searchapi_h$constants$0.IID_IOpLockStatus$SEGMENT();
    }
    @C("struct IOpLockStatusVtbl")public static class IOpLockStatusVtbl {

        /* package-private */ IOpLockStatusVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.IOpLockStatusVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$0.IOpLockStatusVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IOpLockStatus*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IOpLockStatusVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IOpLockStatusVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IOpLockStatus*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IOpLockStatusVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IOpLockStatusVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IOpLockStatusVtbl") MemorySegment seg, @C("HRESULT(*)(IOpLockStatus*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.IOpLockStatusVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IOpLockStatusVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IOpLockStatus*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.IOpLockStatusVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$0.IOpLockStatusVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IOpLockStatus*)") MemoryAddress AddRef$get(@C("struct IOpLockStatusVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IOpLockStatusVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IOpLockStatus*)") MemoryAddress AddRef$get(@C("struct IOpLockStatusVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IOpLockStatusVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IOpLockStatusVtbl") MemorySegment seg, @C("ULONG(*)(IOpLockStatus*)") MemoryAddress x) {
            searchapi_h$constants$0.IOpLockStatusVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IOpLockStatusVtbl") MemorySegment seg, long index, @C("ULONG(*)(IOpLockStatus*)") MemoryAddress x) {
            searchapi_h$constants$0.IOpLockStatusVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$0.IOpLockStatusVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IOpLockStatus*)") MemoryAddress Release$get(@C("struct IOpLockStatusVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IOpLockStatusVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IOpLockStatus*)") MemoryAddress Release$get(@C("struct IOpLockStatusVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IOpLockStatusVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IOpLockStatusVtbl") MemorySegment seg, @C("ULONG(*)(IOpLockStatus*)") MemoryAddress x) {
            searchapi_h$constants$0.IOpLockStatusVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IOpLockStatusVtbl") MemorySegment seg, long index, @C("ULONG(*)(IOpLockStatus*)") MemoryAddress x) {
            searchapi_h$constants$0.IOpLockStatusVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IsOplockValid$VH() {
            return searchapi_h$constants$0.IOpLockStatusVtbl$IsOplockValid$VH();
        }
        public static  @C("HRESULT(*)(IOpLockStatus*,BOOL*)") MemoryAddress IsOplockValid$get(@C("struct IOpLockStatusVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IOpLockStatusVtbl$IsOplockValid$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IOpLockStatus*,BOOL*)") MemoryAddress IsOplockValid$get(@C("struct IOpLockStatusVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IOpLockStatusVtbl$IsOplockValid$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IsOplockValid$set(@C("struct IOpLockStatusVtbl") MemorySegment seg, @C("HRESULT(*)(IOpLockStatus*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.IOpLockStatusVtbl$IsOplockValid$VH().set(seg, x);
        }
        public static void IsOplockValid$set(@C("struct IOpLockStatusVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IOpLockStatus*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.IOpLockStatusVtbl$IsOplockValid$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IsOplockBroken$VH() {
            return searchapi_h$constants$0.IOpLockStatusVtbl$IsOplockBroken$VH();
        }
        public static  @C("HRESULT(*)(IOpLockStatus*,BOOL*)") MemoryAddress IsOplockBroken$get(@C("struct IOpLockStatusVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IOpLockStatusVtbl$IsOplockBroken$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IOpLockStatus*,BOOL*)") MemoryAddress IsOplockBroken$get(@C("struct IOpLockStatusVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IOpLockStatusVtbl$IsOplockBroken$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IsOplockBroken$set(@C("struct IOpLockStatusVtbl") MemorySegment seg, @C("HRESULT(*)(IOpLockStatus*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.IOpLockStatusVtbl$IsOplockBroken$VH().set(seg, x);
        }
        public static void IsOplockBroken$set(@C("struct IOpLockStatusVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IOpLockStatus*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.IOpLockStatusVtbl$IsOplockBroken$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetOplockEventHandle$VH() {
            return searchapi_h$constants$0.IOpLockStatusVtbl$GetOplockEventHandle$VH();
        }
        public static  @C("HRESULT(*)(IOpLockStatus*,HANDLE*)") MemoryAddress GetOplockEventHandle$get(@C("struct IOpLockStatusVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IOpLockStatusVtbl$GetOplockEventHandle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IOpLockStatus*,HANDLE*)") MemoryAddress GetOplockEventHandle$get(@C("struct IOpLockStatusVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IOpLockStatusVtbl$GetOplockEventHandle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetOplockEventHandle$set(@C("struct IOpLockStatusVtbl") MemorySegment seg, @C("HRESULT(*)(IOpLockStatus*,HANDLE*)") MemoryAddress x) {
            searchapi_h$constants$0.IOpLockStatusVtbl$GetOplockEventHandle$VH().set(seg, x);
        }
        public static void GetOplockEventHandle$set(@C("struct IOpLockStatusVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IOpLockStatus*,HANDLE*)") MemoryAddress x) {
            searchapi_h$constants$0.IOpLockStatusVtbl$GetOplockEventHandle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IOpLockStatusVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IOpLockStatusVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IOpLockStatusVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IOpLockStatusVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IOpLockStatusVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IOpLockStatusVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IOpLockStatusVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct IOpLockStatus")public static class IOpLockStatus {

        /* package-private */ IOpLockStatus() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.IOpLockStatus$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$0.IOpLockStatus$lpVtbl$VH();
        }
        public static  @C("struct IOpLockStatusVtbl*") MemoryAddress lpVtbl$get(@C("struct IOpLockStatus") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IOpLockStatus$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IOpLockStatusVtbl*") MemoryAddress lpVtbl$get(@C("struct IOpLockStatus") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IOpLockStatus$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IOpLockStatus") MemorySegment seg, @C("struct IOpLockStatusVtbl*") MemoryAddress x) {
            searchapi_h$constants$0.IOpLockStatus$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IOpLockStatus") MemorySegment seg, long index, @C("struct IOpLockStatusVtbl*") MemoryAddress x) {
            searchapi_h$constants$0.IOpLockStatus$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IOpLockStatus") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IOpLockStatus") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IOpLockStatus[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IOpLockStatus[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IOpLockStatus*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IOpLockStatus*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IOpLockStatus") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemorySegment IID_ISearchProtocolThreadContext$SEGMENT() {
        return searchapi_h$constants$0.IID_ISearchProtocolThreadContext$SEGMENT();
    }
    @C("struct ISearchProtocolThreadContextVtbl")public static class ISearchProtocolThreadContextVtbl {

        /* package-private */ ISearchProtocolThreadContextVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ISearchProtocolThreadContext*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchProtocolThreadContext*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchProtocolThreadContext*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchProtocolThreadContext*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ISearchProtocolThreadContext*)") MemoryAddress AddRef$get(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchProtocolThreadContext*)") MemoryAddress AddRef$get(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, @C("ULONG(*)(ISearchProtocolThreadContext*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchProtocolThreadContext*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ISearchProtocolThreadContext*)") MemoryAddress Release$get(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchProtocolThreadContext*)") MemoryAddress Release$get(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, @C("ULONG(*)(ISearchProtocolThreadContext*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchProtocolThreadContext*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ThreadInit$VH() {
            return searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$ThreadInit$VH();
        }
        public static  @C("HRESULT(*)(ISearchProtocolThreadContext*)") MemoryAddress ThreadInit$get(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$ThreadInit$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchProtocolThreadContext*)") MemoryAddress ThreadInit$get(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$ThreadInit$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ThreadInit$set(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchProtocolThreadContext*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$ThreadInit$VH().set(seg, x);
        }
        public static void ThreadInit$set(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchProtocolThreadContext*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$ThreadInit$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ThreadShutdown$VH() {
            return searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$ThreadShutdown$VH();
        }
        public static  @C("HRESULT(*)(ISearchProtocolThreadContext*)") MemoryAddress ThreadShutdown$get(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$ThreadShutdown$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchProtocolThreadContext*)") MemoryAddress ThreadShutdown$get(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$ThreadShutdown$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ThreadShutdown$set(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchProtocolThreadContext*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$ThreadShutdown$VH().set(seg, x);
        }
        public static void ThreadShutdown$set(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchProtocolThreadContext*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$ThreadShutdown$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ThreadIdle$VH() {
            return searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$ThreadIdle$VH();
        }
        public static  @C("HRESULT(*)(ISearchProtocolThreadContext*,DWORD)") MemoryAddress ThreadIdle$get(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$ThreadIdle$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchProtocolThreadContext*,DWORD)") MemoryAddress ThreadIdle$get(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$ThreadIdle$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ThreadIdle$set(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchProtocolThreadContext*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$ThreadIdle$VH().set(seg, x);
        }
        public static void ThreadIdle$set(@C("struct ISearchProtocolThreadContextVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchProtocolThreadContext*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolThreadContextVtbl$ThreadIdle$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchProtocolThreadContextVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchProtocolThreadContextVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchProtocolThreadContextVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchProtocolThreadContextVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchProtocolThreadContextVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchProtocolThreadContextVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchProtocolThreadContextVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct ISearchProtocolThreadContext")public static class ISearchProtocolThreadContext {

        /* package-private */ ISearchProtocolThreadContext() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.ISearchProtocolThreadContext$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$0.ISearchProtocolThreadContext$lpVtbl$VH();
        }
        public static  @C("struct ISearchProtocolThreadContextVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchProtocolThreadContext") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolThreadContext$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ISearchProtocolThreadContextVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchProtocolThreadContext") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolThreadContext$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ISearchProtocolThreadContext") MemorySegment seg, @C("struct ISearchProtocolThreadContextVtbl*") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolThreadContext$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ISearchProtocolThreadContext") MemorySegment seg, long index, @C("struct ISearchProtocolThreadContextVtbl*") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolThreadContext$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchProtocolThreadContext") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchProtocolThreadContext") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchProtocolThreadContext[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchProtocolThreadContext[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchProtocolThreadContext*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchProtocolThreadContext*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchProtocolThreadContext") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct _TIMEOUT_INFO")public static class _TIMEOUT_INFO {

        /* package-private */ _TIMEOUT_INFO() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0._TIMEOUT_INFO$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return searchapi_h$constants$0._TIMEOUT_INFO$dwSize$VH();
        }
        public static  @C("DWORD") int dwSize$get(@C("struct _TIMEOUT_INFO") MemorySegment seg) {
            return (int)searchapi_h$constants$0._TIMEOUT_INFO$dwSize$VH().get(seg);
        }
        public static  @C("DWORD") int dwSize$get(@C("struct _TIMEOUT_INFO") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$0._TIMEOUT_INFO$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set(@C("struct _TIMEOUT_INFO") MemorySegment seg, @C("DWORD") int x) {
            searchapi_h$constants$0._TIMEOUT_INFO$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(@C("struct _TIMEOUT_INFO") MemorySegment seg, long index, @C("DWORD") int x) {
            searchapi_h$constants$0._TIMEOUT_INFO$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwConnectTimeout$VH() {
            return searchapi_h$constants$0._TIMEOUT_INFO$dwConnectTimeout$VH();
        }
        public static  @C("DWORD") int dwConnectTimeout$get(@C("struct _TIMEOUT_INFO") MemorySegment seg) {
            return (int)searchapi_h$constants$0._TIMEOUT_INFO$dwConnectTimeout$VH().get(seg);
        }
        public static  @C("DWORD") int dwConnectTimeout$get(@C("struct _TIMEOUT_INFO") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$0._TIMEOUT_INFO$dwConnectTimeout$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwConnectTimeout$set(@C("struct _TIMEOUT_INFO") MemorySegment seg, @C("DWORD") int x) {
            searchapi_h$constants$0._TIMEOUT_INFO$dwConnectTimeout$VH().set(seg, x);
        }
        public static void dwConnectTimeout$set(@C("struct _TIMEOUT_INFO") MemorySegment seg, long index, @C("DWORD") int x) {
            searchapi_h$constants$0._TIMEOUT_INFO$dwConnectTimeout$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwDataTimeout$VH() {
            return searchapi_h$constants$0._TIMEOUT_INFO$dwDataTimeout$VH();
        }
        public static  @C("DWORD") int dwDataTimeout$get(@C("struct _TIMEOUT_INFO") MemorySegment seg) {
            return (int)searchapi_h$constants$0._TIMEOUT_INFO$dwDataTimeout$VH().get(seg);
        }
        public static  @C("DWORD") int dwDataTimeout$get(@C("struct _TIMEOUT_INFO") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$0._TIMEOUT_INFO$dwDataTimeout$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwDataTimeout$set(@C("struct _TIMEOUT_INFO") MemorySegment seg, @C("DWORD") int x) {
            searchapi_h$constants$0._TIMEOUT_INFO$dwDataTimeout$VH().set(seg, x);
        }
        public static void dwDataTimeout$set(@C("struct _TIMEOUT_INFO") MemorySegment seg, long index, @C("DWORD") int x) {
            searchapi_h$constants$0._TIMEOUT_INFO$dwDataTimeout$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct _TIMEOUT_INFO") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct _TIMEOUT_INFO") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct _TIMEOUT_INFO[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct _TIMEOUT_INFO[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct _TIMEOUT_INFO*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct _TIMEOUT_INFO*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct _TIMEOUT_INFO") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct _TIMEOUT_INFO")public static class TIMEOUT_INFO extends _TIMEOUT_INFO {

        /* package-private */ TIMEOUT_INFO() {}
    }

    public static @C("int") int PROXY_ACCESS_PRECONFIG() {
        return searchapi_h$constants$0.PROXY_ACCESS_PRECONFIG();
    }
    public static @C("int") int PROXY_ACCESS_DIRECT() {
        return searchapi_h$constants$0.PROXY_ACCESS_DIRECT();
    }
    public static @C("int") int PROXY_ACCESS_PROXY() {
        return searchapi_h$constants$0.PROXY_ACCESS_PROXY();
    }
    @C("struct _PROXY_INFO")public static class _PROXY_INFO {

        /* package-private */ _PROXY_INFO() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0._PROXY_INFO$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return searchapi_h$constants$0._PROXY_INFO$dwSize$VH();
        }
        public static  @C("DWORD") int dwSize$get(@C("struct _PROXY_INFO") MemorySegment seg) {
            return (int)searchapi_h$constants$0._PROXY_INFO$dwSize$VH().get(seg);
        }
        public static  @C("DWORD") int dwSize$get(@C("struct _PROXY_INFO") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$0._PROXY_INFO$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set(@C("struct _PROXY_INFO") MemorySegment seg, @C("DWORD") int x) {
            searchapi_h$constants$0._PROXY_INFO$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(@C("struct _PROXY_INFO") MemorySegment seg, long index, @C("DWORD") int x) {
            searchapi_h$constants$0._PROXY_INFO$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pcwszUserAgent$VH() {
            return searchapi_h$constants$0._PROXY_INFO$pcwszUserAgent$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszUserAgent$get(@C("struct _PROXY_INFO") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._PROXY_INFO$pcwszUserAgent$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszUserAgent$get(@C("struct _PROXY_INFO") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._PROXY_INFO$pcwszUserAgent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pcwszUserAgent$set(@C("struct _PROXY_INFO") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._PROXY_INFO$pcwszUserAgent$VH().set(seg, x);
        }
        public static void pcwszUserAgent$set(@C("struct _PROXY_INFO") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._PROXY_INFO$pcwszUserAgent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle paUseProxy$VH() {
            return searchapi_h$constants$0._PROXY_INFO$paUseProxy$VH();
        }
        public static  @C("PROXY_ACCESS") int paUseProxy$get(@C("struct _PROXY_INFO") MemorySegment seg) {
            return (int)searchapi_h$constants$0._PROXY_INFO$paUseProxy$VH().get(seg);
        }
        public static  @C("PROXY_ACCESS") int paUseProxy$get(@C("struct _PROXY_INFO") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$0._PROXY_INFO$paUseProxy$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void paUseProxy$set(@C("struct _PROXY_INFO") MemorySegment seg, @C("PROXY_ACCESS") int x) {
            searchapi_h$constants$0._PROXY_INFO$paUseProxy$VH().set(seg, x);
        }
        public static void paUseProxy$set(@C("struct _PROXY_INFO") MemorySegment seg, long index, @C("PROXY_ACCESS") int x) {
            searchapi_h$constants$0._PROXY_INFO$paUseProxy$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle fLocalBypass$VH() {
            return searchapi_h$constants$0._PROXY_INFO$fLocalBypass$VH();
        }
        public static  @C("BOOL") int fLocalBypass$get(@C("struct _PROXY_INFO") MemorySegment seg) {
            return (int)searchapi_h$constants$0._PROXY_INFO$fLocalBypass$VH().get(seg);
        }
        public static  @C("BOOL") int fLocalBypass$get(@C("struct _PROXY_INFO") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$0._PROXY_INFO$fLocalBypass$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void fLocalBypass$set(@C("struct _PROXY_INFO") MemorySegment seg, @C("BOOL") int x) {
            searchapi_h$constants$0._PROXY_INFO$fLocalBypass$VH().set(seg, x);
        }
        public static void fLocalBypass$set(@C("struct _PROXY_INFO") MemorySegment seg, long index, @C("BOOL") int x) {
            searchapi_h$constants$0._PROXY_INFO$fLocalBypass$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwPortNumber$VH() {
            return searchapi_h$constants$0._PROXY_INFO$dwPortNumber$VH();
        }
        public static  @C("DWORD") int dwPortNumber$get(@C("struct _PROXY_INFO") MemorySegment seg) {
            return (int)searchapi_h$constants$0._PROXY_INFO$dwPortNumber$VH().get(seg);
        }
        public static  @C("DWORD") int dwPortNumber$get(@C("struct _PROXY_INFO") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$0._PROXY_INFO$dwPortNumber$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwPortNumber$set(@C("struct _PROXY_INFO") MemorySegment seg, @C("DWORD") int x) {
            searchapi_h$constants$0._PROXY_INFO$dwPortNumber$VH().set(seg, x);
        }
        public static void dwPortNumber$set(@C("struct _PROXY_INFO") MemorySegment seg, long index, @C("DWORD") int x) {
            searchapi_h$constants$0._PROXY_INFO$dwPortNumber$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pcwszProxyName$VH() {
            return searchapi_h$constants$0._PROXY_INFO$pcwszProxyName$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszProxyName$get(@C("struct _PROXY_INFO") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._PROXY_INFO$pcwszProxyName$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszProxyName$get(@C("struct _PROXY_INFO") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._PROXY_INFO$pcwszProxyName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pcwszProxyName$set(@C("struct _PROXY_INFO") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._PROXY_INFO$pcwszProxyName$VH().set(seg, x);
        }
        public static void pcwszProxyName$set(@C("struct _PROXY_INFO") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._PROXY_INFO$pcwszProxyName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pcwszBypassList$VH() {
            return searchapi_h$constants$0._PROXY_INFO$pcwszBypassList$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszBypassList$get(@C("struct _PROXY_INFO") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._PROXY_INFO$pcwszBypassList$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszBypassList$get(@C("struct _PROXY_INFO") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._PROXY_INFO$pcwszBypassList$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pcwszBypassList$set(@C("struct _PROXY_INFO") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._PROXY_INFO$pcwszBypassList$VH().set(seg, x);
        }
        public static void pcwszBypassList$set(@C("struct _PROXY_INFO") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._PROXY_INFO$pcwszBypassList$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct _PROXY_INFO") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct _PROXY_INFO") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct _PROXY_INFO[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct _PROXY_INFO[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct _PROXY_INFO*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct _PROXY_INFO*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct _PROXY_INFO") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct _PROXY_INFO")public static class PROXY_INFO extends _PROXY_INFO {

        /* package-private */ PROXY_INFO() {}
    }

    public static @C("int") int eAUTH_TYPE_ANONYMOUS() {
        return searchapi_h$constants$0.eAUTH_TYPE_ANONYMOUS();
    }
    public static @C("int") int eAUTH_TYPE_NTLM() {
        return searchapi_h$constants$0.eAUTH_TYPE_NTLM();
    }
    public static @C("int") int eAUTH_TYPE_BASIC() {
        return searchapi_h$constants$0.eAUTH_TYPE_BASIC();
    }
    @C("struct _AUTHENTICATION_INFO")public static class _AUTHENTICATION_INFO {

        /* package-private */ _AUTHENTICATION_INFO() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0._AUTHENTICATION_INFO$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return searchapi_h$constants$0._AUTHENTICATION_INFO$dwSize$VH();
        }
        public static  @C("DWORD") int dwSize$get(@C("struct _AUTHENTICATION_INFO") MemorySegment seg) {
            return (int)searchapi_h$constants$0._AUTHENTICATION_INFO$dwSize$VH().get(seg);
        }
        public static  @C("DWORD") int dwSize$get(@C("struct _AUTHENTICATION_INFO") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$0._AUTHENTICATION_INFO$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set(@C("struct _AUTHENTICATION_INFO") MemorySegment seg, @C("DWORD") int x) {
            searchapi_h$constants$0._AUTHENTICATION_INFO$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(@C("struct _AUTHENTICATION_INFO") MemorySegment seg, long index, @C("DWORD") int x) {
            searchapi_h$constants$0._AUTHENTICATION_INFO$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle atAuthenticationType$VH() {
            return searchapi_h$constants$0._AUTHENTICATION_INFO$atAuthenticationType$VH();
        }
        public static  @C("AUTH_TYPE") int atAuthenticationType$get(@C("struct _AUTHENTICATION_INFO") MemorySegment seg) {
            return (int)searchapi_h$constants$0._AUTHENTICATION_INFO$atAuthenticationType$VH().get(seg);
        }
        public static  @C("AUTH_TYPE") int atAuthenticationType$get(@C("struct _AUTHENTICATION_INFO") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$0._AUTHENTICATION_INFO$atAuthenticationType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void atAuthenticationType$set(@C("struct _AUTHENTICATION_INFO") MemorySegment seg, @C("AUTH_TYPE") int x) {
            searchapi_h$constants$0._AUTHENTICATION_INFO$atAuthenticationType$VH().set(seg, x);
        }
        public static void atAuthenticationType$set(@C("struct _AUTHENTICATION_INFO") MemorySegment seg, long index, @C("AUTH_TYPE") int x) {
            searchapi_h$constants$0._AUTHENTICATION_INFO$atAuthenticationType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pcwszUser$VH() {
            return searchapi_h$constants$0._AUTHENTICATION_INFO$pcwszUser$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszUser$get(@C("struct _AUTHENTICATION_INFO") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._AUTHENTICATION_INFO$pcwszUser$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszUser$get(@C("struct _AUTHENTICATION_INFO") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._AUTHENTICATION_INFO$pcwszUser$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pcwszUser$set(@C("struct _AUTHENTICATION_INFO") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._AUTHENTICATION_INFO$pcwszUser$VH().set(seg, x);
        }
        public static void pcwszUser$set(@C("struct _AUTHENTICATION_INFO") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._AUTHENTICATION_INFO$pcwszUser$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pcwszPassword$VH() {
            return searchapi_h$constants$0._AUTHENTICATION_INFO$pcwszPassword$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszPassword$get(@C("struct _AUTHENTICATION_INFO") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._AUTHENTICATION_INFO$pcwszPassword$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszPassword$get(@C("struct _AUTHENTICATION_INFO") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._AUTHENTICATION_INFO$pcwszPassword$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pcwszPassword$set(@C("struct _AUTHENTICATION_INFO") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._AUTHENTICATION_INFO$pcwszPassword$VH().set(seg, x);
        }
        public static void pcwszPassword$set(@C("struct _AUTHENTICATION_INFO") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._AUTHENTICATION_INFO$pcwszPassword$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct _AUTHENTICATION_INFO") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct _AUTHENTICATION_INFO") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct _AUTHENTICATION_INFO[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct _AUTHENTICATION_INFO[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct _AUTHENTICATION_INFO*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct _AUTHENTICATION_INFO*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct _AUTHENTICATION_INFO") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct _AUTHENTICATION_INFO")public static class AUTHENTICATION_INFO extends _AUTHENTICATION_INFO {

        /* package-private */ AUTHENTICATION_INFO() {}
    }

    @C("struct _INCREMENTAL_ACCESS_INFO")public static class _INCREMENTAL_ACCESS_INFO {

        /* package-private */ _INCREMENTAL_ACCESS_INFO() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0._INCREMENTAL_ACCESS_INFO$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return searchapi_h$constants$0._INCREMENTAL_ACCESS_INFO$dwSize$VH();
        }
        public static  @C("DWORD") int dwSize$get(@C("struct _INCREMENTAL_ACCESS_INFO") MemorySegment seg) {
            return (int)searchapi_h$constants$0._INCREMENTAL_ACCESS_INFO$dwSize$VH().get(seg);
        }
        public static  @C("DWORD") int dwSize$get(@C("struct _INCREMENTAL_ACCESS_INFO") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$0._INCREMENTAL_ACCESS_INFO$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set(@C("struct _INCREMENTAL_ACCESS_INFO") MemorySegment seg, @C("DWORD") int x) {
            searchapi_h$constants$0._INCREMENTAL_ACCESS_INFO$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(@C("struct _INCREMENTAL_ACCESS_INFO") MemorySegment seg, long index, @C("DWORD") int x) {
            searchapi_h$constants$0._INCREMENTAL_ACCESS_INFO$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment ftLastModifiedTime$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(4, 8));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct _INCREMENTAL_ACCESS_INFO") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct _INCREMENTAL_ACCESS_INFO") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct _INCREMENTAL_ACCESS_INFO[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct _INCREMENTAL_ACCESS_INFO[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct _INCREMENTAL_ACCESS_INFO*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct _INCREMENTAL_ACCESS_INFO*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct _INCREMENTAL_ACCESS_INFO") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct _INCREMENTAL_ACCESS_INFO")public static class INCREMENTAL_ACCESS_INFO extends _INCREMENTAL_ACCESS_INFO {

        /* package-private */ INCREMENTAL_ACCESS_INFO() {}
    }

    @C("struct _ITEM_INFO")public static class _ITEM_INFO {

        /* package-private */ _ITEM_INFO() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0._ITEM_INFO$struct$LAYOUT();
        }
        public static VarHandle dwSize$VH() {
            return searchapi_h$constants$0._ITEM_INFO$dwSize$VH();
        }
        public static  @C("DWORD") int dwSize$get(@C("struct _ITEM_INFO") MemorySegment seg) {
            return (int)searchapi_h$constants$0._ITEM_INFO$dwSize$VH().get(seg);
        }
        public static  @C("DWORD") int dwSize$get(@C("struct _ITEM_INFO") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$0._ITEM_INFO$dwSize$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwSize$set(@C("struct _ITEM_INFO") MemorySegment seg, @C("DWORD") int x) {
            searchapi_h$constants$0._ITEM_INFO$dwSize$VH().set(seg, x);
        }
        public static void dwSize$set(@C("struct _ITEM_INFO") MemorySegment seg, long index, @C("DWORD") int x) {
            searchapi_h$constants$0._ITEM_INFO$dwSize$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pcwszFromEMail$VH() {
            return searchapi_h$constants$0._ITEM_INFO$pcwszFromEMail$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszFromEMail$get(@C("struct _ITEM_INFO") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._ITEM_INFO$pcwszFromEMail$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszFromEMail$get(@C("struct _ITEM_INFO") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._ITEM_INFO$pcwszFromEMail$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pcwszFromEMail$set(@C("struct _ITEM_INFO") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._ITEM_INFO$pcwszFromEMail$VH().set(seg, x);
        }
        public static void pcwszFromEMail$set(@C("struct _ITEM_INFO") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._ITEM_INFO$pcwszFromEMail$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pcwszApplicationName$VH() {
            return searchapi_h$constants$0._ITEM_INFO$pcwszApplicationName$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszApplicationName$get(@C("struct _ITEM_INFO") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._ITEM_INFO$pcwszApplicationName$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszApplicationName$get(@C("struct _ITEM_INFO") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._ITEM_INFO$pcwszApplicationName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pcwszApplicationName$set(@C("struct _ITEM_INFO") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._ITEM_INFO$pcwszApplicationName$VH().set(seg, x);
        }
        public static void pcwszApplicationName$set(@C("struct _ITEM_INFO") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._ITEM_INFO$pcwszApplicationName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pcwszCatalogName$VH() {
            return searchapi_h$constants$0._ITEM_INFO$pcwszCatalogName$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszCatalogName$get(@C("struct _ITEM_INFO") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._ITEM_INFO$pcwszCatalogName$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszCatalogName$get(@C("struct _ITEM_INFO") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._ITEM_INFO$pcwszCatalogName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pcwszCatalogName$set(@C("struct _ITEM_INFO") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._ITEM_INFO$pcwszCatalogName$VH().set(seg, x);
        }
        public static void pcwszCatalogName$set(@C("struct _ITEM_INFO") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._ITEM_INFO$pcwszCatalogName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pcwszContentClass$VH() {
            return searchapi_h$constants$0._ITEM_INFO$pcwszContentClass$VH();
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszContentClass$get(@C("struct _ITEM_INFO") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._ITEM_INFO$pcwszContentClass$VH().get(seg);
        }
        public static  @C("LPCWSTR") MemoryAddress pcwszContentClass$get(@C("struct _ITEM_INFO") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0._ITEM_INFO$pcwszContentClass$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pcwszContentClass$set(@C("struct _ITEM_INFO") MemorySegment seg, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._ITEM_INFO$pcwszContentClass$VH().set(seg, x);
        }
        public static void pcwszContentClass$set(@C("struct _ITEM_INFO") MemorySegment seg, long index, @C("LPCWSTR") MemoryAddress x) {
            searchapi_h$constants$0._ITEM_INFO$pcwszContentClass$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct _ITEM_INFO") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct _ITEM_INFO") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct _ITEM_INFO[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct _ITEM_INFO[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct _ITEM_INFO*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct _ITEM_INFO*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct _ITEM_INFO") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct _ITEM_INFO")public static class ITEM_INFO extends _ITEM_INFO {

        /* package-private */ ITEM_INFO() {}
    }

    public static  MemoryLayout __MIDL_itf_searchapi_0000_0006_v0_0_c_ifspec$LAYOUT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0006_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0006_v0_0_c_ifspec$VH() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0006_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0006_v0_0_c_ifspec$SEGMENT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0006_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0006_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0006_v0_0_c_ifspec$VH().get(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0006_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0006_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0006_v0_0_c_ifspec$VH().set(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0006_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0006_v0_0_s_ifspec$LAYOUT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0006_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0006_v0_0_s_ifspec$VH() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0006_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0006_v0_0_s_ifspec$SEGMENT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0006_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0006_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0006_v0_0_s_ifspec$VH().get(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0006_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0006_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0006_v0_0_s_ifspec$VH().set(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0006_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ISearchProtocol$SEGMENT() {
        return searchapi_h$constants$0.IID_ISearchProtocol$SEGMENT();
    }
    @C("struct ISearchProtocolVtbl")public static class ISearchProtocolVtbl {

        /* package-private */ ISearchProtocolVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.ISearchProtocolVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$0.ISearchProtocolVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ISearchProtocol*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchProtocolVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchProtocol*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchProtocolVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ISearchProtocolVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchProtocol*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ISearchProtocolVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchProtocol*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$0.ISearchProtocolVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ISearchProtocol*)") MemoryAddress AddRef$get(@C("struct ISearchProtocolVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchProtocol*)") MemoryAddress AddRef$get(@C("struct ISearchProtocolVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ISearchProtocolVtbl") MemorySegment seg, @C("ULONG(*)(ISearchProtocol*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ISearchProtocolVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchProtocol*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$0.ISearchProtocolVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ISearchProtocol*)") MemoryAddress Release$get(@C("struct ISearchProtocolVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchProtocol*)") MemoryAddress Release$get(@C("struct ISearchProtocolVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ISearchProtocolVtbl") MemorySegment seg, @C("ULONG(*)(ISearchProtocol*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ISearchProtocolVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchProtocol*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Init$VH() {
            return searchapi_h$constants$0.ISearchProtocolVtbl$Init$VH();
        }
        public static  @C("HRESULT(*)(ISearchProtocol*,TIMEOUT_INFO*,IProtocolHandlerSite*,PROXY_INFO*)") MemoryAddress Init$get(@C("struct ISearchProtocolVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolVtbl$Init$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchProtocol*,TIMEOUT_INFO*,IProtocolHandlerSite*,PROXY_INFO*)") MemoryAddress Init$get(@C("struct ISearchProtocolVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolVtbl$Init$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Init$set(@C("struct ISearchProtocolVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchProtocol*,TIMEOUT_INFO*,IProtocolHandlerSite*,PROXY_INFO*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolVtbl$Init$VH().set(seg, x);
        }
        public static void Init$set(@C("struct ISearchProtocolVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchProtocol*,TIMEOUT_INFO*,IProtocolHandlerSite*,PROXY_INFO*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolVtbl$Init$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateAccessor$VH() {
            return searchapi_h$constants$0.ISearchProtocolVtbl$CreateAccessor$VH();
        }
        public static  @C("HRESULT(*)(ISearchProtocol*,LPCWSTR,AUTHENTICATION_INFO*,INCREMENTAL_ACCESS_INFO*,ITEM_INFO*,IUrlAccessor**)") MemoryAddress CreateAccessor$get(@C("struct ISearchProtocolVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolVtbl$CreateAccessor$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchProtocol*,LPCWSTR,AUTHENTICATION_INFO*,INCREMENTAL_ACCESS_INFO*,ITEM_INFO*,IUrlAccessor**)") MemoryAddress CreateAccessor$get(@C("struct ISearchProtocolVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolVtbl$CreateAccessor$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateAccessor$set(@C("struct ISearchProtocolVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchProtocol*,LPCWSTR,AUTHENTICATION_INFO*,INCREMENTAL_ACCESS_INFO*,ITEM_INFO*,IUrlAccessor**)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolVtbl$CreateAccessor$VH().set(seg, x);
        }
        public static void CreateAccessor$set(@C("struct ISearchProtocolVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchProtocol*,LPCWSTR,AUTHENTICATION_INFO*,INCREMENTAL_ACCESS_INFO*,ITEM_INFO*,IUrlAccessor**)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolVtbl$CreateAccessor$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CloseAccessor$VH() {
            return searchapi_h$constants$0.ISearchProtocolVtbl$CloseAccessor$VH();
        }
        public static  @C("HRESULT(*)(ISearchProtocol*,IUrlAccessor*)") MemoryAddress CloseAccessor$get(@C("struct ISearchProtocolVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolVtbl$CloseAccessor$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchProtocol*,IUrlAccessor*)") MemoryAddress CloseAccessor$get(@C("struct ISearchProtocolVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolVtbl$CloseAccessor$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CloseAccessor$set(@C("struct ISearchProtocolVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchProtocol*,IUrlAccessor*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolVtbl$CloseAccessor$VH().set(seg, x);
        }
        public static void CloseAccessor$set(@C("struct ISearchProtocolVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchProtocol*,IUrlAccessor*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolVtbl$CloseAccessor$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ShutDown$VH() {
            return searchapi_h$constants$0.ISearchProtocolVtbl$ShutDown$VH();
        }
        public static  @C("HRESULT(*)(ISearchProtocol*)") MemoryAddress ShutDown$get(@C("struct ISearchProtocolVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolVtbl$ShutDown$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchProtocol*)") MemoryAddress ShutDown$get(@C("struct ISearchProtocolVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocolVtbl$ShutDown$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ShutDown$set(@C("struct ISearchProtocolVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchProtocol*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolVtbl$ShutDown$VH().set(seg, x);
        }
        public static void ShutDown$set(@C("struct ISearchProtocolVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchProtocol*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocolVtbl$ShutDown$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchProtocolVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchProtocolVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchProtocolVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchProtocolVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchProtocolVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchProtocolVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchProtocolVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct ISearchProtocol")public static class ISearchProtocol {

        /* package-private */ ISearchProtocol() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.ISearchProtocol$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$0.ISearchProtocol$lpVtbl$VH();
        }
        public static  @C("struct ISearchProtocolVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchProtocol") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ISearchProtocolVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchProtocol") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ISearchProtocol") MemorySegment seg, @C("struct ISearchProtocolVtbl*") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ISearchProtocol") MemorySegment seg, long index, @C("struct ISearchProtocolVtbl*") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchProtocol") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchProtocol") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchProtocol[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchProtocol[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchProtocol*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchProtocol*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchProtocol") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemorySegment IID_ISearchProtocol2$SEGMENT() {
        return searchapi_h$constants$0.IID_ISearchProtocol2$SEGMENT();
    }
    @C("struct ISearchProtocol2Vtbl")public static class ISearchProtocol2Vtbl {

        /* package-private */ ISearchProtocol2Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.ISearchProtocol2Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$0.ISearchProtocol2Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ISearchProtocol2*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchProtocol2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchProtocol2*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchProtocol2*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchProtocol2*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$0.ISearchProtocol2Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ISearchProtocol2*)") MemoryAddress AddRef$get(@C("struct ISearchProtocol2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchProtocol2*)") MemoryAddress AddRef$get(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, @C("ULONG(*)(ISearchProtocol2*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchProtocol2*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$0.ISearchProtocol2Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ISearchProtocol2*)") MemoryAddress Release$get(@C("struct ISearchProtocol2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchProtocol2*)") MemoryAddress Release$get(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, @C("ULONG(*)(ISearchProtocol2*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchProtocol2*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Init$VH() {
            return searchapi_h$constants$0.ISearchProtocol2Vtbl$Init$VH();
        }
        public static  @C("HRESULT(*)(ISearchProtocol2*,TIMEOUT_INFO*,IProtocolHandlerSite*,PROXY_INFO*)") MemoryAddress Init$get(@C("struct ISearchProtocol2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2Vtbl$Init$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchProtocol2*,TIMEOUT_INFO*,IProtocolHandlerSite*,PROXY_INFO*)") MemoryAddress Init$get(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2Vtbl$Init$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Init$set(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchProtocol2*,TIMEOUT_INFO*,IProtocolHandlerSite*,PROXY_INFO*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2Vtbl$Init$VH().set(seg, x);
        }
        public static void Init$set(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchProtocol2*,TIMEOUT_INFO*,IProtocolHandlerSite*,PROXY_INFO*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2Vtbl$Init$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateAccessor$VH() {
            return searchapi_h$constants$0.ISearchProtocol2Vtbl$CreateAccessor$VH();
        }
        public static  @C("HRESULT(*)(ISearchProtocol2*,LPCWSTR,AUTHENTICATION_INFO*,INCREMENTAL_ACCESS_INFO*,ITEM_INFO*,IUrlAccessor**)") MemoryAddress CreateAccessor$get(@C("struct ISearchProtocol2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2Vtbl$CreateAccessor$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchProtocol2*,LPCWSTR,AUTHENTICATION_INFO*,INCREMENTAL_ACCESS_INFO*,ITEM_INFO*,IUrlAccessor**)") MemoryAddress CreateAccessor$get(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2Vtbl$CreateAccessor$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateAccessor$set(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchProtocol2*,LPCWSTR,AUTHENTICATION_INFO*,INCREMENTAL_ACCESS_INFO*,ITEM_INFO*,IUrlAccessor**)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2Vtbl$CreateAccessor$VH().set(seg, x);
        }
        public static void CreateAccessor$set(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchProtocol2*,LPCWSTR,AUTHENTICATION_INFO*,INCREMENTAL_ACCESS_INFO*,ITEM_INFO*,IUrlAccessor**)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2Vtbl$CreateAccessor$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CloseAccessor$VH() {
            return searchapi_h$constants$0.ISearchProtocol2Vtbl$CloseAccessor$VH();
        }
        public static  @C("HRESULT(*)(ISearchProtocol2*,IUrlAccessor*)") MemoryAddress CloseAccessor$get(@C("struct ISearchProtocol2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2Vtbl$CloseAccessor$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchProtocol2*,IUrlAccessor*)") MemoryAddress CloseAccessor$get(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2Vtbl$CloseAccessor$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CloseAccessor$set(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchProtocol2*,IUrlAccessor*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2Vtbl$CloseAccessor$VH().set(seg, x);
        }
        public static void CloseAccessor$set(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchProtocol2*,IUrlAccessor*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2Vtbl$CloseAccessor$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ShutDown$VH() {
            return searchapi_h$constants$0.ISearchProtocol2Vtbl$ShutDown$VH();
        }
        public static  @C("HRESULT(*)(ISearchProtocol2*)") MemoryAddress ShutDown$get(@C("struct ISearchProtocol2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2Vtbl$ShutDown$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchProtocol2*)") MemoryAddress ShutDown$get(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2Vtbl$ShutDown$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ShutDown$set(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchProtocol2*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2Vtbl$ShutDown$VH().set(seg, x);
        }
        public static void ShutDown$set(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchProtocol2*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2Vtbl$ShutDown$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateAccessorEx$VH() {
            return searchapi_h$constants$0.ISearchProtocol2Vtbl$CreateAccessorEx$VH();
        }
        public static  @C("HRESULT(*)(ISearchProtocol2*,LPCWSTR,AUTHENTICATION_INFO*,INCREMENTAL_ACCESS_INFO*,ITEM_INFO*,const BLOB*,IUrlAccessor**)") MemoryAddress CreateAccessorEx$get(@C("struct ISearchProtocol2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2Vtbl$CreateAccessorEx$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchProtocol2*,LPCWSTR,AUTHENTICATION_INFO*,INCREMENTAL_ACCESS_INFO*,ITEM_INFO*,const BLOB*,IUrlAccessor**)") MemoryAddress CreateAccessorEx$get(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2Vtbl$CreateAccessorEx$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateAccessorEx$set(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchProtocol2*,LPCWSTR,AUTHENTICATION_INFO*,INCREMENTAL_ACCESS_INFO*,ITEM_INFO*,const BLOB*,IUrlAccessor**)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2Vtbl$CreateAccessorEx$VH().set(seg, x);
        }
        public static void CreateAccessorEx$set(@C("struct ISearchProtocol2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchProtocol2*,LPCWSTR,AUTHENTICATION_INFO*,INCREMENTAL_ACCESS_INFO*,ITEM_INFO*,const BLOB*,IUrlAccessor**)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2Vtbl$CreateAccessorEx$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchProtocol2Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchProtocol2Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchProtocol2Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchProtocol2Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchProtocol2Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchProtocol2Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchProtocol2Vtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct ISearchProtocol2")public static class ISearchProtocol2 {

        /* package-private */ ISearchProtocol2() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.ISearchProtocol2$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$0.ISearchProtocol2$lpVtbl$VH();
        }
        public static  @C("struct ISearchProtocol2Vtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchProtocol2") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ISearchProtocol2Vtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchProtocol2") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchProtocol2$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ISearchProtocol2") MemorySegment seg, @C("struct ISearchProtocol2Vtbl*") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ISearchProtocol2") MemorySegment seg, long index, @C("struct ISearchProtocol2Vtbl*") MemoryAddress x) {
            searchapi_h$constants$0.ISearchProtocol2$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchProtocol2") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchProtocol2") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchProtocol2[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchProtocol2[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchProtocol2*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchProtocol2*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchProtocol2") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemorySegment IID_IProtocolHandlerSite$SEGMENT() {
        return searchapi_h$constants$0.IID_IProtocolHandlerSite$SEGMENT();
    }
    @C("struct IProtocolHandlerSiteVtbl")public static class IProtocolHandlerSiteVtbl {

        /* package-private */ IProtocolHandlerSiteVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.IProtocolHandlerSiteVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$0.IProtocolHandlerSiteVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IProtocolHandlerSite*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IProtocolHandlerSiteVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IProtocolHandlerSiteVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IProtocolHandlerSite*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IProtocolHandlerSiteVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IProtocolHandlerSiteVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IProtocolHandlerSiteVtbl") MemorySegment seg, @C("HRESULT(*)(IProtocolHandlerSite*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.IProtocolHandlerSiteVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IProtocolHandlerSiteVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IProtocolHandlerSite*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.IProtocolHandlerSiteVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$0.IProtocolHandlerSiteVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IProtocolHandlerSite*)") MemoryAddress AddRef$get(@C("struct IProtocolHandlerSiteVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IProtocolHandlerSiteVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IProtocolHandlerSite*)") MemoryAddress AddRef$get(@C("struct IProtocolHandlerSiteVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IProtocolHandlerSiteVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IProtocolHandlerSiteVtbl") MemorySegment seg, @C("ULONG(*)(IProtocolHandlerSite*)") MemoryAddress x) {
            searchapi_h$constants$0.IProtocolHandlerSiteVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IProtocolHandlerSiteVtbl") MemorySegment seg, long index, @C("ULONG(*)(IProtocolHandlerSite*)") MemoryAddress x) {
            searchapi_h$constants$0.IProtocolHandlerSiteVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$0.IProtocolHandlerSiteVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IProtocolHandlerSite*)") MemoryAddress Release$get(@C("struct IProtocolHandlerSiteVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IProtocolHandlerSiteVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IProtocolHandlerSite*)") MemoryAddress Release$get(@C("struct IProtocolHandlerSiteVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IProtocolHandlerSiteVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IProtocolHandlerSiteVtbl") MemorySegment seg, @C("ULONG(*)(IProtocolHandlerSite*)") MemoryAddress x) {
            searchapi_h$constants$0.IProtocolHandlerSiteVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IProtocolHandlerSiteVtbl") MemorySegment seg, long index, @C("ULONG(*)(IProtocolHandlerSite*)") MemoryAddress x) {
            searchapi_h$constants$0.IProtocolHandlerSiteVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetFilter$VH() {
            return searchapi_h$constants$0.IProtocolHandlerSiteVtbl$GetFilter$VH();
        }
        public static  @C("HRESULT(*)(IProtocolHandlerSite*,CLSID*,LPCWSTR,LPCWSTR,IFilter**)") MemoryAddress GetFilter$get(@C("struct IProtocolHandlerSiteVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IProtocolHandlerSiteVtbl$GetFilter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IProtocolHandlerSite*,CLSID*,LPCWSTR,LPCWSTR,IFilter**)") MemoryAddress GetFilter$get(@C("struct IProtocolHandlerSiteVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IProtocolHandlerSiteVtbl$GetFilter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetFilter$set(@C("struct IProtocolHandlerSiteVtbl") MemorySegment seg, @C("HRESULT(*)(IProtocolHandlerSite*,CLSID*,LPCWSTR,LPCWSTR,IFilter**)") MemoryAddress x) {
            searchapi_h$constants$0.IProtocolHandlerSiteVtbl$GetFilter$VH().set(seg, x);
        }
        public static void GetFilter$set(@C("struct IProtocolHandlerSiteVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IProtocolHandlerSite*,CLSID*,LPCWSTR,LPCWSTR,IFilter**)") MemoryAddress x) {
            searchapi_h$constants$0.IProtocolHandlerSiteVtbl$GetFilter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IProtocolHandlerSiteVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IProtocolHandlerSiteVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IProtocolHandlerSiteVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IProtocolHandlerSiteVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IProtocolHandlerSiteVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IProtocolHandlerSiteVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IProtocolHandlerSiteVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct IProtocolHandlerSite")public static class IProtocolHandlerSite {

        /* package-private */ IProtocolHandlerSite() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.IProtocolHandlerSite$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$0.IProtocolHandlerSite$lpVtbl$VH();
        }
        public static  @C("struct IProtocolHandlerSiteVtbl*") MemoryAddress lpVtbl$get(@C("struct IProtocolHandlerSite") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IProtocolHandlerSite$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IProtocolHandlerSiteVtbl*") MemoryAddress lpVtbl$get(@C("struct IProtocolHandlerSite") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IProtocolHandlerSite$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IProtocolHandlerSite") MemorySegment seg, @C("struct IProtocolHandlerSiteVtbl*") MemoryAddress x) {
            searchapi_h$constants$0.IProtocolHandlerSite$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IProtocolHandlerSite") MemorySegment seg, long index, @C("struct IProtocolHandlerSiteVtbl*") MemoryAddress x) {
            searchapi_h$constants$0.IProtocolHandlerSite$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IProtocolHandlerSite") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IProtocolHandlerSite") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IProtocolHandlerSite[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IProtocolHandlerSite[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IProtocolHandlerSite*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IProtocolHandlerSite*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IProtocolHandlerSite") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemoryLayout __MIDL_itf_searchapi_0000_0009_v0_0_c_ifspec$LAYOUT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0009_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0009_v0_0_c_ifspec$VH() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0009_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0009_v0_0_c_ifspec$SEGMENT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0009_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0009_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0009_v0_0_c_ifspec$VH().get(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0009_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0009_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0009_v0_0_c_ifspec$VH().set(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0009_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0009_v0_0_s_ifspec$LAYOUT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0009_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0009_v0_0_s_ifspec$VH() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0009_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0009_v0_0_s_ifspec$SEGMENT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0009_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0009_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0009_v0_0_s_ifspec$VH().get(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0009_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0009_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0009_v0_0_s_ifspec$VH().set(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0009_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ISearchRoot$SEGMENT() {
        return searchapi_h$constants$0.IID_ISearchRoot$SEGMENT();
    }
    @C("struct ISearchRootVtbl")public static class ISearchRootVtbl {

        /* package-private */ ISearchRootVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.ISearchRootVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ISearchRoot*)") MemoryAddress AddRef$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchRoot*)") MemoryAddress AddRef$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("ULONG(*)(ISearchRoot*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchRoot*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ISearchRoot*)") MemoryAddress Release$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchRoot*)") MemoryAddress Release$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("ULONG(*)(ISearchRoot*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchRoot*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_Schedule$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$put_Schedule$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,LPCWSTR)") MemoryAddress put_Schedule$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_Schedule$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,LPCWSTR)") MemoryAddress put_Schedule$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_Schedule$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_Schedule$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_Schedule$VH().set(seg, x);
        }
        public static void put_Schedule$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_Schedule$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_Schedule$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$get_Schedule$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,LPWSTR*)") MemoryAddress get_Schedule$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_Schedule$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,LPWSTR*)") MemoryAddress get_Schedule$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_Schedule$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_Schedule$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_Schedule$VH().set(seg, x);
        }
        public static void get_Schedule$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_Schedule$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_RootURL$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$put_RootURL$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,LPCWSTR)") MemoryAddress put_RootURL$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_RootURL$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,LPCWSTR)") MemoryAddress put_RootURL$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_RootURL$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_RootURL$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_RootURL$VH().set(seg, x);
        }
        public static void put_RootURL$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_RootURL$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_RootURL$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$get_RootURL$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,LPWSTR*)") MemoryAddress get_RootURL$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_RootURL$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,LPWSTR*)") MemoryAddress get_RootURL$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_RootURL$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_RootURL$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_RootURL$VH().set(seg, x);
        }
        public static void get_RootURL$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_RootURL$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_IsHierarchical$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$put_IsHierarchical$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,BOOL)") MemoryAddress put_IsHierarchical$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_IsHierarchical$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,BOOL)") MemoryAddress put_IsHierarchical$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_IsHierarchical$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_IsHierarchical$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,BOOL)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_IsHierarchical$VH().set(seg, x);
        }
        public static void put_IsHierarchical$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,BOOL)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_IsHierarchical$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_IsHierarchical$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$get_IsHierarchical$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,BOOL*)") MemoryAddress get_IsHierarchical$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_IsHierarchical$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,BOOL*)") MemoryAddress get_IsHierarchical$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_IsHierarchical$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_IsHierarchical$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_IsHierarchical$VH().set(seg, x);
        }
        public static void get_IsHierarchical$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_IsHierarchical$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_ProvidesNotifications$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$put_ProvidesNotifications$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,BOOL)") MemoryAddress put_ProvidesNotifications$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_ProvidesNotifications$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,BOOL)") MemoryAddress put_ProvidesNotifications$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_ProvidesNotifications$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_ProvidesNotifications$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,BOOL)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_ProvidesNotifications$VH().set(seg, x);
        }
        public static void put_ProvidesNotifications$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,BOOL)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_ProvidesNotifications$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_ProvidesNotifications$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$get_ProvidesNotifications$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,BOOL*)") MemoryAddress get_ProvidesNotifications$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_ProvidesNotifications$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,BOOL*)") MemoryAddress get_ProvidesNotifications$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_ProvidesNotifications$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_ProvidesNotifications$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_ProvidesNotifications$VH().set(seg, x);
        }
        public static void get_ProvidesNotifications$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_ProvidesNotifications$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_UseNotificationsOnly$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$put_UseNotificationsOnly$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,BOOL)") MemoryAddress put_UseNotificationsOnly$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_UseNotificationsOnly$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,BOOL)") MemoryAddress put_UseNotificationsOnly$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_UseNotificationsOnly$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_UseNotificationsOnly$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,BOOL)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_UseNotificationsOnly$VH().set(seg, x);
        }
        public static void put_UseNotificationsOnly$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,BOOL)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_UseNotificationsOnly$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_UseNotificationsOnly$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$get_UseNotificationsOnly$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,BOOL*)") MemoryAddress get_UseNotificationsOnly$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_UseNotificationsOnly$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,BOOL*)") MemoryAddress get_UseNotificationsOnly$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_UseNotificationsOnly$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_UseNotificationsOnly$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_UseNotificationsOnly$VH().set(seg, x);
        }
        public static void get_UseNotificationsOnly$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_UseNotificationsOnly$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_EnumerationDepth$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$put_EnumerationDepth$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,DWORD)") MemoryAddress put_EnumerationDepth$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_EnumerationDepth$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,DWORD)") MemoryAddress put_EnumerationDepth$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_EnumerationDepth$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_EnumerationDepth$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_EnumerationDepth$VH().set(seg, x);
        }
        public static void put_EnumerationDepth$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_EnumerationDepth$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_EnumerationDepth$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$get_EnumerationDepth$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,DWORD*)") MemoryAddress get_EnumerationDepth$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_EnumerationDepth$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,DWORD*)") MemoryAddress get_EnumerationDepth$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_EnumerationDepth$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_EnumerationDepth$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_EnumerationDepth$VH().set(seg, x);
        }
        public static void get_EnumerationDepth$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_EnumerationDepth$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_HostDepth$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$put_HostDepth$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,DWORD)") MemoryAddress put_HostDepth$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_HostDepth$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,DWORD)") MemoryAddress put_HostDepth$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_HostDepth$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_HostDepth$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_HostDepth$VH().set(seg, x);
        }
        public static void put_HostDepth$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_HostDepth$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_HostDepth$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$get_HostDepth$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,DWORD*)") MemoryAddress get_HostDepth$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_HostDepth$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,DWORD*)") MemoryAddress get_HostDepth$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_HostDepth$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_HostDepth$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_HostDepth$VH().set(seg, x);
        }
        public static void get_HostDepth$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_HostDepth$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_FollowDirectories$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$put_FollowDirectories$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,BOOL)") MemoryAddress put_FollowDirectories$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_FollowDirectories$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,BOOL)") MemoryAddress put_FollowDirectories$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_FollowDirectories$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_FollowDirectories$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,BOOL)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_FollowDirectories$VH().set(seg, x);
        }
        public static void put_FollowDirectories$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,BOOL)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_FollowDirectories$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_FollowDirectories$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$get_FollowDirectories$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,BOOL*)") MemoryAddress get_FollowDirectories$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_FollowDirectories$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,BOOL*)") MemoryAddress get_FollowDirectories$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_FollowDirectories$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_FollowDirectories$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_FollowDirectories$VH().set(seg, x);
        }
        public static void get_FollowDirectories$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_FollowDirectories$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_AuthenticationType$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$put_AuthenticationType$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,AUTH_TYPE)") MemoryAddress put_AuthenticationType$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_AuthenticationType$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,AUTH_TYPE)") MemoryAddress put_AuthenticationType$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_AuthenticationType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_AuthenticationType$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,AUTH_TYPE)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_AuthenticationType$VH().set(seg, x);
        }
        public static void put_AuthenticationType$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,AUTH_TYPE)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_AuthenticationType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_AuthenticationType$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$get_AuthenticationType$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,AUTH_TYPE*)") MemoryAddress get_AuthenticationType$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_AuthenticationType$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,AUTH_TYPE*)") MemoryAddress get_AuthenticationType$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_AuthenticationType$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_AuthenticationType$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,AUTH_TYPE*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_AuthenticationType$VH().set(seg, x);
        }
        public static void get_AuthenticationType$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,AUTH_TYPE*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_AuthenticationType$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_User$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$put_User$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,LPCWSTR)") MemoryAddress put_User$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_User$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,LPCWSTR)") MemoryAddress put_User$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_User$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_User$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_User$VH().set(seg, x);
        }
        public static void put_User$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_User$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_User$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$get_User$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,LPWSTR*)") MemoryAddress get_User$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_User$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,LPWSTR*)") MemoryAddress get_User$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_User$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_User$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_User$VH().set(seg, x);
        }
        public static void get_User$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_User$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_Password$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$put_Password$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,LPCWSTR)") MemoryAddress put_Password$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_Password$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,LPCWSTR)") MemoryAddress put_Password$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$put_Password$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_Password$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_Password$VH().set(seg, x);
        }
        public static void put_Password$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$put_Password$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_Password$VH() {
            return searchapi_h$constants$0.ISearchRootVtbl$get_Password$VH();
        }
        public static  @C("HRESULT(*)(ISearchRoot*,LPWSTR*)") MemoryAddress get_Password$get(@C("struct ISearchRootVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_Password$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchRoot*,LPWSTR*)") MemoryAddress get_Password$get(@C("struct ISearchRootVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRootVtbl$get_Password$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_Password$set(@C("struct ISearchRootVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchRoot*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_Password$VH().set(seg, x);
        }
        public static void get_Password$set(@C("struct ISearchRootVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchRoot*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRootVtbl$get_Password$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchRootVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchRootVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchRootVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchRootVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchRootVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchRootVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchRootVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct ISearchRoot")public static class ISearchRoot {

        /* package-private */ ISearchRoot() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.ISearchRoot$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$0.ISearchRoot$lpVtbl$VH();
        }
        public static  @C("struct ISearchRootVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchRoot") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRoot$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ISearchRootVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchRoot") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchRoot$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ISearchRoot") MemorySegment seg, @C("struct ISearchRootVtbl*") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRoot$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ISearchRoot") MemorySegment seg, long index, @C("struct ISearchRootVtbl*") MemoryAddress x) {
            searchapi_h$constants$0.ISearchRoot$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchRoot") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchRoot") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchRoot[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchRoot[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchRoot*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchRoot*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchRoot") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemorySegment IID_IEnumSearchRoots$SEGMENT() {
        return searchapi_h$constants$0.IID_IEnumSearchRoots$SEGMENT();
    }
    @C("struct IEnumSearchRootsVtbl")public static class IEnumSearchRootsVtbl {

        /* package-private */ IEnumSearchRootsVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.IEnumSearchRootsVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$0.IEnumSearchRootsVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IEnumSearchRoots*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IEnumSearchRootsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IEnumSearchRootsVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IEnumSearchRoots*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IEnumSearchRootsVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, @C("HRESULT(*)(IEnumSearchRoots*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.IEnumSearchRootsVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IEnumSearchRoots*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.IEnumSearchRootsVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$0.IEnumSearchRootsVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IEnumSearchRoots*)") MemoryAddress AddRef$get(@C("struct IEnumSearchRootsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IEnumSearchRootsVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IEnumSearchRoots*)") MemoryAddress AddRef$get(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IEnumSearchRootsVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, @C("ULONG(*)(IEnumSearchRoots*)") MemoryAddress x) {
            searchapi_h$constants$0.IEnumSearchRootsVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, long index, @C("ULONG(*)(IEnumSearchRoots*)") MemoryAddress x) {
            searchapi_h$constants$0.IEnumSearchRootsVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$0.IEnumSearchRootsVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IEnumSearchRoots*)") MemoryAddress Release$get(@C("struct IEnumSearchRootsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IEnumSearchRootsVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IEnumSearchRoots*)") MemoryAddress Release$get(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IEnumSearchRootsVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, @C("ULONG(*)(IEnumSearchRoots*)") MemoryAddress x) {
            searchapi_h$constants$0.IEnumSearchRootsVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, long index, @C("ULONG(*)(IEnumSearchRoots*)") MemoryAddress x) {
            searchapi_h$constants$0.IEnumSearchRootsVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Next$VH() {
            return searchapi_h$constants$0.IEnumSearchRootsVtbl$Next$VH();
        }
        public static  @C("HRESULT(*)(IEnumSearchRoots*,ULONG,ISearchRoot**,ULONG*)") MemoryAddress Next$get(@C("struct IEnumSearchRootsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IEnumSearchRootsVtbl$Next$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IEnumSearchRoots*,ULONG,ISearchRoot**,ULONG*)") MemoryAddress Next$get(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IEnumSearchRootsVtbl$Next$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Next$set(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, @C("HRESULT(*)(IEnumSearchRoots*,ULONG,ISearchRoot**,ULONG*)") MemoryAddress x) {
            searchapi_h$constants$0.IEnumSearchRootsVtbl$Next$VH().set(seg, x);
        }
        public static void Next$set(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IEnumSearchRoots*,ULONG,ISearchRoot**,ULONG*)") MemoryAddress x) {
            searchapi_h$constants$0.IEnumSearchRootsVtbl$Next$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Skip$VH() {
            return searchapi_h$constants$0.IEnumSearchRootsVtbl$Skip$VH();
        }
        public static  @C("HRESULT(*)(IEnumSearchRoots*,ULONG)") MemoryAddress Skip$get(@C("struct IEnumSearchRootsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IEnumSearchRootsVtbl$Skip$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IEnumSearchRoots*,ULONG)") MemoryAddress Skip$get(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IEnumSearchRootsVtbl$Skip$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Skip$set(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, @C("HRESULT(*)(IEnumSearchRoots*,ULONG)") MemoryAddress x) {
            searchapi_h$constants$0.IEnumSearchRootsVtbl$Skip$VH().set(seg, x);
        }
        public static void Skip$set(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IEnumSearchRoots*,ULONG)") MemoryAddress x) {
            searchapi_h$constants$0.IEnumSearchRootsVtbl$Skip$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Reset$VH() {
            return searchapi_h$constants$0.IEnumSearchRootsVtbl$Reset$VH();
        }
        public static  @C("HRESULT(*)(IEnumSearchRoots*)") MemoryAddress Reset$get(@C("struct IEnumSearchRootsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IEnumSearchRootsVtbl$Reset$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IEnumSearchRoots*)") MemoryAddress Reset$get(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IEnumSearchRootsVtbl$Reset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Reset$set(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, @C("HRESULT(*)(IEnumSearchRoots*)") MemoryAddress x) {
            searchapi_h$constants$0.IEnumSearchRootsVtbl$Reset$VH().set(seg, x);
        }
        public static void Reset$set(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IEnumSearchRoots*)") MemoryAddress x) {
            searchapi_h$constants$0.IEnumSearchRootsVtbl$Reset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Clone$VH() {
            return searchapi_h$constants$0.IEnumSearchRootsVtbl$Clone$VH();
        }
        public static  @C("HRESULT(*)(IEnumSearchRoots*,IEnumSearchRoots**)") MemoryAddress Clone$get(@C("struct IEnumSearchRootsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IEnumSearchRootsVtbl$Clone$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IEnumSearchRoots*,IEnumSearchRoots**)") MemoryAddress Clone$get(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IEnumSearchRootsVtbl$Clone$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Clone$set(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, @C("HRESULT(*)(IEnumSearchRoots*,IEnumSearchRoots**)") MemoryAddress x) {
            searchapi_h$constants$0.IEnumSearchRootsVtbl$Clone$VH().set(seg, x);
        }
        public static void Clone$set(@C("struct IEnumSearchRootsVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IEnumSearchRoots*,IEnumSearchRoots**)") MemoryAddress x) {
            searchapi_h$constants$0.IEnumSearchRootsVtbl$Clone$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IEnumSearchRootsVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IEnumSearchRootsVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IEnumSearchRootsVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IEnumSearchRootsVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IEnumSearchRootsVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IEnumSearchRootsVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IEnumSearchRootsVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct IEnumSearchRoots")public static class IEnumSearchRoots {

        /* package-private */ IEnumSearchRoots() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.IEnumSearchRoots$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$0.IEnumSearchRoots$lpVtbl$VH();
        }
        public static  @C("struct IEnumSearchRootsVtbl*") MemoryAddress lpVtbl$get(@C("struct IEnumSearchRoots") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IEnumSearchRoots$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IEnumSearchRootsVtbl*") MemoryAddress lpVtbl$get(@C("struct IEnumSearchRoots") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.IEnumSearchRoots$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IEnumSearchRoots") MemorySegment seg, @C("struct IEnumSearchRootsVtbl*") MemoryAddress x) {
            searchapi_h$constants$0.IEnumSearchRoots$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IEnumSearchRoots") MemorySegment seg, long index, @C("struct IEnumSearchRootsVtbl*") MemoryAddress x) {
            searchapi_h$constants$0.IEnumSearchRoots$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IEnumSearchRoots") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IEnumSearchRoots") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IEnumSearchRoots[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IEnumSearchRoots[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IEnumSearchRoots*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IEnumSearchRoots*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IEnumSearchRoots") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static @C("int") int FF_INDEXCOMPLEXURLS() {
        return searchapi_h$constants$0.FF_INDEXCOMPLEXURLS();
    }
    public static @C("int") int FF_SUPPRESSINDEXING() {
        return searchapi_h$constants$0.FF_SUPPRESSINDEXING();
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0011_v0_0_c_ifspec$LAYOUT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0011_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0011_v0_0_c_ifspec$VH() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0011_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0011_v0_0_c_ifspec$SEGMENT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0011_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0011_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0011_v0_0_c_ifspec$VH().get(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0011_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0011_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0011_v0_0_c_ifspec$VH().set(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0011_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0011_v0_0_s_ifspec$LAYOUT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0011_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0011_v0_0_s_ifspec$VH() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0011_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0011_v0_0_s_ifspec$SEGMENT() {
        return searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0011_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0011_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0011_v0_0_s_ifspec$VH().get(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0011_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0011_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0011_v0_0_s_ifspec$VH().set(searchapi_h$constants$0.__MIDL_itf_searchapi_0000_0011_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ISearchScopeRule$SEGMENT() {
        return searchapi_h$constants$0.IID_ISearchScopeRule$SEGMENT();
    }
    @C("struct ISearchScopeRuleVtbl")public static class ISearchScopeRuleVtbl {

        /* package-private */ ISearchScopeRuleVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$0.ISearchScopeRuleVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$0.ISearchScopeRuleVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ISearchScopeRule*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchScopeRuleVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchScopeRuleVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchScopeRule*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchScopeRuleVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchScopeRule*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchScopeRuleVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchScopeRule*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchScopeRuleVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$0.ISearchScopeRuleVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ISearchScopeRule*)") MemoryAddress AddRef$get(@C("struct ISearchScopeRuleVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchScopeRuleVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchScopeRule*)") MemoryAddress AddRef$get(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchScopeRuleVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, @C("ULONG(*)(ISearchScopeRule*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchScopeRuleVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchScopeRule*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchScopeRuleVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$0.ISearchScopeRuleVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ISearchScopeRule*)") MemoryAddress Release$get(@C("struct ISearchScopeRuleVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchScopeRuleVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchScopeRule*)") MemoryAddress Release$get(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchScopeRuleVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, @C("ULONG(*)(ISearchScopeRule*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchScopeRuleVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchScopeRule*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchScopeRuleVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_PatternOrURL$VH() {
            return searchapi_h$constants$0.ISearchScopeRuleVtbl$get_PatternOrURL$VH();
        }
        public static  @C("HRESULT(*)(ISearchScopeRule*,LPWSTR*)") MemoryAddress get_PatternOrURL$get(@C("struct ISearchScopeRuleVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchScopeRuleVtbl$get_PatternOrURL$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchScopeRule*,LPWSTR*)") MemoryAddress get_PatternOrURL$get(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchScopeRuleVtbl$get_PatternOrURL$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_PatternOrURL$set(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchScopeRule*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchScopeRuleVtbl$get_PatternOrURL$VH().set(seg, x);
        }
        public static void get_PatternOrURL$set(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchScopeRule*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchScopeRuleVtbl$get_PatternOrURL$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_IsIncluded$VH() {
            return searchapi_h$constants$0.ISearchScopeRuleVtbl$get_IsIncluded$VH();
        }
        public static  @C("HRESULT(*)(ISearchScopeRule*,BOOL*)") MemoryAddress get_IsIncluded$get(@C("struct ISearchScopeRuleVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchScopeRuleVtbl$get_IsIncluded$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchScopeRule*,BOOL*)") MemoryAddress get_IsIncluded$get(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchScopeRuleVtbl$get_IsIncluded$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_IsIncluded$set(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchScopeRule*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchScopeRuleVtbl$get_IsIncluded$VH().set(seg, x);
        }
        public static void get_IsIncluded$set(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchScopeRule*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchScopeRuleVtbl$get_IsIncluded$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_IsDefault$VH() {
            return searchapi_h$constants$0.ISearchScopeRuleVtbl$get_IsDefault$VH();
        }
        public static  @C("HRESULT(*)(ISearchScopeRule*,BOOL*)") MemoryAddress get_IsDefault$get(@C("struct ISearchScopeRuleVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchScopeRuleVtbl$get_IsDefault$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchScopeRule*,BOOL*)") MemoryAddress get_IsDefault$get(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$0.ISearchScopeRuleVtbl$get_IsDefault$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_IsDefault$set(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchScopeRule*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchScopeRuleVtbl$get_IsDefault$VH().set(seg, x);
        }
        public static void get_IsDefault$set(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchScopeRule*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$0.ISearchScopeRuleVtbl$get_IsDefault$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_FollowFlags$VH() {
            return searchapi_h$constants$1.ISearchScopeRuleVtbl$get_FollowFlags$VH();
        }
        public static  @C("HRESULT(*)(ISearchScopeRule*,DWORD*)") MemoryAddress get_FollowFlags$get(@C("struct ISearchScopeRuleVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchScopeRuleVtbl$get_FollowFlags$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchScopeRule*,DWORD*)") MemoryAddress get_FollowFlags$get(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchScopeRuleVtbl$get_FollowFlags$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_FollowFlags$set(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchScopeRule*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchScopeRuleVtbl$get_FollowFlags$VH().set(seg, x);
        }
        public static void get_FollowFlags$set(@C("struct ISearchScopeRuleVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchScopeRule*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchScopeRuleVtbl$get_FollowFlags$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchScopeRuleVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchScopeRuleVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchScopeRuleVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchScopeRuleVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchScopeRuleVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchScopeRuleVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchScopeRuleVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct ISearchScopeRule")public static class ISearchScopeRule {

        /* package-private */ ISearchScopeRule() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchScopeRule$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$1.ISearchScopeRule$lpVtbl$VH();
        }
        public static  @C("struct ISearchScopeRuleVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchScopeRule") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchScopeRule$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ISearchScopeRuleVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchScopeRule") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchScopeRule$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ISearchScopeRule") MemorySegment seg, @C("struct ISearchScopeRuleVtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchScopeRule$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ISearchScopeRule") MemorySegment seg, long index, @C("struct ISearchScopeRuleVtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchScopeRule$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchScopeRule") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchScopeRule") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchScopeRule[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchScopeRule[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchScopeRule*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchScopeRule*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchScopeRule") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemorySegment IID_IEnumSearchScopeRules$SEGMENT() {
        return searchapi_h$constants$1.IID_IEnumSearchScopeRules$SEGMENT();
    }
    @C("struct IEnumSearchScopeRulesVtbl")public static class IEnumSearchScopeRulesVtbl {

        /* package-private */ IEnumSearchScopeRulesVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IEnumSearchScopeRules*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IEnumSearchScopeRules*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, @C("HRESULT(*)(IEnumSearchScopeRules*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IEnumSearchScopeRules*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IEnumSearchScopeRules*)") MemoryAddress AddRef$get(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IEnumSearchScopeRules*)") MemoryAddress AddRef$get(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, @C("ULONG(*)(IEnumSearchScopeRules*)") MemoryAddress x) {
            searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, long index, @C("ULONG(*)(IEnumSearchScopeRules*)") MemoryAddress x) {
            searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IEnumSearchScopeRules*)") MemoryAddress Release$get(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IEnumSearchScopeRules*)") MemoryAddress Release$get(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, @C("ULONG(*)(IEnumSearchScopeRules*)") MemoryAddress x) {
            searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, long index, @C("ULONG(*)(IEnumSearchScopeRules*)") MemoryAddress x) {
            searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Next$VH() {
            return searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Next$VH();
        }
        public static  @C("HRESULT(*)(IEnumSearchScopeRules*,ULONG,ISearchScopeRule**,ULONG*)") MemoryAddress Next$get(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Next$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IEnumSearchScopeRules*,ULONG,ISearchScopeRule**,ULONG*)") MemoryAddress Next$get(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Next$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Next$set(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, @C("HRESULT(*)(IEnumSearchScopeRules*,ULONG,ISearchScopeRule**,ULONG*)") MemoryAddress x) {
            searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Next$VH().set(seg, x);
        }
        public static void Next$set(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IEnumSearchScopeRules*,ULONG,ISearchScopeRule**,ULONG*)") MemoryAddress x) {
            searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Next$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Skip$VH() {
            return searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Skip$VH();
        }
        public static  @C("HRESULT(*)(IEnumSearchScopeRules*,ULONG)") MemoryAddress Skip$get(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Skip$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IEnumSearchScopeRules*,ULONG)") MemoryAddress Skip$get(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Skip$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Skip$set(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, @C("HRESULT(*)(IEnumSearchScopeRules*,ULONG)") MemoryAddress x) {
            searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Skip$VH().set(seg, x);
        }
        public static void Skip$set(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IEnumSearchScopeRules*,ULONG)") MemoryAddress x) {
            searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Skip$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Reset$VH() {
            return searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Reset$VH();
        }
        public static  @C("HRESULT(*)(IEnumSearchScopeRules*)") MemoryAddress Reset$get(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Reset$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IEnumSearchScopeRules*)") MemoryAddress Reset$get(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Reset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Reset$set(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, @C("HRESULT(*)(IEnumSearchScopeRules*)") MemoryAddress x) {
            searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Reset$VH().set(seg, x);
        }
        public static void Reset$set(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IEnumSearchScopeRules*)") MemoryAddress x) {
            searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Reset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Clone$VH() {
            return searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Clone$VH();
        }
        public static  @C("HRESULT(*)(IEnumSearchScopeRules*,IEnumSearchScopeRules**)") MemoryAddress Clone$get(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Clone$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IEnumSearchScopeRules*,IEnumSearchScopeRules**)") MemoryAddress Clone$get(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Clone$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Clone$set(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, @C("HRESULT(*)(IEnumSearchScopeRules*,IEnumSearchScopeRules**)") MemoryAddress x) {
            searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Clone$VH().set(seg, x);
        }
        public static void Clone$set(@C("struct IEnumSearchScopeRulesVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IEnumSearchScopeRules*,IEnumSearchScopeRules**)") MemoryAddress x) {
            searchapi_h$constants$1.IEnumSearchScopeRulesVtbl$Clone$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IEnumSearchScopeRulesVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IEnumSearchScopeRulesVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IEnumSearchScopeRulesVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IEnumSearchScopeRulesVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IEnumSearchScopeRulesVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IEnumSearchScopeRulesVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IEnumSearchScopeRulesVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct IEnumSearchScopeRules")public static class IEnumSearchScopeRules {

        /* package-private */ IEnumSearchScopeRules() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.IEnumSearchScopeRules$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$1.IEnumSearchScopeRules$lpVtbl$VH();
        }
        public static  @C("struct IEnumSearchScopeRulesVtbl*") MemoryAddress lpVtbl$get(@C("struct IEnumSearchScopeRules") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.IEnumSearchScopeRules$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IEnumSearchScopeRulesVtbl*") MemoryAddress lpVtbl$get(@C("struct IEnumSearchScopeRules") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.IEnumSearchScopeRules$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IEnumSearchScopeRules") MemorySegment seg, @C("struct IEnumSearchScopeRulesVtbl*") MemoryAddress x) {
            searchapi_h$constants$1.IEnumSearchScopeRules$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IEnumSearchScopeRules") MemorySegment seg, long index, @C("struct IEnumSearchScopeRulesVtbl*") MemoryAddress x) {
            searchapi_h$constants$1.IEnumSearchScopeRules$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IEnumSearchScopeRules") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IEnumSearchScopeRules") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IEnumSearchScopeRules[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IEnumSearchScopeRules[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IEnumSearchScopeRules*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IEnumSearchScopeRules*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IEnumSearchScopeRules") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static @C("int") int CLUSIONREASON_UNKNOWNSCOPE() {
        return searchapi_h$constants$1.CLUSIONREASON_UNKNOWNSCOPE();
    }
    public static @C("int") int CLUSIONREASON_DEFAULT() {
        return searchapi_h$constants$1.CLUSIONREASON_DEFAULT();
    }
    public static @C("int") int CLUSIONREASON_USER() {
        return searchapi_h$constants$1.CLUSIONREASON_USER();
    }
    public static @C("int") int CLUSIONREASON_GROUPPOLICY() {
        return searchapi_h$constants$1.CLUSIONREASON_GROUPPOLICY();
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0013_v0_0_c_ifspec$LAYOUT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0013_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0013_v0_0_c_ifspec$VH() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0013_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0013_v0_0_c_ifspec$SEGMENT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0013_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0013_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0013_v0_0_c_ifspec$VH().get(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0013_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0013_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0013_v0_0_c_ifspec$VH().set(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0013_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0013_v0_0_s_ifspec$LAYOUT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0013_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0013_v0_0_s_ifspec$VH() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0013_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0013_v0_0_s_ifspec$SEGMENT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0013_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0013_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0013_v0_0_s_ifspec$VH().get(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0013_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0013_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0013_v0_0_s_ifspec$VH().set(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0013_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ISearchCrawlScopeManager$SEGMENT() {
        return searchapi_h$constants$1.IID_ISearchCrawlScopeManager$SEGMENT();
    }
    @C("struct ISearchCrawlScopeManagerVtbl")public static class ISearchCrawlScopeManagerVtbl {

        /* package-private */ ISearchCrawlScopeManagerVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ISearchCrawlScopeManager*)") MemoryAddress AddRef$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchCrawlScopeManager*)") MemoryAddress AddRef$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("ULONG(*)(ISearchCrawlScopeManager*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchCrawlScopeManager*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ISearchCrawlScopeManager*)") MemoryAddress Release$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchCrawlScopeManager*)") MemoryAddress Release$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("ULONG(*)(ISearchCrawlScopeManager*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchCrawlScopeManager*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddDefaultScopeRule$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddDefaultScopeRule$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL,DWORD)") MemoryAddress AddDefaultScopeRule$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddDefaultScopeRule$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL,DWORD)") MemoryAddress AddDefaultScopeRule$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddDefaultScopeRule$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddDefaultScopeRule$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddDefaultScopeRule$VH().set(seg, x);
        }
        public static void AddDefaultScopeRule$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddDefaultScopeRule$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRoot$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddRoot$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,ISearchRoot*)") MemoryAddress AddRoot$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddRoot$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,ISearchRoot*)") MemoryAddress AddRoot$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddRoot$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRoot$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager*,ISearchRoot*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddRoot$VH().set(seg, x);
        }
        public static void AddRoot$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager*,ISearchRoot*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddRoot$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RemoveRoot$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RemoveRoot$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR)") MemoryAddress RemoveRoot$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RemoveRoot$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR)") MemoryAddress RemoveRoot$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RemoveRoot$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RemoveRoot$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RemoveRoot$VH().set(seg, x);
        }
        public static void RemoveRoot$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RemoveRoot$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumerateRoots$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$EnumerateRoots$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,IEnumSearchRoots**)") MemoryAddress EnumerateRoots$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$EnumerateRoots$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,IEnumSearchRoots**)") MemoryAddress EnumerateRoots$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$EnumerateRoots$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumerateRoots$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager*,IEnumSearchRoots**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$EnumerateRoots$VH().set(seg, x);
        }
        public static void EnumerateRoots$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager*,IEnumSearchRoots**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$EnumerateRoots$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddHierarchicalScope$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddHierarchicalScope$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL,BOOL,BOOL)") MemoryAddress AddHierarchicalScope$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddHierarchicalScope$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL,BOOL,BOOL)") MemoryAddress AddHierarchicalScope$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddHierarchicalScope$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddHierarchicalScope$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL,BOOL,BOOL)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddHierarchicalScope$VH().set(seg, x);
        }
        public static void AddHierarchicalScope$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL,BOOL,BOOL)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddHierarchicalScope$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddUserScopeRule$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddUserScopeRule$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL,BOOL,DWORD)") MemoryAddress AddUserScopeRule$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddUserScopeRule$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL,BOOL,DWORD)") MemoryAddress AddUserScopeRule$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddUserScopeRule$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddUserScopeRule$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL,BOOL,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddUserScopeRule$VH().set(seg, x);
        }
        public static void AddUserScopeRule$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL,BOOL,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$AddUserScopeRule$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RemoveScopeRule$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RemoveScopeRule$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR)") MemoryAddress RemoveScopeRule$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RemoveScopeRule$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR)") MemoryAddress RemoveScopeRule$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RemoveScopeRule$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RemoveScopeRule$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RemoveScopeRule$VH().set(seg, x);
        }
        public static void RemoveScopeRule$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RemoveScopeRule$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumerateScopeRules$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$EnumerateScopeRules$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,IEnumSearchScopeRules**)") MemoryAddress EnumerateScopeRules$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$EnumerateScopeRules$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,IEnumSearchScopeRules**)") MemoryAddress EnumerateScopeRules$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$EnumerateScopeRules$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumerateScopeRules$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager*,IEnumSearchScopeRules**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$EnumerateScopeRules$VH().set(seg, x);
        }
        public static void EnumerateScopeRules$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager*,IEnumSearchScopeRules**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$EnumerateScopeRules$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle HasParentScopeRule$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$HasParentScopeRule$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL*)") MemoryAddress HasParentScopeRule$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$HasParentScopeRule$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL*)") MemoryAddress HasParentScopeRule$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$HasParentScopeRule$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void HasParentScopeRule$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$HasParentScopeRule$VH().set(seg, x);
        }
        public static void HasParentScopeRule$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$HasParentScopeRule$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle HasChildScopeRule$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$HasChildScopeRule$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL*)") MemoryAddress HasChildScopeRule$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$HasChildScopeRule$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL*)") MemoryAddress HasChildScopeRule$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$HasChildScopeRule$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void HasChildScopeRule$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$HasChildScopeRule$VH().set(seg, x);
        }
        public static void HasChildScopeRule$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$HasChildScopeRule$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IncludedInCrawlScope$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$IncludedInCrawlScope$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL*)") MemoryAddress IncludedInCrawlScope$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$IncludedInCrawlScope$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL*)") MemoryAddress IncludedInCrawlScope$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$IncludedInCrawlScope$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IncludedInCrawlScope$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$IncludedInCrawlScope$VH().set(seg, x);
        }
        public static void IncludedInCrawlScope$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$IncludedInCrawlScope$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IncludedInCrawlScopeEx$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$IncludedInCrawlScopeEx$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL*,CLUSION_REASON*)") MemoryAddress IncludedInCrawlScopeEx$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$IncludedInCrawlScopeEx$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL*,CLUSION_REASON*)") MemoryAddress IncludedInCrawlScopeEx$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$IncludedInCrawlScopeEx$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IncludedInCrawlScopeEx$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL*,CLUSION_REASON*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$IncludedInCrawlScopeEx$VH().set(seg, x);
        }
        public static void IncludedInCrawlScopeEx$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,BOOL*,CLUSION_REASON*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$IncludedInCrawlScopeEx$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RevertToDefaultScopes$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RevertToDefaultScopes$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*)") MemoryAddress RevertToDefaultScopes$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RevertToDefaultScopes$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*)") MemoryAddress RevertToDefaultScopes$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RevertToDefaultScopes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RevertToDefaultScopes$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RevertToDefaultScopes$VH().set(seg, x);
        }
        public static void RevertToDefaultScopes$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RevertToDefaultScopes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SaveAll$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$SaveAll$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*)") MemoryAddress SaveAll$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$SaveAll$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*)") MemoryAddress SaveAll$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$SaveAll$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SaveAll$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$SaveAll$VH().set(seg, x);
        }
        public static void SaveAll$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$SaveAll$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParentScopeVersionId$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$GetParentScopeVersionId$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,LONG*)") MemoryAddress GetParentScopeVersionId$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$GetParentScopeVersionId$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,LONG*)") MemoryAddress GetParentScopeVersionId$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$GetParentScopeVersionId$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParentScopeVersionId$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,LONG*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$GetParentScopeVersionId$VH().set(seg, x);
        }
        public static void GetParentScopeVersionId$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR,LONG*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$GetParentScopeVersionId$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RemoveDefaultScopeRule$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RemoveDefaultScopeRule$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR)") MemoryAddress RemoveDefaultScopeRule$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RemoveDefaultScopeRule$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR)") MemoryAddress RemoveDefaultScopeRule$get(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RemoveDefaultScopeRule$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RemoveDefaultScopeRule$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RemoveDefaultScopeRule$VH().set(seg, x);
        }
        public static void RemoveDefaultScopeRule$set(@C("struct ISearchCrawlScopeManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManagerVtbl$RemoveDefaultScopeRule$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchCrawlScopeManagerVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchCrawlScopeManagerVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchCrawlScopeManagerVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchCrawlScopeManagerVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchCrawlScopeManagerVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchCrawlScopeManagerVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchCrawlScopeManagerVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct ISearchCrawlScopeManager")public static class ISearchCrawlScopeManager {

        /* package-private */ ISearchCrawlScopeManager() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager$lpVtbl$VH();
        }
        public static  @C("struct ISearchCrawlScopeManagerVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchCrawlScopeManager") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ISearchCrawlScopeManagerVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchCrawlScopeManager") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ISearchCrawlScopeManager") MemorySegment seg, @C("struct ISearchCrawlScopeManagerVtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ISearchCrawlScopeManager") MemorySegment seg, long index, @C("struct ISearchCrawlScopeManagerVtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchCrawlScopeManager") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchCrawlScopeManager") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchCrawlScopeManager[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchCrawlScopeManager[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchCrawlScopeManager*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchCrawlScopeManager*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchCrawlScopeManager") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemorySegment IID_ISearchCrawlScopeManager2$SEGMENT() {
        return searchapi_h$constants$1.IID_ISearchCrawlScopeManager2$SEGMENT();
    }
    @C("struct ISearchCrawlScopeManager2Vtbl")public static class ISearchCrawlScopeManager2Vtbl {

        /* package-private */ ISearchCrawlScopeManager2Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ISearchCrawlScopeManager2*)") MemoryAddress AddRef$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchCrawlScopeManager2*)") MemoryAddress AddRef$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("ULONG(*)(ISearchCrawlScopeManager2*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchCrawlScopeManager2*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ISearchCrawlScopeManager2*)") MemoryAddress Release$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchCrawlScopeManager2*)") MemoryAddress Release$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("ULONG(*)(ISearchCrawlScopeManager2*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchCrawlScopeManager2*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddDefaultScopeRule$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddDefaultScopeRule$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL,DWORD)") MemoryAddress AddDefaultScopeRule$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddDefaultScopeRule$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL,DWORD)") MemoryAddress AddDefaultScopeRule$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddDefaultScopeRule$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddDefaultScopeRule$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddDefaultScopeRule$VH().set(seg, x);
        }
        public static void AddDefaultScopeRule$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddDefaultScopeRule$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRoot$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddRoot$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,ISearchRoot*)") MemoryAddress AddRoot$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddRoot$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,ISearchRoot*)") MemoryAddress AddRoot$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddRoot$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRoot$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*,ISearchRoot*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddRoot$VH().set(seg, x);
        }
        public static void AddRoot$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*,ISearchRoot*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddRoot$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RemoveRoot$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RemoveRoot$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR)") MemoryAddress RemoveRoot$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RemoveRoot$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR)") MemoryAddress RemoveRoot$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RemoveRoot$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RemoveRoot$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RemoveRoot$VH().set(seg, x);
        }
        public static void RemoveRoot$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RemoveRoot$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumerateRoots$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$EnumerateRoots$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,IEnumSearchRoots**)") MemoryAddress EnumerateRoots$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$EnumerateRoots$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,IEnumSearchRoots**)") MemoryAddress EnumerateRoots$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$EnumerateRoots$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumerateRoots$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*,IEnumSearchRoots**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$EnumerateRoots$VH().set(seg, x);
        }
        public static void EnumerateRoots$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*,IEnumSearchRoots**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$EnumerateRoots$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddHierarchicalScope$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddHierarchicalScope$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL,BOOL,BOOL)") MemoryAddress AddHierarchicalScope$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddHierarchicalScope$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL,BOOL,BOOL)") MemoryAddress AddHierarchicalScope$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddHierarchicalScope$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddHierarchicalScope$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL,BOOL,BOOL)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddHierarchicalScope$VH().set(seg, x);
        }
        public static void AddHierarchicalScope$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL,BOOL,BOOL)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddHierarchicalScope$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddUserScopeRule$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddUserScopeRule$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL,BOOL,DWORD)") MemoryAddress AddUserScopeRule$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddUserScopeRule$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL,BOOL,DWORD)") MemoryAddress AddUserScopeRule$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddUserScopeRule$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddUserScopeRule$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL,BOOL,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddUserScopeRule$VH().set(seg, x);
        }
        public static void AddUserScopeRule$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL,BOOL,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$AddUserScopeRule$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RemoveScopeRule$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RemoveScopeRule$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR)") MemoryAddress RemoveScopeRule$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RemoveScopeRule$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR)") MemoryAddress RemoveScopeRule$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RemoveScopeRule$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RemoveScopeRule$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RemoveScopeRule$VH().set(seg, x);
        }
        public static void RemoveScopeRule$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RemoveScopeRule$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumerateScopeRules$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$EnumerateScopeRules$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,IEnumSearchScopeRules**)") MemoryAddress EnumerateScopeRules$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$EnumerateScopeRules$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,IEnumSearchScopeRules**)") MemoryAddress EnumerateScopeRules$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$EnumerateScopeRules$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumerateScopeRules$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*,IEnumSearchScopeRules**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$EnumerateScopeRules$VH().set(seg, x);
        }
        public static void EnumerateScopeRules$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*,IEnumSearchScopeRules**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$EnumerateScopeRules$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle HasParentScopeRule$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$HasParentScopeRule$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL*)") MemoryAddress HasParentScopeRule$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$HasParentScopeRule$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL*)") MemoryAddress HasParentScopeRule$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$HasParentScopeRule$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void HasParentScopeRule$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$HasParentScopeRule$VH().set(seg, x);
        }
        public static void HasParentScopeRule$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$HasParentScopeRule$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle HasChildScopeRule$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$HasChildScopeRule$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL*)") MemoryAddress HasChildScopeRule$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$HasChildScopeRule$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL*)") MemoryAddress HasChildScopeRule$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$HasChildScopeRule$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void HasChildScopeRule$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$HasChildScopeRule$VH().set(seg, x);
        }
        public static void HasChildScopeRule$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$HasChildScopeRule$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IncludedInCrawlScope$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$IncludedInCrawlScope$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL*)") MemoryAddress IncludedInCrawlScope$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$IncludedInCrawlScope$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL*)") MemoryAddress IncludedInCrawlScope$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$IncludedInCrawlScope$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IncludedInCrawlScope$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$IncludedInCrawlScope$VH().set(seg, x);
        }
        public static void IncludedInCrawlScope$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$IncludedInCrawlScope$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IncludedInCrawlScopeEx$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$IncludedInCrawlScopeEx$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL*,CLUSION_REASON*)") MemoryAddress IncludedInCrawlScopeEx$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$IncludedInCrawlScopeEx$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL*,CLUSION_REASON*)") MemoryAddress IncludedInCrawlScopeEx$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$IncludedInCrawlScopeEx$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IncludedInCrawlScopeEx$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL*,CLUSION_REASON*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$IncludedInCrawlScopeEx$VH().set(seg, x);
        }
        public static void IncludedInCrawlScopeEx$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,BOOL*,CLUSION_REASON*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$IncludedInCrawlScopeEx$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RevertToDefaultScopes$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RevertToDefaultScopes$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*)") MemoryAddress RevertToDefaultScopes$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RevertToDefaultScopes$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*)") MemoryAddress RevertToDefaultScopes$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RevertToDefaultScopes$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RevertToDefaultScopes$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RevertToDefaultScopes$VH().set(seg, x);
        }
        public static void RevertToDefaultScopes$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RevertToDefaultScopes$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SaveAll$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$SaveAll$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*)") MemoryAddress SaveAll$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$SaveAll$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*)") MemoryAddress SaveAll$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$SaveAll$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SaveAll$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$SaveAll$VH().set(seg, x);
        }
        public static void SaveAll$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$SaveAll$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParentScopeVersionId$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$GetParentScopeVersionId$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,LONG*)") MemoryAddress GetParentScopeVersionId$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$GetParentScopeVersionId$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,LONG*)") MemoryAddress GetParentScopeVersionId$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$GetParentScopeVersionId$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParentScopeVersionId$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,LONG*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$GetParentScopeVersionId$VH().set(seg, x);
        }
        public static void GetParentScopeVersionId$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR,LONG*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$GetParentScopeVersionId$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RemoveDefaultScopeRule$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RemoveDefaultScopeRule$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR)") MemoryAddress RemoveDefaultScopeRule$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RemoveDefaultScopeRule$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR)") MemoryAddress RemoveDefaultScopeRule$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RemoveDefaultScopeRule$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RemoveDefaultScopeRule$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RemoveDefaultScopeRule$VH().set(seg, x);
        }
        public static void RemoveDefaultScopeRule$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$RemoveDefaultScopeRule$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetVersion$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$GetVersion$VH();
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,long**,HANDLE*)") MemoryAddress GetVersion$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$GetVersion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCrawlScopeManager2*,long**,HANDLE*)") MemoryAddress GetVersion$get(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$GetVersion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetVersion$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCrawlScopeManager2*,long**,HANDLE*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$GetVersion$VH().set(seg, x);
        }
        public static void GetVersion$set(@C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCrawlScopeManager2*,long**,HANDLE*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2Vtbl$GetVersion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchCrawlScopeManager2Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchCrawlScopeManager2Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchCrawlScopeManager2Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchCrawlScopeManager2Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchCrawlScopeManager2Vtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct ISearchCrawlScopeManager2")public static class ISearchCrawlScopeManager2 {

        /* package-private */ ISearchCrawlScopeManager2() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$1.ISearchCrawlScopeManager2$lpVtbl$VH();
        }
        public static  @C("struct ISearchCrawlScopeManager2Vtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchCrawlScopeManager2") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ISearchCrawlScopeManager2Vtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchCrawlScopeManager2") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCrawlScopeManager2$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ISearchCrawlScopeManager2") MemorySegment seg, @C("struct ISearchCrawlScopeManager2Vtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ISearchCrawlScopeManager2") MemorySegment seg, long index, @C("struct ISearchCrawlScopeManager2Vtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCrawlScopeManager2$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchCrawlScopeManager2") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchCrawlScopeManager2") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchCrawlScopeManager2[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchCrawlScopeManager2[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchCrawlScopeManager2*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchCrawlScopeManager2*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchCrawlScopeManager2") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MethodHandle ISearchCrawlScopeManager2_RemoteGetVersion_Proxy$MH() {
        return searchapi_h$constants$1.ISearchCrawlScopeManager2_RemoteGetVersion_Proxy$MH();
    }
    public static @C("HRESULT") int ISearchCrawlScopeManager2_RemoteGetVersion_Proxy (@C("ISearchCrawlScopeManager2*") Addressable This, @C("long*") Addressable plVersion) {
        try {
            return (int)searchapi_h$constants$1.ISearchCrawlScopeManager2_RemoteGetVersion_Proxy$MH().invokeExact(This.address(), plVersion.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ISearchCrawlScopeManager2_RemoteGetVersion_Stub$MH() {
        return searchapi_h$constants$1.ISearchCrawlScopeManager2_RemoteGetVersion_Stub$MH();
    }
    public static void ISearchCrawlScopeManager2_RemoteGetVersion_Stub (@C("IRpcStubBuffer*") Addressable This, @C("IRpcChannelBuffer*") Addressable _pRpcChannelBuffer, @C("PRPC_MESSAGE") Addressable _pRpcMessage, @C("DWORD*") Addressable _pdwStubPhase) {
        try {
            searchapi_h$constants$1.ISearchCrawlScopeManager2_RemoteGetVersion_Stub$MH().invokeExact(This.address(), _pRpcChannelBuffer.address(), _pRpcMessage.address(), _pdwStubPhase.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static @C("int") int SEARCH_CHANGE_ADD() {
        return searchapi_h$constants$1.SEARCH_CHANGE_ADD();
    }
    public static @C("int") int SEARCH_CHANGE_DELETE() {
        return searchapi_h$constants$1.SEARCH_CHANGE_DELETE();
    }
    public static @C("int") int SEARCH_CHANGE_MODIFY() {
        return searchapi_h$constants$1.SEARCH_CHANGE_MODIFY();
    }
    public static @C("int") int SEARCH_CHANGE_MOVE_RENAME() {
        return searchapi_h$constants$1.SEARCH_CHANGE_MOVE_RENAME();
    }
    public static @C("int") int SEARCH_CHANGE_SEMANTICS_DIRECTORY() {
        return searchapi_h$constants$1.SEARCH_CHANGE_SEMANTICS_DIRECTORY();
    }
    public static @C("int") int SEARCH_CHANGE_SEMANTICS_SHALLOW() {
        return searchapi_h$constants$1.SEARCH_CHANGE_SEMANTICS_SHALLOW();
    }
    public static @C("int") int SEARCH_CHANGE_SEMANTICS_UPDATE_SECURITY() {
        return searchapi_h$constants$1.SEARCH_CHANGE_SEMANTICS_UPDATE_SECURITY();
    }
    public static @C("int") int SEARCH_NORMAL_PRIORITY() {
        return searchapi_h$constants$1.SEARCH_NORMAL_PRIORITY();
    }
    public static @C("int") int SEARCH_HIGH_PRIORITY() {
        return searchapi_h$constants$1.SEARCH_HIGH_PRIORITY();
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0015_v0_0_c_ifspec$LAYOUT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0015_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0015_v0_0_c_ifspec$VH() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0015_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0015_v0_0_c_ifspec$SEGMENT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0015_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0015_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0015_v0_0_c_ifspec$VH().get(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0015_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0015_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0015_v0_0_c_ifspec$VH().set(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0015_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0015_v0_0_s_ifspec$LAYOUT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0015_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0015_v0_0_s_ifspec$VH() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0015_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0015_v0_0_s_ifspec$SEGMENT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0015_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0015_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0015_v0_0_s_ifspec$VH().get(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0015_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0015_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0015_v0_0_s_ifspec$VH().set(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0015_v0_0_s_ifspec$SEGMENT(), x);
    }
    @C("struct _SEARCH_ITEM_CHANGE")public static class _SEARCH_ITEM_CHANGE {

        /* package-private */ _SEARCH_ITEM_CHANGE() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1._SEARCH_ITEM_CHANGE$struct$LAYOUT();
        }
        public static VarHandle Change$VH() {
            return searchapi_h$constants$1._SEARCH_ITEM_CHANGE$Change$VH();
        }
        public static  @C("SEARCH_KIND_OF_CHANGE") int Change$get(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg) {
            return (int)searchapi_h$constants$1._SEARCH_ITEM_CHANGE$Change$VH().get(seg);
        }
        public static  @C("SEARCH_KIND_OF_CHANGE") int Change$get(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$1._SEARCH_ITEM_CHANGE$Change$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Change$set(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg, @C("SEARCH_KIND_OF_CHANGE") int x) {
            searchapi_h$constants$1._SEARCH_ITEM_CHANGE$Change$VH().set(seg, x);
        }
        public static void Change$set(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg, long index, @C("SEARCH_KIND_OF_CHANGE") int x) {
            searchapi_h$constants$1._SEARCH_ITEM_CHANGE$Change$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Priority$VH() {
            return searchapi_h$constants$1._SEARCH_ITEM_CHANGE$Priority$VH();
        }
        public static  @C("SEARCH_NOTIFICATION_PRIORITY") int Priority$get(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg) {
            return (int)searchapi_h$constants$1._SEARCH_ITEM_CHANGE$Priority$VH().get(seg);
        }
        public static  @C("SEARCH_NOTIFICATION_PRIORITY") int Priority$get(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$1._SEARCH_ITEM_CHANGE$Priority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Priority$set(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg, @C("SEARCH_NOTIFICATION_PRIORITY") int x) {
            searchapi_h$constants$1._SEARCH_ITEM_CHANGE$Priority$VH().set(seg, x);
        }
        public static void Priority$set(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg, long index, @C("SEARCH_NOTIFICATION_PRIORITY") int x) {
            searchapi_h$constants$1._SEARCH_ITEM_CHANGE$Priority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pUserData$VH() {
            return searchapi_h$constants$1._SEARCH_ITEM_CHANGE$pUserData$VH();
        }
        public static  @C("BLOB*") MemoryAddress pUserData$get(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1._SEARCH_ITEM_CHANGE$pUserData$VH().get(seg);
        }
        public static  @C("BLOB*") MemoryAddress pUserData$get(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1._SEARCH_ITEM_CHANGE$pUserData$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void pUserData$set(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg, @C("BLOB*") MemoryAddress x) {
            searchapi_h$constants$1._SEARCH_ITEM_CHANGE$pUserData$VH().set(seg, x);
        }
        public static void pUserData$set(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg, long index, @C("BLOB*") MemoryAddress x) {
            searchapi_h$constants$1._SEARCH_ITEM_CHANGE$pUserData$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lpwszURL$VH() {
            return searchapi_h$constants$1._SEARCH_ITEM_CHANGE$lpwszURL$VH();
        }
        public static  @C("LPWSTR") MemoryAddress lpwszURL$get(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1._SEARCH_ITEM_CHANGE$lpwszURL$VH().get(seg);
        }
        public static  @C("LPWSTR") MemoryAddress lpwszURL$get(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1._SEARCH_ITEM_CHANGE$lpwszURL$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpwszURL$set(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg, @C("LPWSTR") MemoryAddress x) {
            searchapi_h$constants$1._SEARCH_ITEM_CHANGE$lpwszURL$VH().set(seg, x);
        }
        public static void lpwszURL$set(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg, long index, @C("LPWSTR") MemoryAddress x) {
            searchapi_h$constants$1._SEARCH_ITEM_CHANGE$lpwszURL$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle lpwszOldURL$VH() {
            return searchapi_h$constants$1._SEARCH_ITEM_CHANGE$lpwszOldURL$VH();
        }
        public static  @C("LPWSTR") MemoryAddress lpwszOldURL$get(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1._SEARCH_ITEM_CHANGE$lpwszOldURL$VH().get(seg);
        }
        public static  @C("LPWSTR") MemoryAddress lpwszOldURL$get(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1._SEARCH_ITEM_CHANGE$lpwszOldURL$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpwszOldURL$set(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg, @C("LPWSTR") MemoryAddress x) {
            searchapi_h$constants$1._SEARCH_ITEM_CHANGE$lpwszOldURL$VH().set(seg, x);
        }
        public static void lpwszOldURL$set(@C("struct _SEARCH_ITEM_CHANGE") MemorySegment seg, long index, @C("LPWSTR") MemoryAddress x) {
            searchapi_h$constants$1._SEARCH_ITEM_CHANGE$lpwszOldURL$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct _SEARCH_ITEM_CHANGE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct _SEARCH_ITEM_CHANGE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct _SEARCH_ITEM_CHANGE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct _SEARCH_ITEM_CHANGE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct _SEARCH_ITEM_CHANGE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct _SEARCH_ITEM_CHANGE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct _SEARCH_ITEM_CHANGE") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct _SEARCH_ITEM_CHANGE")public static class SEARCH_ITEM_CHANGE extends _SEARCH_ITEM_CHANGE {

        /* package-private */ SEARCH_ITEM_CHANGE() {}
    }

    public static  MemorySegment IID_ISearchItemsChangedSink$SEGMENT() {
        return searchapi_h$constants$1.IID_ISearchItemsChangedSink$SEGMENT();
    }
    @C("struct ISearchItemsChangedSinkVtbl")public static class ISearchItemsChangedSinkVtbl {

        /* package-private */ ISearchItemsChangedSinkVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ISearchItemsChangedSink*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchItemsChangedSink*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchItemsChangedSink*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchItemsChangedSink*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ISearchItemsChangedSink*)") MemoryAddress AddRef$get(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchItemsChangedSink*)") MemoryAddress AddRef$get(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, @C("ULONG(*)(ISearchItemsChangedSink*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchItemsChangedSink*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ISearchItemsChangedSink*)") MemoryAddress Release$get(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchItemsChangedSink*)") MemoryAddress Release$get(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, @C("ULONG(*)(ISearchItemsChangedSink*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchItemsChangedSink*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StartedMonitoringScope$VH() {
            return searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$StartedMonitoringScope$VH();
        }
        public static  @C("HRESULT(*)(ISearchItemsChangedSink*,LPCWSTR)") MemoryAddress StartedMonitoringScope$get(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$StartedMonitoringScope$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchItemsChangedSink*,LPCWSTR)") MemoryAddress StartedMonitoringScope$get(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$StartedMonitoringScope$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StartedMonitoringScope$set(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchItemsChangedSink*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$StartedMonitoringScope$VH().set(seg, x);
        }
        public static void StartedMonitoringScope$set(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchItemsChangedSink*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$StartedMonitoringScope$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StoppedMonitoringScope$VH() {
            return searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$StoppedMonitoringScope$VH();
        }
        public static  @C("HRESULT(*)(ISearchItemsChangedSink*,LPCWSTR)") MemoryAddress StoppedMonitoringScope$get(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$StoppedMonitoringScope$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchItemsChangedSink*,LPCWSTR)") MemoryAddress StoppedMonitoringScope$get(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$StoppedMonitoringScope$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StoppedMonitoringScope$set(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchItemsChangedSink*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$StoppedMonitoringScope$VH().set(seg, x);
        }
        public static void StoppedMonitoringScope$set(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchItemsChangedSink*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$StoppedMonitoringScope$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OnItemsChanged$VH() {
            return searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$OnItemsChanged$VH();
        }
        public static  @C("HRESULT(*)(ISearchItemsChangedSink*,DWORD,SEARCH_ITEM_CHANGE*,DWORD*,HRESULT*)") MemoryAddress OnItemsChanged$get(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$OnItemsChanged$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchItemsChangedSink*,DWORD,SEARCH_ITEM_CHANGE*,DWORD*,HRESULT*)") MemoryAddress OnItemsChanged$get(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$OnItemsChanged$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OnItemsChanged$set(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchItemsChangedSink*,DWORD,SEARCH_ITEM_CHANGE*,DWORD*,HRESULT*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$OnItemsChanged$VH().set(seg, x);
        }
        public static void OnItemsChanged$set(@C("struct ISearchItemsChangedSinkVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchItemsChangedSink*,DWORD,SEARCH_ITEM_CHANGE*,DWORD*,HRESULT*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchItemsChangedSinkVtbl$OnItemsChanged$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchItemsChangedSinkVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchItemsChangedSinkVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchItemsChangedSinkVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchItemsChangedSinkVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchItemsChangedSinkVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchItemsChangedSinkVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchItemsChangedSinkVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct ISearchItemsChangedSink")public static class ISearchItemsChangedSink {

        /* package-private */ ISearchItemsChangedSink() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchItemsChangedSink$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$1.ISearchItemsChangedSink$lpVtbl$VH();
        }
        public static  @C("struct ISearchItemsChangedSinkVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchItemsChangedSink") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchItemsChangedSink$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ISearchItemsChangedSinkVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchItemsChangedSink") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchItemsChangedSink$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ISearchItemsChangedSink") MemorySegment seg, @C("struct ISearchItemsChangedSinkVtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchItemsChangedSink$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ISearchItemsChangedSink") MemorySegment seg, long index, @C("struct ISearchItemsChangedSinkVtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchItemsChangedSink$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchItemsChangedSink") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchItemsChangedSink") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchItemsChangedSink[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchItemsChangedSink[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchItemsChangedSink*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchItemsChangedSink*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchItemsChangedSink") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct _SEARCH_ITEM_PERSISTENT_CHANGE")public static class _SEARCH_ITEM_PERSISTENT_CHANGE {

        /* package-private */ _SEARCH_ITEM_PERSISTENT_CHANGE() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$struct$LAYOUT();
        }
        public static VarHandle Change$VH() {
            return searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$Change$VH();
        }
        public static  @C("SEARCH_KIND_OF_CHANGE") int Change$get(@C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment seg) {
            return (int)searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$Change$VH().get(seg);
        }
        public static  @C("SEARCH_KIND_OF_CHANGE") int Change$get(@C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$Change$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Change$set(@C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment seg, @C("SEARCH_KIND_OF_CHANGE") int x) {
            searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$Change$VH().set(seg, x);
        }
        public static void Change$set(@C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment seg, long index, @C("SEARCH_KIND_OF_CHANGE") int x) {
            searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$Change$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle URL$VH() {
            return searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$URL$VH();
        }
        public static  @C("LPWSTR") MemoryAddress URL$get(@C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$URL$VH().get(seg);
        }
        public static  @C("LPWSTR") MemoryAddress URL$get(@C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$URL$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void URL$set(@C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment seg, @C("LPWSTR") MemoryAddress x) {
            searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$URL$VH().set(seg, x);
        }
        public static void URL$set(@C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment seg, long index, @C("LPWSTR") MemoryAddress x) {
            searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$URL$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OldURL$VH() {
            return searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$OldURL$VH();
        }
        public static  @C("LPWSTR") MemoryAddress OldURL$get(@C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$OldURL$VH().get(seg);
        }
        public static  @C("LPWSTR") MemoryAddress OldURL$get(@C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$OldURL$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OldURL$set(@C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment seg, @C("LPWSTR") MemoryAddress x) {
            searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$OldURL$VH().set(seg, x);
        }
        public static void OldURL$set(@C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment seg, long index, @C("LPWSTR") MemoryAddress x) {
            searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$OldURL$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Priority$VH() {
            return searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$Priority$VH();
        }
        public static  @C("SEARCH_NOTIFICATION_PRIORITY") int Priority$get(@C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment seg) {
            return (int)searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$Priority$VH().get(seg);
        }
        public static  @C("SEARCH_NOTIFICATION_PRIORITY") int Priority$get(@C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$Priority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Priority$set(@C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment seg, @C("SEARCH_NOTIFICATION_PRIORITY") int x) {
            searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$Priority$VH().set(seg, x);
        }
        public static void Priority$set(@C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment seg, long index, @C("SEARCH_NOTIFICATION_PRIORITY") int x) {
            searchapi_h$constants$1._SEARCH_ITEM_PERSISTENT_CHANGE$Priority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct _SEARCH_ITEM_PERSISTENT_CHANGE[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct _SEARCH_ITEM_PERSISTENT_CHANGE[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct _SEARCH_ITEM_PERSISTENT_CHANGE*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct _SEARCH_ITEM_PERSISTENT_CHANGE*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct _SEARCH_ITEM_PERSISTENT_CHANGE") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct _SEARCH_ITEM_PERSISTENT_CHANGE")public static class SEARCH_ITEM_PERSISTENT_CHANGE extends _SEARCH_ITEM_PERSISTENT_CHANGE {

        /* package-private */ SEARCH_ITEM_PERSISTENT_CHANGE() {}
    }

    public static  MemorySegment IID_ISearchPersistentItemsChangedSink$SEGMENT() {
        return searchapi_h$constants$1.IID_ISearchPersistentItemsChangedSink$SEGMENT();
    }
    @C("struct ISearchPersistentItemsChangedSinkVtbl")public static class ISearchPersistentItemsChangedSinkVtbl {

        /* package-private */ ISearchPersistentItemsChangedSinkVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ISearchPersistentItemsChangedSink*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchPersistentItemsChangedSink*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchPersistentItemsChangedSink*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchPersistentItemsChangedSink*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ISearchPersistentItemsChangedSink*)") MemoryAddress AddRef$get(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchPersistentItemsChangedSink*)") MemoryAddress AddRef$get(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, @C("ULONG(*)(ISearchPersistentItemsChangedSink*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchPersistentItemsChangedSink*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ISearchPersistentItemsChangedSink*)") MemoryAddress Release$get(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchPersistentItemsChangedSink*)") MemoryAddress Release$get(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, @C("ULONG(*)(ISearchPersistentItemsChangedSink*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchPersistentItemsChangedSink*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StartedMonitoringScope$VH() {
            return searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$StartedMonitoringScope$VH();
        }
        public static  @C("HRESULT(*)(ISearchPersistentItemsChangedSink*,LPCWSTR)") MemoryAddress StartedMonitoringScope$get(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$StartedMonitoringScope$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchPersistentItemsChangedSink*,LPCWSTR)") MemoryAddress StartedMonitoringScope$get(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$StartedMonitoringScope$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StartedMonitoringScope$set(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchPersistentItemsChangedSink*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$StartedMonitoringScope$VH().set(seg, x);
        }
        public static void StartedMonitoringScope$set(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchPersistentItemsChangedSink*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$StartedMonitoringScope$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle StoppedMonitoringScope$VH() {
            return searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$StoppedMonitoringScope$VH();
        }
        public static  @C("HRESULT(*)(ISearchPersistentItemsChangedSink*,LPCWSTR)") MemoryAddress StoppedMonitoringScope$get(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$StoppedMonitoringScope$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchPersistentItemsChangedSink*,LPCWSTR)") MemoryAddress StoppedMonitoringScope$get(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$StoppedMonitoringScope$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void StoppedMonitoringScope$set(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchPersistentItemsChangedSink*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$StoppedMonitoringScope$VH().set(seg, x);
        }
        public static void StoppedMonitoringScope$set(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchPersistentItemsChangedSink*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$StoppedMonitoringScope$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OnItemsChanged$VH() {
            return searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$OnItemsChanged$VH();
        }
        public static  @C("HRESULT(*)(ISearchPersistentItemsChangedSink*,DWORD,SEARCH_ITEM_PERSISTENT_CHANGE*,HRESULT*)") MemoryAddress OnItemsChanged$get(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$OnItemsChanged$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchPersistentItemsChangedSink*,DWORD,SEARCH_ITEM_PERSISTENT_CHANGE*,HRESULT*)") MemoryAddress OnItemsChanged$get(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$OnItemsChanged$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OnItemsChanged$set(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchPersistentItemsChangedSink*,DWORD,SEARCH_ITEM_PERSISTENT_CHANGE*,HRESULT*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$OnItemsChanged$VH().set(seg, x);
        }
        public static void OnItemsChanged$set(@C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchPersistentItemsChangedSink*,DWORD,SEARCH_ITEM_PERSISTENT_CHANGE*,HRESULT*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchPersistentItemsChangedSinkVtbl$OnItemsChanged$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchPersistentItemsChangedSinkVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchPersistentItemsChangedSinkVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchPersistentItemsChangedSinkVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchPersistentItemsChangedSinkVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchPersistentItemsChangedSinkVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct ISearchPersistentItemsChangedSink")public static class ISearchPersistentItemsChangedSink {

        /* package-private */ ISearchPersistentItemsChangedSink() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchPersistentItemsChangedSink$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$1.ISearchPersistentItemsChangedSink$lpVtbl$VH();
        }
        public static  @C("struct ISearchPersistentItemsChangedSinkVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchPersistentItemsChangedSink") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchPersistentItemsChangedSink$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ISearchPersistentItemsChangedSinkVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchPersistentItemsChangedSink") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchPersistentItemsChangedSink$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ISearchPersistentItemsChangedSink") MemorySegment seg, @C("struct ISearchPersistentItemsChangedSinkVtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchPersistentItemsChangedSink$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ISearchPersistentItemsChangedSink") MemorySegment seg, long index, @C("struct ISearchPersistentItemsChangedSinkVtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchPersistentItemsChangedSink$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchPersistentItemsChangedSink") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchPersistentItemsChangedSink") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchPersistentItemsChangedSink[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchPersistentItemsChangedSink[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchPersistentItemsChangedSink*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchPersistentItemsChangedSink*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchPersistentItemsChangedSink") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemorySegment IID_ISearchViewChangedSink$SEGMENT() {
        return searchapi_h$constants$1.IID_ISearchViewChangedSink$SEGMENT();
    }
    @C("struct ISearchViewChangedSinkVtbl")public static class ISearchViewChangedSinkVtbl {

        /* package-private */ ISearchViewChangedSinkVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchViewChangedSinkVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$1.ISearchViewChangedSinkVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ISearchViewChangedSink*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchViewChangedSinkVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchViewChangedSinkVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchViewChangedSink*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchViewChangedSinkVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchViewChangedSinkVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ISearchViewChangedSinkVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchViewChangedSink*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchViewChangedSinkVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ISearchViewChangedSinkVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchViewChangedSink*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchViewChangedSinkVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$1.ISearchViewChangedSinkVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ISearchViewChangedSink*)") MemoryAddress AddRef$get(@C("struct ISearchViewChangedSinkVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchViewChangedSinkVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchViewChangedSink*)") MemoryAddress AddRef$get(@C("struct ISearchViewChangedSinkVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchViewChangedSinkVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ISearchViewChangedSinkVtbl") MemorySegment seg, @C("ULONG(*)(ISearchViewChangedSink*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchViewChangedSinkVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ISearchViewChangedSinkVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchViewChangedSink*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchViewChangedSinkVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$1.ISearchViewChangedSinkVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ISearchViewChangedSink*)") MemoryAddress Release$get(@C("struct ISearchViewChangedSinkVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchViewChangedSinkVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchViewChangedSink*)") MemoryAddress Release$get(@C("struct ISearchViewChangedSinkVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchViewChangedSinkVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ISearchViewChangedSinkVtbl") MemorySegment seg, @C("ULONG(*)(ISearchViewChangedSink*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchViewChangedSinkVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ISearchViewChangedSinkVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchViewChangedSink*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchViewChangedSinkVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OnChange$VH() {
            return searchapi_h$constants$1.ISearchViewChangedSinkVtbl$OnChange$VH();
        }
        public static  @C("HRESULT(*)(ISearchViewChangedSink*,ITEMID*,SEARCH_ITEM_CHANGE*,BOOL*)") MemoryAddress OnChange$get(@C("struct ISearchViewChangedSinkVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchViewChangedSinkVtbl$OnChange$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchViewChangedSink*,ITEMID*,SEARCH_ITEM_CHANGE*,BOOL*)") MemoryAddress OnChange$get(@C("struct ISearchViewChangedSinkVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchViewChangedSinkVtbl$OnChange$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OnChange$set(@C("struct ISearchViewChangedSinkVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchViewChangedSink*,ITEMID*,SEARCH_ITEM_CHANGE*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchViewChangedSinkVtbl$OnChange$VH().set(seg, x);
        }
        public static void OnChange$set(@C("struct ISearchViewChangedSinkVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchViewChangedSink*,ITEMID*,SEARCH_ITEM_CHANGE*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchViewChangedSinkVtbl$OnChange$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchViewChangedSinkVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchViewChangedSinkVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchViewChangedSinkVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchViewChangedSinkVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchViewChangedSinkVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchViewChangedSinkVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchViewChangedSinkVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct ISearchViewChangedSink")public static class ISearchViewChangedSink {

        /* package-private */ ISearchViewChangedSink() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchViewChangedSink$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$1.ISearchViewChangedSink$lpVtbl$VH();
        }
        public static  @C("struct ISearchViewChangedSinkVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchViewChangedSink") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchViewChangedSink$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ISearchViewChangedSinkVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchViewChangedSink") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchViewChangedSink$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ISearchViewChangedSink") MemorySegment seg, @C("struct ISearchViewChangedSinkVtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchViewChangedSink$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ISearchViewChangedSink") MemorySegment seg, long index, @C("struct ISearchViewChangedSinkVtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchViewChangedSink$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchViewChangedSink") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchViewChangedSink") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchViewChangedSink[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchViewChangedSink[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchViewChangedSink*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchViewChangedSink*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchViewChangedSink") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemoryLayout __MIDL_itf_searchapi_0000_0018_v0_0_c_ifspec$LAYOUT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0018_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0018_v0_0_c_ifspec$VH() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0018_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0018_v0_0_c_ifspec$SEGMENT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0018_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0018_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0018_v0_0_c_ifspec$VH().get(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0018_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0018_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0018_v0_0_c_ifspec$VH().set(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0018_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0018_v0_0_s_ifspec$LAYOUT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0018_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0018_v0_0_s_ifspec$VH() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0018_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0018_v0_0_s_ifspec$SEGMENT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0018_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0018_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0018_v0_0_s_ifspec$VH().get(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0018_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0018_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0018_v0_0_s_ifspec$VH().set(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0018_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static @C("int") int SEARCH_INDEXING_PHASE_GATHERER() {
        return searchapi_h$constants$1.SEARCH_INDEXING_PHASE_GATHERER();
    }
    public static @C("int") int SEARCH_INDEXING_PHASE_QUERYABLE() {
        return searchapi_h$constants$1.SEARCH_INDEXING_PHASE_QUERYABLE();
    }
    public static @C("int") int SEARCH_INDEXING_PHASE_PERSISTED() {
        return searchapi_h$constants$1.SEARCH_INDEXING_PHASE_PERSISTED();
    }
    @C("struct _SEARCH_ITEM_INDEXING_STATUS")public static class _SEARCH_ITEM_INDEXING_STATUS {

        /* package-private */ _SEARCH_ITEM_INDEXING_STATUS() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1._SEARCH_ITEM_INDEXING_STATUS$struct$LAYOUT();
        }
        public static VarHandle dwDocID$VH() {
            return searchapi_h$constants$1._SEARCH_ITEM_INDEXING_STATUS$dwDocID$VH();
        }
        public static  @C("DWORD") int dwDocID$get(@C("struct _SEARCH_ITEM_INDEXING_STATUS") MemorySegment seg) {
            return (int)searchapi_h$constants$1._SEARCH_ITEM_INDEXING_STATUS$dwDocID$VH().get(seg);
        }
        public static  @C("DWORD") int dwDocID$get(@C("struct _SEARCH_ITEM_INDEXING_STATUS") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$1._SEARCH_ITEM_INDEXING_STATUS$dwDocID$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void dwDocID$set(@C("struct _SEARCH_ITEM_INDEXING_STATUS") MemorySegment seg, @C("DWORD") int x) {
            searchapi_h$constants$1._SEARCH_ITEM_INDEXING_STATUS$dwDocID$VH().set(seg, x);
        }
        public static void dwDocID$set(@C("struct _SEARCH_ITEM_INDEXING_STATUS") MemorySegment seg, long index, @C("DWORD") int x) {
            searchapi_h$constants$1._SEARCH_ITEM_INDEXING_STATUS$dwDocID$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle hrIndexingStatus$VH() {
            return searchapi_h$constants$1._SEARCH_ITEM_INDEXING_STATUS$hrIndexingStatus$VH();
        }
        public static  @C("HRESULT") int hrIndexingStatus$get(@C("struct _SEARCH_ITEM_INDEXING_STATUS") MemorySegment seg) {
            return (int)searchapi_h$constants$1._SEARCH_ITEM_INDEXING_STATUS$hrIndexingStatus$VH().get(seg);
        }
        public static  @C("HRESULT") int hrIndexingStatus$get(@C("struct _SEARCH_ITEM_INDEXING_STATUS") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$1._SEARCH_ITEM_INDEXING_STATUS$hrIndexingStatus$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void hrIndexingStatus$set(@C("struct _SEARCH_ITEM_INDEXING_STATUS") MemorySegment seg, @C("HRESULT") int x) {
            searchapi_h$constants$1._SEARCH_ITEM_INDEXING_STATUS$hrIndexingStatus$VH().set(seg, x);
        }
        public static void hrIndexingStatus$set(@C("struct _SEARCH_ITEM_INDEXING_STATUS") MemorySegment seg, long index, @C("HRESULT") int x) {
            searchapi_h$constants$1._SEARCH_ITEM_INDEXING_STATUS$hrIndexingStatus$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct _SEARCH_ITEM_INDEXING_STATUS") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct _SEARCH_ITEM_INDEXING_STATUS") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct _SEARCH_ITEM_INDEXING_STATUS[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct _SEARCH_ITEM_INDEXING_STATUS[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct _SEARCH_ITEM_INDEXING_STATUS*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct _SEARCH_ITEM_INDEXING_STATUS*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct _SEARCH_ITEM_INDEXING_STATUS") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct _SEARCH_ITEM_INDEXING_STATUS")public static class SEARCH_ITEM_INDEXING_STATUS extends _SEARCH_ITEM_INDEXING_STATUS {

        /* package-private */ SEARCH_ITEM_INDEXING_STATUS() {}
    }

    public static  MemorySegment IID_ISearchNotifyInlineSite$SEGMENT() {
        return searchapi_h$constants$1.IID_ISearchNotifyInlineSite$SEGMENT();
    }
    @C("struct ISearchNotifyInlineSiteVtbl")public static class ISearchNotifyInlineSiteVtbl {

        /* package-private */ ISearchNotifyInlineSiteVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ISearchNotifyInlineSite*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchNotifyInlineSite*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchNotifyInlineSite*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchNotifyInlineSite*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ISearchNotifyInlineSite*)") MemoryAddress AddRef$get(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchNotifyInlineSite*)") MemoryAddress AddRef$get(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg, @C("ULONG(*)(ISearchNotifyInlineSite*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchNotifyInlineSite*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ISearchNotifyInlineSite*)") MemoryAddress Release$get(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchNotifyInlineSite*)") MemoryAddress Release$get(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg, @C("ULONG(*)(ISearchNotifyInlineSite*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchNotifyInlineSite*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OnItemIndexedStatusChange$VH() {
            return searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$OnItemIndexedStatusChange$VH();
        }
        public static  @C("HRESULT(*)(ISearchNotifyInlineSite*,SEARCH_INDEXING_PHASE,DWORD,SEARCH_ITEM_INDEXING_STATUS*)") MemoryAddress OnItemIndexedStatusChange$get(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$OnItemIndexedStatusChange$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchNotifyInlineSite*,SEARCH_INDEXING_PHASE,DWORD,SEARCH_ITEM_INDEXING_STATUS*)") MemoryAddress OnItemIndexedStatusChange$get(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$OnItemIndexedStatusChange$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OnItemIndexedStatusChange$set(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchNotifyInlineSite*,SEARCH_INDEXING_PHASE,DWORD,SEARCH_ITEM_INDEXING_STATUS*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$OnItemIndexedStatusChange$VH().set(seg, x);
        }
        public static void OnItemIndexedStatusChange$set(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchNotifyInlineSite*,SEARCH_INDEXING_PHASE,DWORD,SEARCH_ITEM_INDEXING_STATUS*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$OnItemIndexedStatusChange$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OnCatalogStatusChange$VH() {
            return searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$OnCatalogStatusChange$VH();
        }
        public static  @C("HRESULT(*)(ISearchNotifyInlineSite*,const GUID*,const GUID*,DWORD)") MemoryAddress OnCatalogStatusChange$get(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$OnCatalogStatusChange$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchNotifyInlineSite*,const GUID*,const GUID*,DWORD)") MemoryAddress OnCatalogStatusChange$get(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$OnCatalogStatusChange$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OnCatalogStatusChange$set(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchNotifyInlineSite*,const GUID*,const GUID*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$OnCatalogStatusChange$VH().set(seg, x);
        }
        public static void OnCatalogStatusChange$set(@C("struct ISearchNotifyInlineSiteVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchNotifyInlineSite*,const GUID*,const GUID*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchNotifyInlineSiteVtbl$OnCatalogStatusChange$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchNotifyInlineSiteVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchNotifyInlineSiteVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchNotifyInlineSiteVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchNotifyInlineSiteVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchNotifyInlineSiteVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchNotifyInlineSiteVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchNotifyInlineSiteVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct ISearchNotifyInlineSite")public static class ISearchNotifyInlineSite {

        /* package-private */ ISearchNotifyInlineSite() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchNotifyInlineSite$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$1.ISearchNotifyInlineSite$lpVtbl$VH();
        }
        public static  @C("struct ISearchNotifyInlineSiteVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchNotifyInlineSite") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchNotifyInlineSite$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ISearchNotifyInlineSiteVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchNotifyInlineSite") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchNotifyInlineSite$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ISearchNotifyInlineSite") MemorySegment seg, @C("struct ISearchNotifyInlineSiteVtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchNotifyInlineSite$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ISearchNotifyInlineSite") MemorySegment seg, long index, @C("struct ISearchNotifyInlineSiteVtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchNotifyInlineSite$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchNotifyInlineSite") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchNotifyInlineSite") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchNotifyInlineSite[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchNotifyInlineSite[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchNotifyInlineSite*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchNotifyInlineSite*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchNotifyInlineSite") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static @C("int") int CATALOG_STATUS_IDLE() {
        return searchapi_h$constants$1.CATALOG_STATUS_IDLE();
    }
    public static @C("int") int CATALOG_STATUS_PAUSED() {
        return searchapi_h$constants$1.CATALOG_STATUS_PAUSED();
    }
    public static @C("int") int CATALOG_STATUS_RECOVERING() {
        return searchapi_h$constants$1.CATALOG_STATUS_RECOVERING();
    }
    public static @C("int") int CATALOG_STATUS_FULL_CRAWL() {
        return searchapi_h$constants$1.CATALOG_STATUS_FULL_CRAWL();
    }
    public static @C("int") int CATALOG_STATUS_INCREMENTAL_CRAWL() {
        return searchapi_h$constants$1.CATALOG_STATUS_INCREMENTAL_CRAWL();
    }
    public static @C("int") int CATALOG_STATUS_PROCESSING_NOTIFICATIONS() {
        return searchapi_h$constants$1.CATALOG_STATUS_PROCESSING_NOTIFICATIONS();
    }
    public static @C("int") int CATALOG_STATUS_SHUTTING_DOWN() {
        return searchapi_h$constants$1.CATALOG_STATUS_SHUTTING_DOWN();
    }
    public static @C("int") int CATALOG_PAUSED_REASON_NONE() {
        return searchapi_h$constants$1.CATALOG_PAUSED_REASON_NONE();
    }
    public static @C("int") int CATALOG_PAUSED_REASON_HIGH_IO() {
        return searchapi_h$constants$1.CATALOG_PAUSED_REASON_HIGH_IO();
    }
    public static @C("int") int CATALOG_PAUSED_REASON_HIGH_CPU() {
        return searchapi_h$constants$1.CATALOG_PAUSED_REASON_HIGH_CPU();
    }
    public static @C("int") int CATALOG_PAUSED_REASON_HIGH_NTF_RATE() {
        return searchapi_h$constants$1.CATALOG_PAUSED_REASON_HIGH_NTF_RATE();
    }
    public static @C("int") int CATALOG_PAUSED_REASON_LOW_BATTERY() {
        return searchapi_h$constants$1.CATALOG_PAUSED_REASON_LOW_BATTERY();
    }
    public static @C("int") int CATALOG_PAUSED_REASON_LOW_MEMORY() {
        return searchapi_h$constants$1.CATALOG_PAUSED_REASON_LOW_MEMORY();
    }
    public static @C("int") int CATALOG_PAUSED_REASON_LOW_DISK() {
        return searchapi_h$constants$1.CATALOG_PAUSED_REASON_LOW_DISK();
    }
    public static @C("int") int CATALOG_PAUSED_REASON_DELAYED_RECOVERY() {
        return searchapi_h$constants$1.CATALOG_PAUSED_REASON_DELAYED_RECOVERY();
    }
    public static @C("int") int CATALOG_PAUSED_REASON_USER_ACTIVE() {
        return searchapi_h$constants$1.CATALOG_PAUSED_REASON_USER_ACTIVE();
    }
    public static @C("int") int CATALOG_PAUSED_REASON_EXTERNAL() {
        return searchapi_h$constants$1.CATALOG_PAUSED_REASON_EXTERNAL();
    }
    public static @C("int") int CATALOG_PAUSED_REASON_UPGRADING() {
        return searchapi_h$constants$1.CATALOG_PAUSED_REASON_UPGRADING();
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0019_v0_0_c_ifspec$LAYOUT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0019_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0019_v0_0_c_ifspec$VH() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0019_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0019_v0_0_c_ifspec$SEGMENT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0019_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0019_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0019_v0_0_c_ifspec$VH().get(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0019_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0019_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0019_v0_0_c_ifspec$VH().set(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0019_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0019_v0_0_s_ifspec$LAYOUT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0019_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0019_v0_0_s_ifspec$VH() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0019_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0019_v0_0_s_ifspec$SEGMENT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0019_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0019_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0019_v0_0_s_ifspec$VH().get(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0019_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0019_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0019_v0_0_s_ifspec$VH().set(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0019_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ISearchCatalogManager$SEGMENT() {
        return searchapi_h$constants$1.IID_ISearchCatalogManager$SEGMENT();
    }
    @C("struct ISearchCatalogManagerVtbl")public static class ISearchCatalogManagerVtbl {

        /* package-private */ ISearchCatalogManagerVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ISearchCatalogManager*)") MemoryAddress AddRef$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchCatalogManager*)") MemoryAddress AddRef$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("ULONG(*)(ISearchCatalogManager*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchCatalogManager*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ISearchCatalogManager*)") MemoryAddress Release$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchCatalogManager*)") MemoryAddress Release$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("ULONG(*)(ISearchCatalogManager*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchCatalogManager*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_Name$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_Name$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPWSTR*)") MemoryAddress get_Name$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_Name$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPWSTR*)") MemoryAddress get_Name$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_Name$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_Name$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_Name$VH().set(seg, x);
        }
        public static void get_Name$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_Name$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParameter$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetParameter$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,PROPVARIANT**)") MemoryAddress GetParameter$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetParameter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,PROPVARIANT**)") MemoryAddress GetParameter$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetParameter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParameter$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,PROPVARIANT**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetParameter$VH().set(seg, x);
        }
        public static void GetParameter$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,PROPVARIANT**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetParameter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetParameter$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$SetParameter$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,PROPVARIANT*)") MemoryAddress SetParameter$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$SetParameter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,PROPVARIANT*)") MemoryAddress SetParameter$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$SetParameter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetParameter$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$SetParameter$VH().set(seg, x);
        }
        public static void SetParameter$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$SetParameter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCatalogStatus$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetCatalogStatus$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,CatalogStatus*,CatalogPausedReason*)") MemoryAddress GetCatalogStatus$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetCatalogStatus$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,CatalogStatus*,CatalogPausedReason*)") MemoryAddress GetCatalogStatus$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetCatalogStatus$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCatalogStatus$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,CatalogStatus*,CatalogPausedReason*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetCatalogStatus$VH().set(seg, x);
        }
        public static void GetCatalogStatus$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,CatalogStatus*,CatalogPausedReason*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetCatalogStatus$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Reset$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$Reset$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*)") MemoryAddress Reset$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$Reset$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*)") MemoryAddress Reset$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$Reset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Reset$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$Reset$VH().set(seg, x);
        }
        public static void Reset$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$Reset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Reindex$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$Reindex$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*)") MemoryAddress Reindex$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$Reindex$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*)") MemoryAddress Reindex$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$Reindex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Reindex$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$Reindex$VH().set(seg, x);
        }
        public static void Reindex$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$Reindex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ReindexMatchingURLs$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$ReindexMatchingURLs$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR)") MemoryAddress ReindexMatchingURLs$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$ReindexMatchingURLs$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR)") MemoryAddress ReindexMatchingURLs$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$ReindexMatchingURLs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ReindexMatchingURLs$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$ReindexMatchingURLs$VH().set(seg, x);
        }
        public static void ReindexMatchingURLs$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$ReindexMatchingURLs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ReindexSearchRoot$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$ReindexSearchRoot$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR)") MemoryAddress ReindexSearchRoot$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$ReindexSearchRoot$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR)") MemoryAddress ReindexSearchRoot$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$ReindexSearchRoot$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ReindexSearchRoot$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$ReindexSearchRoot$VH().set(seg, x);
        }
        public static void ReindexSearchRoot$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$ReindexSearchRoot$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_ConnectTimeout$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$put_ConnectTimeout$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,DWORD)") MemoryAddress put_ConnectTimeout$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$put_ConnectTimeout$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,DWORD)") MemoryAddress put_ConnectTimeout$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$put_ConnectTimeout$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_ConnectTimeout$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$put_ConnectTimeout$VH().set(seg, x);
        }
        public static void put_ConnectTimeout$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$put_ConnectTimeout$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_ConnectTimeout$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_ConnectTimeout$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,DWORD*)") MemoryAddress get_ConnectTimeout$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_ConnectTimeout$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,DWORD*)") MemoryAddress get_ConnectTimeout$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_ConnectTimeout$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_ConnectTimeout$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_ConnectTimeout$VH().set(seg, x);
        }
        public static void get_ConnectTimeout$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_ConnectTimeout$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_DataTimeout$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$put_DataTimeout$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,DWORD)") MemoryAddress put_DataTimeout$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$put_DataTimeout$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,DWORD)") MemoryAddress put_DataTimeout$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$put_DataTimeout$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_DataTimeout$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$put_DataTimeout$VH().set(seg, x);
        }
        public static void put_DataTimeout$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$put_DataTimeout$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_DataTimeout$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_DataTimeout$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,DWORD*)") MemoryAddress get_DataTimeout$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_DataTimeout$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,DWORD*)") MemoryAddress get_DataTimeout$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_DataTimeout$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_DataTimeout$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_DataTimeout$VH().set(seg, x);
        }
        public static void get_DataTimeout$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_DataTimeout$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumberOfItems$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$NumberOfItems$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LONG*)") MemoryAddress NumberOfItems$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$NumberOfItems$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LONG*)") MemoryAddress NumberOfItems$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$NumberOfItems$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumberOfItems$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,LONG*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$NumberOfItems$VH().set(seg, x);
        }
        public static void NumberOfItems$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,LONG*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$NumberOfItems$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumberOfItemsToIndex$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$NumberOfItemsToIndex$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LONG*,LONG*,LONG*)") MemoryAddress NumberOfItemsToIndex$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$NumberOfItemsToIndex$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LONG*,LONG*,LONG*)") MemoryAddress NumberOfItemsToIndex$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$NumberOfItemsToIndex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumberOfItemsToIndex$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,LONG*,LONG*,LONG*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$NumberOfItemsToIndex$VH().set(seg, x);
        }
        public static void NumberOfItemsToIndex$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,LONG*,LONG*,LONG*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$NumberOfItemsToIndex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle URLBeingIndexed$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$URLBeingIndexed$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPWSTR*)") MemoryAddress URLBeingIndexed$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$URLBeingIndexed$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPWSTR*)") MemoryAddress URLBeingIndexed$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$URLBeingIndexed$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void URLBeingIndexed$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$URLBeingIndexed$VH().set(seg, x);
        }
        public static void URLBeingIndexed$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$URLBeingIndexed$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetURLIndexingState$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetURLIndexingState$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,DWORD*)") MemoryAddress GetURLIndexingState$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetURLIndexingState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,DWORD*)") MemoryAddress GetURLIndexingState$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetURLIndexingState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetURLIndexingState$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetURLIndexingState$VH().set(seg, x);
        }
        public static void GetURLIndexingState$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetURLIndexingState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPersistentItemsChangedSink$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetPersistentItemsChangedSink$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,ISearchPersistentItemsChangedSink**)") MemoryAddress GetPersistentItemsChangedSink$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetPersistentItemsChangedSink$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,ISearchPersistentItemsChangedSink**)") MemoryAddress GetPersistentItemsChangedSink$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetPersistentItemsChangedSink$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPersistentItemsChangedSink$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,ISearchPersistentItemsChangedSink**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetPersistentItemsChangedSink$VH().set(seg, x);
        }
        public static void GetPersistentItemsChangedSink$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,ISearchPersistentItemsChangedSink**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetPersistentItemsChangedSink$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RegisterViewForNotification$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$RegisterViewForNotification$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,ISearchViewChangedSink*,DWORD*)") MemoryAddress RegisterViewForNotification$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$RegisterViewForNotification$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,ISearchViewChangedSink*,DWORD*)") MemoryAddress RegisterViewForNotification$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$RegisterViewForNotification$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RegisterViewForNotification$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,ISearchViewChangedSink*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$RegisterViewForNotification$VH().set(seg, x);
        }
        public static void RegisterViewForNotification$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,ISearchViewChangedSink*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$RegisterViewForNotification$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetItemsChangedSink$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetItemsChangedSink$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,ISearchNotifyInlineSite*,const IID*,void**,GUID*,GUID*,DWORD*)") MemoryAddress GetItemsChangedSink$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetItemsChangedSink$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,ISearchNotifyInlineSite*,const IID*,void**,GUID*,GUID*,DWORD*)") MemoryAddress GetItemsChangedSink$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetItemsChangedSink$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetItemsChangedSink$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,ISearchNotifyInlineSite*,const IID*,void**,GUID*,GUID*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetItemsChangedSink$VH().set(seg, x);
        }
        public static void GetItemsChangedSink$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,ISearchNotifyInlineSite*,const IID*,void**,GUID*,GUID*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetItemsChangedSink$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle UnregisterViewForNotification$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$UnregisterViewForNotification$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,DWORD)") MemoryAddress UnregisterViewForNotification$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$UnregisterViewForNotification$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,DWORD)") MemoryAddress UnregisterViewForNotification$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$UnregisterViewForNotification$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void UnregisterViewForNotification$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$UnregisterViewForNotification$VH().set(seg, x);
        }
        public static void UnregisterViewForNotification$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$UnregisterViewForNotification$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetExtensionClusion$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$SetExtensionClusion$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,BOOL)") MemoryAddress SetExtensionClusion$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$SetExtensionClusion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,BOOL)") MemoryAddress SetExtensionClusion$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$SetExtensionClusion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetExtensionClusion$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,BOOL)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$SetExtensionClusion$VH().set(seg, x);
        }
        public static void SetExtensionClusion$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,LPCWSTR,BOOL)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$SetExtensionClusion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumerateExcludedExtensions$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$EnumerateExcludedExtensions$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,IEnumString**)") MemoryAddress EnumerateExcludedExtensions$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$EnumerateExcludedExtensions$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,IEnumString**)") MemoryAddress EnumerateExcludedExtensions$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$EnumerateExcludedExtensions$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumerateExcludedExtensions$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,IEnumString**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$EnumerateExcludedExtensions$VH().set(seg, x);
        }
        public static void EnumerateExcludedExtensions$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,IEnumString**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$EnumerateExcludedExtensions$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetQueryHelper$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetQueryHelper$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,ISearchQueryHelper**)") MemoryAddress GetQueryHelper$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetQueryHelper$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,ISearchQueryHelper**)") MemoryAddress GetQueryHelper$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetQueryHelper$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetQueryHelper$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,ISearchQueryHelper**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetQueryHelper$VH().set(seg, x);
        }
        public static void GetQueryHelper$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,ISearchQueryHelper**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetQueryHelper$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_DiacriticSensitivity$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$put_DiacriticSensitivity$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,BOOL)") MemoryAddress put_DiacriticSensitivity$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$put_DiacriticSensitivity$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,BOOL)") MemoryAddress put_DiacriticSensitivity$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$put_DiacriticSensitivity$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_DiacriticSensitivity$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,BOOL)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$put_DiacriticSensitivity$VH().set(seg, x);
        }
        public static void put_DiacriticSensitivity$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,BOOL)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$put_DiacriticSensitivity$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_DiacriticSensitivity$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_DiacriticSensitivity$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,BOOL*)") MemoryAddress get_DiacriticSensitivity$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_DiacriticSensitivity$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,BOOL*)") MemoryAddress get_DiacriticSensitivity$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_DiacriticSensitivity$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_DiacriticSensitivity$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_DiacriticSensitivity$VH().set(seg, x);
        }
        public static void get_DiacriticSensitivity$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$get_DiacriticSensitivity$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCrawlScopeManager$VH() {
            return searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetCrawlScopeManager$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,ISearchCrawlScopeManager**)") MemoryAddress GetCrawlScopeManager$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetCrawlScopeManager$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager*,ISearchCrawlScopeManager**)") MemoryAddress GetCrawlScopeManager$get(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetCrawlScopeManager$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCrawlScopeManager$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager*,ISearchCrawlScopeManager**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetCrawlScopeManager$VH().set(seg, x);
        }
        public static void GetCrawlScopeManager$set(@C("struct ISearchCatalogManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager*,ISearchCrawlScopeManager**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManagerVtbl$GetCrawlScopeManager$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchCatalogManagerVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchCatalogManagerVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchCatalogManagerVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchCatalogManagerVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchCatalogManagerVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchCatalogManagerVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchCatalogManagerVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct ISearchCatalogManager")public static class ISearchCatalogManager {

        /* package-private */ ISearchCatalogManager() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchCatalogManager$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager$lpVtbl$VH();
        }
        public static  @C("struct ISearchCatalogManagerVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchCatalogManager") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ISearchCatalogManagerVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchCatalogManager") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ISearchCatalogManager") MemorySegment seg, @C("struct ISearchCatalogManagerVtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ISearchCatalogManager") MemorySegment seg, long index, @C("struct ISearchCatalogManagerVtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchCatalogManager") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchCatalogManager") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchCatalogManager[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchCatalogManager[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchCatalogManager*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchCatalogManager*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchCatalogManager") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static @C("int") int PRIORITIZE_FLAG_RETRYFAILEDITEMS() {
        return searchapi_h$constants$1.PRIORITIZE_FLAG_RETRYFAILEDITEMS();
    }
    public static @C("int") int PRIORITIZE_FLAG_IGNOREFAILURECOUNT() {
        return searchapi_h$constants$1.PRIORITIZE_FLAG_IGNOREFAILURECOUNT();
    }
    public static @C("int") ValueLayout PRIORITIZE_FLAGS = C_INT;
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0020_v0_0_c_ifspec$LAYOUT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0020_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0020_v0_0_c_ifspec$VH() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0020_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0020_v0_0_c_ifspec$SEGMENT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0020_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0020_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0020_v0_0_c_ifspec$VH().get(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0020_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0020_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0020_v0_0_c_ifspec$VH().set(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0020_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0020_v0_0_s_ifspec$LAYOUT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0020_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0020_v0_0_s_ifspec$VH() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0020_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0020_v0_0_s_ifspec$SEGMENT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0020_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0020_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0020_v0_0_s_ifspec$VH().get(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0020_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0020_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0020_v0_0_s_ifspec$VH().set(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0020_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ISearchCatalogManager2$SEGMENT() {
        return searchapi_h$constants$1.IID_ISearchCatalogManager2$SEGMENT();
    }
    @C("struct ISearchCatalogManager2Vtbl")public static class ISearchCatalogManager2Vtbl {

        /* package-private */ ISearchCatalogManager2Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ISearchCatalogManager2*)") MemoryAddress AddRef$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchCatalogManager2*)") MemoryAddress AddRef$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("ULONG(*)(ISearchCatalogManager2*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchCatalogManager2*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ISearchCatalogManager2*)") MemoryAddress Release$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchCatalogManager2*)") MemoryAddress Release$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("ULONG(*)(ISearchCatalogManager2*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchCatalogManager2*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_Name$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_Name$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPWSTR*)") MemoryAddress get_Name$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_Name$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPWSTR*)") MemoryAddress get_Name$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_Name$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_Name$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_Name$VH().set(seg, x);
        }
        public static void get_Name$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_Name$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParameter$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetParameter$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,PROPVARIANT**)") MemoryAddress GetParameter$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetParameter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,PROPVARIANT**)") MemoryAddress GetParameter$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetParameter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParameter$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,PROPVARIANT**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetParameter$VH().set(seg, x);
        }
        public static void GetParameter$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,PROPVARIANT**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetParameter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetParameter$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$SetParameter$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,PROPVARIANT*)") MemoryAddress SetParameter$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$SetParameter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,PROPVARIANT*)") MemoryAddress SetParameter$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$SetParameter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetParameter$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$SetParameter$VH().set(seg, x);
        }
        public static void SetParameter$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$SetParameter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCatalogStatus$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetCatalogStatus$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,CatalogStatus*,CatalogPausedReason*)") MemoryAddress GetCatalogStatus$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetCatalogStatus$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,CatalogStatus*,CatalogPausedReason*)") MemoryAddress GetCatalogStatus$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetCatalogStatus$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCatalogStatus$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,CatalogStatus*,CatalogPausedReason*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetCatalogStatus$VH().set(seg, x);
        }
        public static void GetCatalogStatus$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,CatalogStatus*,CatalogPausedReason*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetCatalogStatus$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Reset$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$Reset$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*)") MemoryAddress Reset$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$Reset$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*)") MemoryAddress Reset$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$Reset$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Reset$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$Reset$VH().set(seg, x);
        }
        public static void Reset$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$Reset$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Reindex$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$Reindex$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*)") MemoryAddress Reindex$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$Reindex$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*)") MemoryAddress Reindex$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$Reindex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Reindex$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$Reindex$VH().set(seg, x);
        }
        public static void Reindex$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$Reindex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ReindexMatchingURLs$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$ReindexMatchingURLs$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR)") MemoryAddress ReindexMatchingURLs$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$ReindexMatchingURLs$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR)") MemoryAddress ReindexMatchingURLs$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$ReindexMatchingURLs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ReindexMatchingURLs$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$ReindexMatchingURLs$VH().set(seg, x);
        }
        public static void ReindexMatchingURLs$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$ReindexMatchingURLs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ReindexSearchRoot$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$ReindexSearchRoot$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR)") MemoryAddress ReindexSearchRoot$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$ReindexSearchRoot$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR)") MemoryAddress ReindexSearchRoot$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$ReindexSearchRoot$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void ReindexSearchRoot$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$ReindexSearchRoot$VH().set(seg, x);
        }
        public static void ReindexSearchRoot$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$ReindexSearchRoot$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_ConnectTimeout$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$put_ConnectTimeout$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,DWORD)") MemoryAddress put_ConnectTimeout$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$put_ConnectTimeout$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,DWORD)") MemoryAddress put_ConnectTimeout$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$put_ConnectTimeout$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_ConnectTimeout$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$put_ConnectTimeout$VH().set(seg, x);
        }
        public static void put_ConnectTimeout$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$put_ConnectTimeout$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_ConnectTimeout$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_ConnectTimeout$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,DWORD*)") MemoryAddress get_ConnectTimeout$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_ConnectTimeout$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,DWORD*)") MemoryAddress get_ConnectTimeout$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_ConnectTimeout$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_ConnectTimeout$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_ConnectTimeout$VH().set(seg, x);
        }
        public static void get_ConnectTimeout$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_ConnectTimeout$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_DataTimeout$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$put_DataTimeout$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,DWORD)") MemoryAddress put_DataTimeout$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$put_DataTimeout$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,DWORD)") MemoryAddress put_DataTimeout$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$put_DataTimeout$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_DataTimeout$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$put_DataTimeout$VH().set(seg, x);
        }
        public static void put_DataTimeout$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$put_DataTimeout$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_DataTimeout$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_DataTimeout$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,DWORD*)") MemoryAddress get_DataTimeout$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_DataTimeout$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,DWORD*)") MemoryAddress get_DataTimeout$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_DataTimeout$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_DataTimeout$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_DataTimeout$VH().set(seg, x);
        }
        public static void get_DataTimeout$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_DataTimeout$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumberOfItems$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$NumberOfItems$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LONG*)") MemoryAddress NumberOfItems$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$NumberOfItems$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LONG*)") MemoryAddress NumberOfItems$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$NumberOfItems$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumberOfItems$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,LONG*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$NumberOfItems$VH().set(seg, x);
        }
        public static void NumberOfItems$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,LONG*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$NumberOfItems$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle NumberOfItemsToIndex$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$NumberOfItemsToIndex$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LONG*,LONG*,LONG*)") MemoryAddress NumberOfItemsToIndex$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$NumberOfItemsToIndex$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LONG*,LONG*,LONG*)") MemoryAddress NumberOfItemsToIndex$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$NumberOfItemsToIndex$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void NumberOfItemsToIndex$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,LONG*,LONG*,LONG*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$NumberOfItemsToIndex$VH().set(seg, x);
        }
        public static void NumberOfItemsToIndex$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,LONG*,LONG*,LONG*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$NumberOfItemsToIndex$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle URLBeingIndexed$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$URLBeingIndexed$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPWSTR*)") MemoryAddress URLBeingIndexed$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$URLBeingIndexed$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPWSTR*)") MemoryAddress URLBeingIndexed$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$URLBeingIndexed$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void URLBeingIndexed$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$URLBeingIndexed$VH().set(seg, x);
        }
        public static void URLBeingIndexed$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$URLBeingIndexed$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetURLIndexingState$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetURLIndexingState$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,DWORD*)") MemoryAddress GetURLIndexingState$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetURLIndexingState$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,DWORD*)") MemoryAddress GetURLIndexingState$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetURLIndexingState$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetURLIndexingState$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetURLIndexingState$VH().set(seg, x);
        }
        public static void GetURLIndexingState$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetURLIndexingState$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetPersistentItemsChangedSink$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetPersistentItemsChangedSink$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,ISearchPersistentItemsChangedSink**)") MemoryAddress GetPersistentItemsChangedSink$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetPersistentItemsChangedSink$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,ISearchPersistentItemsChangedSink**)") MemoryAddress GetPersistentItemsChangedSink$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetPersistentItemsChangedSink$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetPersistentItemsChangedSink$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,ISearchPersistentItemsChangedSink**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetPersistentItemsChangedSink$VH().set(seg, x);
        }
        public static void GetPersistentItemsChangedSink$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,ISearchPersistentItemsChangedSink**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetPersistentItemsChangedSink$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RegisterViewForNotification$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$RegisterViewForNotification$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,ISearchViewChangedSink*,DWORD*)") MemoryAddress RegisterViewForNotification$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$RegisterViewForNotification$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,ISearchViewChangedSink*,DWORD*)") MemoryAddress RegisterViewForNotification$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$RegisterViewForNotification$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void RegisterViewForNotification$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,ISearchViewChangedSink*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$RegisterViewForNotification$VH().set(seg, x);
        }
        public static void RegisterViewForNotification$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,ISearchViewChangedSink*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$RegisterViewForNotification$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetItemsChangedSink$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetItemsChangedSink$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,ISearchNotifyInlineSite*,const IID*,void**,GUID*,GUID*,DWORD*)") MemoryAddress GetItemsChangedSink$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetItemsChangedSink$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,ISearchNotifyInlineSite*,const IID*,void**,GUID*,GUID*,DWORD*)") MemoryAddress GetItemsChangedSink$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetItemsChangedSink$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetItemsChangedSink$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,ISearchNotifyInlineSite*,const IID*,void**,GUID*,GUID*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetItemsChangedSink$VH().set(seg, x);
        }
        public static void GetItemsChangedSink$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,ISearchNotifyInlineSite*,const IID*,void**,GUID*,GUID*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetItemsChangedSink$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle UnregisterViewForNotification$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$UnregisterViewForNotification$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,DWORD)") MemoryAddress UnregisterViewForNotification$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$UnregisterViewForNotification$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,DWORD)") MemoryAddress UnregisterViewForNotification$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$UnregisterViewForNotification$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void UnregisterViewForNotification$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$UnregisterViewForNotification$VH().set(seg, x);
        }
        public static void UnregisterViewForNotification$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,DWORD)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$UnregisterViewForNotification$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetExtensionClusion$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$SetExtensionClusion$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,BOOL)") MemoryAddress SetExtensionClusion$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$SetExtensionClusion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,BOOL)") MemoryAddress SetExtensionClusion$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$SetExtensionClusion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetExtensionClusion$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,BOOL)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$SetExtensionClusion$VH().set(seg, x);
        }
        public static void SetExtensionClusion$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,BOOL)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$SetExtensionClusion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle EnumerateExcludedExtensions$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$EnumerateExcludedExtensions$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,IEnumString**)") MemoryAddress EnumerateExcludedExtensions$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$EnumerateExcludedExtensions$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,IEnumString**)") MemoryAddress EnumerateExcludedExtensions$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$EnumerateExcludedExtensions$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void EnumerateExcludedExtensions$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,IEnumString**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$EnumerateExcludedExtensions$VH().set(seg, x);
        }
        public static void EnumerateExcludedExtensions$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,IEnumString**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$EnumerateExcludedExtensions$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetQueryHelper$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetQueryHelper$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,ISearchQueryHelper**)") MemoryAddress GetQueryHelper$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetQueryHelper$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,ISearchQueryHelper**)") MemoryAddress GetQueryHelper$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetQueryHelper$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetQueryHelper$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,ISearchQueryHelper**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetQueryHelper$VH().set(seg, x);
        }
        public static void GetQueryHelper$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,ISearchQueryHelper**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetQueryHelper$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_DiacriticSensitivity$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$put_DiacriticSensitivity$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,BOOL)") MemoryAddress put_DiacriticSensitivity$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$put_DiacriticSensitivity$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,BOOL)") MemoryAddress put_DiacriticSensitivity$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$put_DiacriticSensitivity$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_DiacriticSensitivity$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,BOOL)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$put_DiacriticSensitivity$VH().set(seg, x);
        }
        public static void put_DiacriticSensitivity$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,BOOL)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$put_DiacriticSensitivity$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_DiacriticSensitivity$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_DiacriticSensitivity$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,BOOL*)") MemoryAddress get_DiacriticSensitivity$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_DiacriticSensitivity$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,BOOL*)") MemoryAddress get_DiacriticSensitivity$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_DiacriticSensitivity$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_DiacriticSensitivity$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_DiacriticSensitivity$VH().set(seg, x);
        }
        public static void get_DiacriticSensitivity$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$get_DiacriticSensitivity$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCrawlScopeManager$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetCrawlScopeManager$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,ISearchCrawlScopeManager**)") MemoryAddress GetCrawlScopeManager$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetCrawlScopeManager$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,ISearchCrawlScopeManager**)") MemoryAddress GetCrawlScopeManager$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetCrawlScopeManager$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCrawlScopeManager$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,ISearchCrawlScopeManager**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetCrawlScopeManager$VH().set(seg, x);
        }
        public static void GetCrawlScopeManager$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,ISearchCrawlScopeManager**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$GetCrawlScopeManager$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle PrioritizeMatchingURLs$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2Vtbl$PrioritizeMatchingURLs$VH();
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,PRIORITIZE_FLAGS)") MemoryAddress PrioritizeMatchingURLs$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$PrioritizeMatchingURLs$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,PRIORITIZE_FLAGS)") MemoryAddress PrioritizeMatchingURLs$get(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2Vtbl$PrioritizeMatchingURLs$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void PrioritizeMatchingURLs$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,PRIORITIZE_FLAGS)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$PrioritizeMatchingURLs$VH().set(seg, x);
        }
        public static void PrioritizeMatchingURLs$set(@C("struct ISearchCatalogManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchCatalogManager2*,LPCWSTR,PRIORITIZE_FLAGS)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2Vtbl$PrioritizeMatchingURLs$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchCatalogManager2Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchCatalogManager2Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchCatalogManager2Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchCatalogManager2Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchCatalogManager2Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchCatalogManager2Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchCatalogManager2Vtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct ISearchCatalogManager2")public static class ISearchCatalogManager2 {

        /* package-private */ ISearchCatalogManager2() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchCatalogManager2$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$1.ISearchCatalogManager2$lpVtbl$VH();
        }
        public static  @C("struct ISearchCatalogManager2Vtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchCatalogManager2") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ISearchCatalogManager2Vtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchCatalogManager2") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchCatalogManager2$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ISearchCatalogManager2") MemorySegment seg, @C("struct ISearchCatalogManager2Vtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ISearchCatalogManager2") MemorySegment seg, long index, @C("struct ISearchCatalogManager2Vtbl*") MemoryAddress x) {
            searchapi_h$constants$1.ISearchCatalogManager2$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchCatalogManager2") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchCatalogManager2") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchCatalogManager2[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchCatalogManager2[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchCatalogManager2*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchCatalogManager2*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchCatalogManager2") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemoryLayout __MIDL_itf_searchapi_0000_0021_v0_0_c_ifspec$LAYOUT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0021_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0021_v0_0_c_ifspec$VH() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0021_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0021_v0_0_c_ifspec$SEGMENT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0021_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0021_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0021_v0_0_c_ifspec$VH().get(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0021_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0021_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0021_v0_0_c_ifspec$VH().set(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0021_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0021_v0_0_s_ifspec$LAYOUT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0021_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0021_v0_0_s_ifspec$VH() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0021_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0021_v0_0_s_ifspec$SEGMENT() {
        return searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0021_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0021_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0021_v0_0_s_ifspec$VH().get(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0021_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0021_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0021_v0_0_s_ifspec$VH().set(searchapi_h$constants$1.__MIDL_itf_searchapi_0000_0021_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static @C("int") int SEARCH_TERM_NO_EXPANSION() {
        return searchapi_h$constants$1.SEARCH_TERM_NO_EXPANSION();
    }
    public static @C("int") int SEARCH_TERM_PREFIX_ALL() {
        return searchapi_h$constants$1.SEARCH_TERM_PREFIX_ALL();
    }
    public static @C("int") int SEARCH_TERM_STEM_ALL() {
        return searchapi_h$constants$1.SEARCH_TERM_STEM_ALL();
    }
    public static @C("int") int SEARCH_NO_QUERY_SYNTAX() {
        return searchapi_h$constants$1.SEARCH_NO_QUERY_SYNTAX();
    }
    public static @C("int") int SEARCH_ADVANCED_QUERY_SYNTAX() {
        return searchapi_h$constants$1.SEARCH_ADVANCED_QUERY_SYNTAX();
    }
    public static @C("int") int SEARCH_NATURAL_QUERY_SYNTAX() {
        return searchapi_h$constants$1.SEARCH_NATURAL_QUERY_SYNTAX();
    }
    @C("struct _SEARCH_COLUMN_PROPERTIES")public static class _SEARCH_COLUMN_PROPERTIES {

        /* package-private */ _SEARCH_COLUMN_PROPERTIES() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1._SEARCH_COLUMN_PROPERTIES$struct$LAYOUT();
        }
        public static MemorySegment Value$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 748));
        }
        public static VarHandle lcid$VH() {
            return searchapi_h$constants$1._SEARCH_COLUMN_PROPERTIES$lcid$VH();
        }
        public static  @C("LCID") int lcid$get(@C("struct _SEARCH_COLUMN_PROPERTIES") MemorySegment seg) {
            return (int)searchapi_h$constants$1._SEARCH_COLUMN_PROPERTIES$lcid$VH().get(seg);
        }
        public static  @C("LCID") int lcid$get(@C("struct _SEARCH_COLUMN_PROPERTIES") MemorySegment seg, long index) {
            return (int)searchapi_h$constants$1._SEARCH_COLUMN_PROPERTIES$lcid$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lcid$set(@C("struct _SEARCH_COLUMN_PROPERTIES") MemorySegment seg, @C("LCID") int x) {
            searchapi_h$constants$1._SEARCH_COLUMN_PROPERTIES$lcid$VH().set(seg, x);
        }
        public static void lcid$set(@C("struct _SEARCH_COLUMN_PROPERTIES") MemorySegment seg, long index, @C("LCID") int x) {
            searchapi_h$constants$1._SEARCH_COLUMN_PROPERTIES$lcid$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct _SEARCH_COLUMN_PROPERTIES") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct _SEARCH_COLUMN_PROPERTIES") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct _SEARCH_COLUMN_PROPERTIES[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct _SEARCH_COLUMN_PROPERTIES[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct _SEARCH_COLUMN_PROPERTIES*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct _SEARCH_COLUMN_PROPERTIES*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct _SEARCH_COLUMN_PROPERTIES") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct _SEARCH_COLUMN_PROPERTIES")public static class SEARCH_COLUMN_PROPERTIES extends _SEARCH_COLUMN_PROPERTIES {

        /* package-private */ SEARCH_COLUMN_PROPERTIES() {}
    }

    public static  MemorySegment IID_ISearchQueryHelper$SEGMENT() {
        return searchapi_h$constants$1.IID_ISearchQueryHelper$SEGMENT();
    }
    @C("struct ISearchQueryHelperVtbl")public static class ISearchQueryHelperVtbl {

        /* package-private */ ISearchQueryHelperVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ISearchQueryHelper*)") MemoryAddress AddRef$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchQueryHelper*)") MemoryAddress AddRef$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("ULONG(*)(ISearchQueryHelper*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchQueryHelper*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ISearchQueryHelper*)") MemoryAddress Release$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchQueryHelper*)") MemoryAddress Release$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("ULONG(*)(ISearchQueryHelper*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchQueryHelper*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_ConnectionString$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$get_ConnectionString$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress get_ConnectionString$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$get_ConnectionString$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress get_ConnectionString$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$get_ConnectionString$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_ConnectionString$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$get_ConnectionString$VH().set(seg, x);
        }
        public static void get_ConnectionString$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$get_ConnectionString$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_QueryContentLocale$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryContentLocale$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LCID)") MemoryAddress put_QueryContentLocale$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryContentLocale$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LCID)") MemoryAddress put_QueryContentLocale$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryContentLocale$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_QueryContentLocale$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,LCID)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryContentLocale$VH().set(seg, x);
        }
        public static void put_QueryContentLocale$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,LCID)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryContentLocale$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_QueryContentLocale$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryContentLocale$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LCID*)") MemoryAddress get_QueryContentLocale$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryContentLocale$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LCID*)") MemoryAddress get_QueryContentLocale$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryContentLocale$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_QueryContentLocale$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,LCID*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryContentLocale$VH().set(seg, x);
        }
        public static void get_QueryContentLocale$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,LCID*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryContentLocale$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_QueryKeywordLocale$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryKeywordLocale$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LCID)") MemoryAddress put_QueryKeywordLocale$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryKeywordLocale$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LCID)") MemoryAddress put_QueryKeywordLocale$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryKeywordLocale$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_QueryKeywordLocale$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,LCID)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryKeywordLocale$VH().set(seg, x);
        }
        public static void put_QueryKeywordLocale$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,LCID)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryKeywordLocale$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_QueryKeywordLocale$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryKeywordLocale$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LCID*)") MemoryAddress get_QueryKeywordLocale$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryKeywordLocale$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LCID*)") MemoryAddress get_QueryKeywordLocale$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryKeywordLocale$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_QueryKeywordLocale$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,LCID*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryKeywordLocale$VH().set(seg, x);
        }
        public static void get_QueryKeywordLocale$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,LCID*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryKeywordLocale$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_QueryTermExpansion$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryTermExpansion$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,SEARCH_TERM_EXPANSION)") MemoryAddress put_QueryTermExpansion$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryTermExpansion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,SEARCH_TERM_EXPANSION)") MemoryAddress put_QueryTermExpansion$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryTermExpansion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_QueryTermExpansion$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,SEARCH_TERM_EXPANSION)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryTermExpansion$VH().set(seg, x);
        }
        public static void put_QueryTermExpansion$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,SEARCH_TERM_EXPANSION)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryTermExpansion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_QueryTermExpansion$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryTermExpansion$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,SEARCH_TERM_EXPANSION*)") MemoryAddress get_QueryTermExpansion$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryTermExpansion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,SEARCH_TERM_EXPANSION*)") MemoryAddress get_QueryTermExpansion$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryTermExpansion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_QueryTermExpansion$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,SEARCH_TERM_EXPANSION*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryTermExpansion$VH().set(seg, x);
        }
        public static void get_QueryTermExpansion$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,SEARCH_TERM_EXPANSION*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryTermExpansion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_QuerySyntax$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QuerySyntax$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,SEARCH_QUERY_SYNTAX)") MemoryAddress put_QuerySyntax$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QuerySyntax$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,SEARCH_QUERY_SYNTAX)") MemoryAddress put_QuerySyntax$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QuerySyntax$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_QuerySyntax$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,SEARCH_QUERY_SYNTAX)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QuerySyntax$VH().set(seg, x);
        }
        public static void put_QuerySyntax$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,SEARCH_QUERY_SYNTAX)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QuerySyntax$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_QuerySyntax$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QuerySyntax$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,SEARCH_QUERY_SYNTAX*)") MemoryAddress get_QuerySyntax$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QuerySyntax$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,SEARCH_QUERY_SYNTAX*)") MemoryAddress get_QuerySyntax$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QuerySyntax$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_QuerySyntax$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,SEARCH_QUERY_SYNTAX*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QuerySyntax$VH().set(seg, x);
        }
        public static void get_QuerySyntax$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,SEARCH_QUERY_SYNTAX*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QuerySyntax$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_QueryContentProperties$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryContentProperties$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR)") MemoryAddress put_QueryContentProperties$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryContentProperties$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR)") MemoryAddress put_QueryContentProperties$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryContentProperties$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_QueryContentProperties$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryContentProperties$VH().set(seg, x);
        }
        public static void put_QueryContentProperties$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryContentProperties$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_QueryContentProperties$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryContentProperties$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress get_QueryContentProperties$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryContentProperties$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress get_QueryContentProperties$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryContentProperties$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_QueryContentProperties$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryContentProperties$VH().set(seg, x);
        }
        public static void get_QueryContentProperties$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryContentProperties$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_QuerySelectColumns$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QuerySelectColumns$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR)") MemoryAddress put_QuerySelectColumns$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QuerySelectColumns$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR)") MemoryAddress put_QuerySelectColumns$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QuerySelectColumns$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_QuerySelectColumns$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QuerySelectColumns$VH().set(seg, x);
        }
        public static void put_QuerySelectColumns$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QuerySelectColumns$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_QuerySelectColumns$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QuerySelectColumns$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress get_QuerySelectColumns$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QuerySelectColumns$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress get_QuerySelectColumns$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QuerySelectColumns$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_QuerySelectColumns$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QuerySelectColumns$VH().set(seg, x);
        }
        public static void get_QuerySelectColumns$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QuerySelectColumns$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_QueryWhereRestrictions$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryWhereRestrictions$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR)") MemoryAddress put_QueryWhereRestrictions$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryWhereRestrictions$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR)") MemoryAddress put_QueryWhereRestrictions$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryWhereRestrictions$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_QueryWhereRestrictions$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryWhereRestrictions$VH().set(seg, x);
        }
        public static void put_QueryWhereRestrictions$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$put_QueryWhereRestrictions$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_QueryWhereRestrictions$VH() {
            return searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryWhereRestrictions$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress get_QueryWhereRestrictions$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryWhereRestrictions$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress get_QueryWhereRestrictions$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryWhereRestrictions$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_QueryWhereRestrictions$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryWhereRestrictions$VH().set(seg, x);
        }
        public static void get_QueryWhereRestrictions$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$1.ISearchQueryHelperVtbl$get_QueryWhereRestrictions$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_QuerySorting$VH() {
            return searchapi_h$constants$2.ISearchQueryHelperVtbl$put_QuerySorting$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR)") MemoryAddress put_QuerySorting$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchQueryHelperVtbl$put_QuerySorting$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR)") MemoryAddress put_QuerySorting$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchQueryHelperVtbl$put_QuerySorting$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_QuerySorting$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchQueryHelperVtbl$put_QuerySorting$VH().set(seg, x);
        }
        public static void put_QuerySorting$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchQueryHelperVtbl$put_QuerySorting$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_QuerySorting$VH() {
            return searchapi_h$constants$2.ISearchQueryHelperVtbl$get_QuerySorting$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress get_QuerySorting$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchQueryHelperVtbl$get_QuerySorting$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress get_QuerySorting$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchQueryHelperVtbl$get_QuerySorting$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_QuerySorting$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchQueryHelperVtbl$get_QuerySorting$VH().set(seg, x);
        }
        public static void get_QuerySorting$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchQueryHelperVtbl$get_QuerySorting$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GenerateSQLFromUserQuery$VH() {
            return searchapi_h$constants$2.ISearchQueryHelperVtbl$GenerateSQLFromUserQuery$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR,LPWSTR*)") MemoryAddress GenerateSQLFromUserQuery$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchQueryHelperVtbl$GenerateSQLFromUserQuery$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR,LPWSTR*)") MemoryAddress GenerateSQLFromUserQuery$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchQueryHelperVtbl$GenerateSQLFromUserQuery$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GenerateSQLFromUserQuery$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchQueryHelperVtbl$GenerateSQLFromUserQuery$VH().set(seg, x);
        }
        public static void GenerateSQLFromUserQuery$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,LPCWSTR,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchQueryHelperVtbl$GenerateSQLFromUserQuery$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle WriteProperties$VH() {
            return searchapi_h$constants$2.ISearchQueryHelperVtbl$WriteProperties$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,ITEMID,DWORD,PROPERTYKEY*,SEARCH_COLUMN_PROPERTIES*,FILETIME*)") MemoryAddress WriteProperties$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchQueryHelperVtbl$WriteProperties$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,ITEMID,DWORD,PROPERTYKEY*,SEARCH_COLUMN_PROPERTIES*,FILETIME*)") MemoryAddress WriteProperties$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchQueryHelperVtbl$WriteProperties$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void WriteProperties$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,ITEMID,DWORD,PROPERTYKEY*,SEARCH_COLUMN_PROPERTIES*,FILETIME*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchQueryHelperVtbl$WriteProperties$VH().set(seg, x);
        }
        public static void WriteProperties$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,ITEMID,DWORD,PROPERTYKEY*,SEARCH_COLUMN_PROPERTIES*,FILETIME*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchQueryHelperVtbl$WriteProperties$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_QueryMaxResults$VH() {
            return searchapi_h$constants$2.ISearchQueryHelperVtbl$put_QueryMaxResults$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LONG)") MemoryAddress put_QueryMaxResults$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchQueryHelperVtbl$put_QueryMaxResults$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LONG)") MemoryAddress put_QueryMaxResults$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchQueryHelperVtbl$put_QueryMaxResults$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_QueryMaxResults$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,LONG)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchQueryHelperVtbl$put_QueryMaxResults$VH().set(seg, x);
        }
        public static void put_QueryMaxResults$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,LONG)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchQueryHelperVtbl$put_QueryMaxResults$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_QueryMaxResults$VH() {
            return searchapi_h$constants$2.ISearchQueryHelperVtbl$get_QueryMaxResults$VH();
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LONG*)") MemoryAddress get_QueryMaxResults$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchQueryHelperVtbl$get_QueryMaxResults$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchQueryHelper*,LONG*)") MemoryAddress get_QueryMaxResults$get(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchQueryHelperVtbl$get_QueryMaxResults$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_QueryMaxResults$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchQueryHelper*,LONG*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchQueryHelperVtbl$get_QueryMaxResults$VH().set(seg, x);
        }
        public static void get_QueryMaxResults$set(@C("struct ISearchQueryHelperVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchQueryHelper*,LONG*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchQueryHelperVtbl$get_QueryMaxResults$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchQueryHelperVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchQueryHelperVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchQueryHelperVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchQueryHelperVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchQueryHelperVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchQueryHelperVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchQueryHelperVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct ISearchQueryHelper")public static class ISearchQueryHelper {

        /* package-private */ ISearchQueryHelper() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$2.ISearchQueryHelper$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$2.ISearchQueryHelper$lpVtbl$VH();
        }
        public static  @C("struct ISearchQueryHelperVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchQueryHelper") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchQueryHelper$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ISearchQueryHelperVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchQueryHelper") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchQueryHelper$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ISearchQueryHelper") MemorySegment seg, @C("struct ISearchQueryHelperVtbl*") MemoryAddress x) {
            searchapi_h$constants$2.ISearchQueryHelper$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ISearchQueryHelper") MemorySegment seg, long index, @C("struct ISearchQueryHelperVtbl*") MemoryAddress x) {
            searchapi_h$constants$2.ISearchQueryHelper$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchQueryHelper") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchQueryHelper") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchQueryHelper[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchQueryHelper[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchQueryHelper*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchQueryHelper*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchQueryHelper") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static @C("int") int PRIORITY_LEVEL_FOREGROUND() {
        return searchapi_h$constants$2.PRIORITY_LEVEL_FOREGROUND();
    }
    public static @C("int") int PRIORITY_LEVEL_HIGH() {
        return searchapi_h$constants$2.PRIORITY_LEVEL_HIGH();
    }
    public static @C("int") int PRIORITY_LEVEL_LOW() {
        return searchapi_h$constants$2.PRIORITY_LEVEL_LOW();
    }
    public static @C("int") int PRIORITY_LEVEL_DEFAULT() {
        return searchapi_h$constants$2.PRIORITY_LEVEL_DEFAULT();
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0022_v0_0_c_ifspec$LAYOUT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0022_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0022_v0_0_c_ifspec$VH() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0022_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0022_v0_0_c_ifspec$SEGMENT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0022_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0022_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0022_v0_0_c_ifspec$VH().get(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0022_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0022_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0022_v0_0_c_ifspec$VH().set(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0022_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0022_v0_0_s_ifspec$LAYOUT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0022_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0022_v0_0_s_ifspec$VH() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0022_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0022_v0_0_s_ifspec$SEGMENT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0022_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0022_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0022_v0_0_s_ifspec$VH().get(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0022_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0022_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0022_v0_0_s_ifspec$VH().set(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0022_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_IRowsetPrioritization$SEGMENT() {
        return searchapi_h$constants$2.IID_IRowsetPrioritization$SEGMENT();
    }
    @C("struct IRowsetPrioritizationVtbl")public static class IRowsetPrioritizationVtbl {

        /* package-private */ IRowsetPrioritizationVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$2.IRowsetPrioritizationVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$2.IRowsetPrioritizationVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IRowsetPrioritization*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetPrioritizationVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IRowsetPrioritization*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetPrioritizationVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, @C("HRESULT(*)(IRowsetPrioritization*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetPrioritizationVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IRowsetPrioritization*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetPrioritizationVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$2.IRowsetPrioritizationVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IRowsetPrioritization*)") MemoryAddress AddRef$get(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetPrioritizationVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IRowsetPrioritization*)") MemoryAddress AddRef$get(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetPrioritizationVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, @C("ULONG(*)(IRowsetPrioritization*)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetPrioritizationVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, long index, @C("ULONG(*)(IRowsetPrioritization*)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetPrioritizationVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$2.IRowsetPrioritizationVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IRowsetPrioritization*)") MemoryAddress Release$get(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetPrioritizationVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IRowsetPrioritization*)") MemoryAddress Release$get(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetPrioritizationVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, @C("ULONG(*)(IRowsetPrioritization*)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetPrioritizationVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, long index, @C("ULONG(*)(IRowsetPrioritization*)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetPrioritizationVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetScopePriority$VH() {
            return searchapi_h$constants$2.IRowsetPrioritizationVtbl$SetScopePriority$VH();
        }
        public static  @C("HRESULT(*)(IRowsetPrioritization*,PRIORITY_LEVEL,DWORD)") MemoryAddress SetScopePriority$get(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetPrioritizationVtbl$SetScopePriority$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IRowsetPrioritization*,PRIORITY_LEVEL,DWORD)") MemoryAddress SetScopePriority$get(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetPrioritizationVtbl$SetScopePriority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetScopePriority$set(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, @C("HRESULT(*)(IRowsetPrioritization*,PRIORITY_LEVEL,DWORD)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetPrioritizationVtbl$SetScopePriority$VH().set(seg, x);
        }
        public static void SetScopePriority$set(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IRowsetPrioritization*,PRIORITY_LEVEL,DWORD)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetPrioritizationVtbl$SetScopePriority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetScopePriority$VH() {
            return searchapi_h$constants$2.IRowsetPrioritizationVtbl$GetScopePriority$VH();
        }
        public static  @C("HRESULT(*)(IRowsetPrioritization*,PRIORITY_LEVEL*,DWORD*)") MemoryAddress GetScopePriority$get(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetPrioritizationVtbl$GetScopePriority$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IRowsetPrioritization*,PRIORITY_LEVEL*,DWORD*)") MemoryAddress GetScopePriority$get(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetPrioritizationVtbl$GetScopePriority$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetScopePriority$set(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, @C("HRESULT(*)(IRowsetPrioritization*,PRIORITY_LEVEL*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetPrioritizationVtbl$GetScopePriority$VH().set(seg, x);
        }
        public static void GetScopePriority$set(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IRowsetPrioritization*,PRIORITY_LEVEL*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetPrioritizationVtbl$GetScopePriority$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetScopeStatistics$VH() {
            return searchapi_h$constants$2.IRowsetPrioritizationVtbl$GetScopeStatistics$VH();
        }
        public static  @C("HRESULT(*)(IRowsetPrioritization*,DWORD*,DWORD*,DWORD*)") MemoryAddress GetScopeStatistics$get(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetPrioritizationVtbl$GetScopeStatistics$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IRowsetPrioritization*,DWORD*,DWORD*,DWORD*)") MemoryAddress GetScopeStatistics$get(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetPrioritizationVtbl$GetScopeStatistics$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetScopeStatistics$set(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, @C("HRESULT(*)(IRowsetPrioritization*,DWORD*,DWORD*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetPrioritizationVtbl$GetScopeStatistics$VH().set(seg, x);
        }
        public static void GetScopeStatistics$set(@C("struct IRowsetPrioritizationVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IRowsetPrioritization*,DWORD*,DWORD*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetPrioritizationVtbl$GetScopeStatistics$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IRowsetPrioritizationVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IRowsetPrioritizationVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IRowsetPrioritizationVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IRowsetPrioritizationVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IRowsetPrioritizationVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IRowsetPrioritizationVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IRowsetPrioritizationVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct IRowsetPrioritization")public static class IRowsetPrioritization {

        /* package-private */ IRowsetPrioritization() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$2.IRowsetPrioritization$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$2.IRowsetPrioritization$lpVtbl$VH();
        }
        public static  @C("struct IRowsetPrioritizationVtbl*") MemoryAddress lpVtbl$get(@C("struct IRowsetPrioritization") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetPrioritization$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IRowsetPrioritizationVtbl*") MemoryAddress lpVtbl$get(@C("struct IRowsetPrioritization") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetPrioritization$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IRowsetPrioritization") MemorySegment seg, @C("struct IRowsetPrioritizationVtbl*") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetPrioritization$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IRowsetPrioritization") MemorySegment seg, long index, @C("struct IRowsetPrioritizationVtbl*") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetPrioritization$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IRowsetPrioritization") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IRowsetPrioritization") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IRowsetPrioritization[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IRowsetPrioritization[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IRowsetPrioritization*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IRowsetPrioritization*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IRowsetPrioritization") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static @C("int") int ROWSETEVENT_ITEMSTATE_NOTINROWSET() {
        return searchapi_h$constants$2.ROWSETEVENT_ITEMSTATE_NOTINROWSET();
    }
    public static @C("int") int ROWSETEVENT_ITEMSTATE_INROWSET() {
        return searchapi_h$constants$2.ROWSETEVENT_ITEMSTATE_INROWSET();
    }
    public static @C("int") int ROWSETEVENT_ITEMSTATE_UNKNOWN() {
        return searchapi_h$constants$2.ROWSETEVENT_ITEMSTATE_UNKNOWN();
    }
    public static @C("int") int ROWSETEVENT_TYPE_DATAEXPIRED() {
        return searchapi_h$constants$2.ROWSETEVENT_TYPE_DATAEXPIRED();
    }
    public static @C("int") int ROWSETEVENT_TYPE_FOREGROUNDLOST() {
        return searchapi_h$constants$2.ROWSETEVENT_TYPE_FOREGROUNDLOST();
    }
    public static @C("int") int ROWSETEVENT_TYPE_SCOPESTATISTICS() {
        return searchapi_h$constants$2.ROWSETEVENT_TYPE_SCOPESTATISTICS();
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0023_v0_0_c_ifspec$LAYOUT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0023_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0023_v0_0_c_ifspec$VH() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0023_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0023_v0_0_c_ifspec$SEGMENT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0023_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0023_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0023_v0_0_c_ifspec$VH().get(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0023_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0023_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0023_v0_0_c_ifspec$VH().set(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0023_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0023_v0_0_s_ifspec$LAYOUT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0023_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0023_v0_0_s_ifspec$VH() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0023_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0023_v0_0_s_ifspec$SEGMENT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0023_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0023_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0023_v0_0_s_ifspec$VH().get(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0023_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0023_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0023_v0_0_s_ifspec$VH().set(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0023_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_IRowsetEvents$SEGMENT() {
        return searchapi_h$constants$2.IID_IRowsetEvents$SEGMENT();
    }
    @C("struct IRowsetEventsVtbl")public static class IRowsetEventsVtbl {

        /* package-private */ IRowsetEventsVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$2.IRowsetEventsVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$2.IRowsetEventsVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(IRowsetEvents*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IRowsetEventsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetEventsVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IRowsetEvents*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct IRowsetEventsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetEventsVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct IRowsetEventsVtbl") MemorySegment seg, @C("HRESULT(*)(IRowsetEvents*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetEventsVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct IRowsetEventsVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IRowsetEvents*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetEventsVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$2.IRowsetEventsVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(IRowsetEvents*)") MemoryAddress AddRef$get(@C("struct IRowsetEventsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetEventsVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(IRowsetEvents*)") MemoryAddress AddRef$get(@C("struct IRowsetEventsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetEventsVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct IRowsetEventsVtbl") MemorySegment seg, @C("ULONG(*)(IRowsetEvents*)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetEventsVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct IRowsetEventsVtbl") MemorySegment seg, long index, @C("ULONG(*)(IRowsetEvents*)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetEventsVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$2.IRowsetEventsVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(IRowsetEvents*)") MemoryAddress Release$get(@C("struct IRowsetEventsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetEventsVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(IRowsetEvents*)") MemoryAddress Release$get(@C("struct IRowsetEventsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetEventsVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct IRowsetEventsVtbl") MemorySegment seg, @C("ULONG(*)(IRowsetEvents*)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetEventsVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct IRowsetEventsVtbl") MemorySegment seg, long index, @C("ULONG(*)(IRowsetEvents*)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetEventsVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OnNewItem$VH() {
            return searchapi_h$constants$2.IRowsetEventsVtbl$OnNewItem$VH();
        }
        public static  @C("HRESULT(*)(IRowsetEvents*,const PROPVARIANT*,ROWSETEVENT_ITEMSTATE)") MemoryAddress OnNewItem$get(@C("struct IRowsetEventsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetEventsVtbl$OnNewItem$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IRowsetEvents*,const PROPVARIANT*,ROWSETEVENT_ITEMSTATE)") MemoryAddress OnNewItem$get(@C("struct IRowsetEventsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetEventsVtbl$OnNewItem$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OnNewItem$set(@C("struct IRowsetEventsVtbl") MemorySegment seg, @C("HRESULT(*)(IRowsetEvents*,const PROPVARIANT*,ROWSETEVENT_ITEMSTATE)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetEventsVtbl$OnNewItem$VH().set(seg, x);
        }
        public static void OnNewItem$set(@C("struct IRowsetEventsVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IRowsetEvents*,const PROPVARIANT*,ROWSETEVENT_ITEMSTATE)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetEventsVtbl$OnNewItem$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OnChangedItem$VH() {
            return searchapi_h$constants$2.IRowsetEventsVtbl$OnChangedItem$VH();
        }
        public static  @C("HRESULT(*)(IRowsetEvents*,const PROPVARIANT*,ROWSETEVENT_ITEMSTATE,ROWSETEVENT_ITEMSTATE)") MemoryAddress OnChangedItem$get(@C("struct IRowsetEventsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetEventsVtbl$OnChangedItem$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IRowsetEvents*,const PROPVARIANT*,ROWSETEVENT_ITEMSTATE,ROWSETEVENT_ITEMSTATE)") MemoryAddress OnChangedItem$get(@C("struct IRowsetEventsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetEventsVtbl$OnChangedItem$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OnChangedItem$set(@C("struct IRowsetEventsVtbl") MemorySegment seg, @C("HRESULT(*)(IRowsetEvents*,const PROPVARIANT*,ROWSETEVENT_ITEMSTATE,ROWSETEVENT_ITEMSTATE)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetEventsVtbl$OnChangedItem$VH().set(seg, x);
        }
        public static void OnChangedItem$set(@C("struct IRowsetEventsVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IRowsetEvents*,const PROPVARIANT*,ROWSETEVENT_ITEMSTATE,ROWSETEVENT_ITEMSTATE)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetEventsVtbl$OnChangedItem$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OnDeletedItem$VH() {
            return searchapi_h$constants$2.IRowsetEventsVtbl$OnDeletedItem$VH();
        }
        public static  @C("HRESULT(*)(IRowsetEvents*,const PROPVARIANT*,ROWSETEVENT_ITEMSTATE)") MemoryAddress OnDeletedItem$get(@C("struct IRowsetEventsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetEventsVtbl$OnDeletedItem$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IRowsetEvents*,const PROPVARIANT*,ROWSETEVENT_ITEMSTATE)") MemoryAddress OnDeletedItem$get(@C("struct IRowsetEventsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetEventsVtbl$OnDeletedItem$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OnDeletedItem$set(@C("struct IRowsetEventsVtbl") MemorySegment seg, @C("HRESULT(*)(IRowsetEvents*,const PROPVARIANT*,ROWSETEVENT_ITEMSTATE)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetEventsVtbl$OnDeletedItem$VH().set(seg, x);
        }
        public static void OnDeletedItem$set(@C("struct IRowsetEventsVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IRowsetEvents*,const PROPVARIANT*,ROWSETEVENT_ITEMSTATE)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetEventsVtbl$OnDeletedItem$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle OnRowsetEvent$VH() {
            return searchapi_h$constants$2.IRowsetEventsVtbl$OnRowsetEvent$VH();
        }
        public static  @C("HRESULT(*)(IRowsetEvents*,ROWSETEVENT_TYPE,const PROPVARIANT*)") MemoryAddress OnRowsetEvent$get(@C("struct IRowsetEventsVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetEventsVtbl$OnRowsetEvent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(IRowsetEvents*,ROWSETEVENT_TYPE,const PROPVARIANT*)") MemoryAddress OnRowsetEvent$get(@C("struct IRowsetEventsVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetEventsVtbl$OnRowsetEvent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void OnRowsetEvent$set(@C("struct IRowsetEventsVtbl") MemorySegment seg, @C("HRESULT(*)(IRowsetEvents*,ROWSETEVENT_TYPE,const PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetEventsVtbl$OnRowsetEvent$VH().set(seg, x);
        }
        public static void OnRowsetEvent$set(@C("struct IRowsetEventsVtbl") MemorySegment seg, long index, @C("HRESULT(*)(IRowsetEvents*,ROWSETEVENT_TYPE,const PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetEventsVtbl$OnRowsetEvent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IRowsetEventsVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IRowsetEventsVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IRowsetEventsVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IRowsetEventsVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IRowsetEventsVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IRowsetEventsVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IRowsetEventsVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct IRowsetEvents")public static class IRowsetEvents {

        /* package-private */ IRowsetEvents() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$2.IRowsetEvents$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$2.IRowsetEvents$lpVtbl$VH();
        }
        public static  @C("struct IRowsetEventsVtbl*") MemoryAddress lpVtbl$get(@C("struct IRowsetEvents") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetEvents$lpVtbl$VH().get(seg);
        }
        public static  @C("struct IRowsetEventsVtbl*") MemoryAddress lpVtbl$get(@C("struct IRowsetEvents") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.IRowsetEvents$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct IRowsetEvents") MemorySegment seg, @C("struct IRowsetEventsVtbl*") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetEvents$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct IRowsetEvents") MemorySegment seg, long index, @C("struct IRowsetEventsVtbl*") MemoryAddress x) {
            searchapi_h$constants$2.IRowsetEvents$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct IRowsetEvents") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct IRowsetEvents") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct IRowsetEvents[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct IRowsetEvents[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct IRowsetEvents*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct IRowsetEvents*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct IRowsetEvents") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemoryLayout __MIDL_itf_searchapi_0000_0024_v0_0_c_ifspec$LAYOUT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0024_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0024_v0_0_c_ifspec$VH() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0024_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0024_v0_0_c_ifspec$SEGMENT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0024_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0024_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0024_v0_0_c_ifspec$VH().get(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0024_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0024_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0024_v0_0_c_ifspec$VH().set(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0024_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0024_v0_0_s_ifspec$LAYOUT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0024_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0024_v0_0_s_ifspec$VH() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0024_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0024_v0_0_s_ifspec$SEGMENT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0024_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0024_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0024_v0_0_s_ifspec$VH().get(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0024_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0024_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0024_v0_0_s_ifspec$VH().set(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0024_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ISearchManager$SEGMENT() {
        return searchapi_h$constants$2.IID_ISearchManager$SEGMENT();
    }
    @C("struct ISearchManagerVtbl")public static class ISearchManagerVtbl {

        /* package-private */ ISearchManagerVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$2.ISearchManagerVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$2.ISearchManagerVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ISearchManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ISearchManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$2.ISearchManagerVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ISearchManager*)") MemoryAddress AddRef$get(@C("struct ISearchManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchManager*)") MemoryAddress AddRef$get(@C("struct ISearchManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ISearchManagerVtbl") MemorySegment seg, @C("ULONG(*)(ISearchManager*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ISearchManagerVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchManager*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$2.ISearchManagerVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ISearchManager*)") MemoryAddress Release$get(@C("struct ISearchManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchManager*)") MemoryAddress Release$get(@C("struct ISearchManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ISearchManagerVtbl") MemorySegment seg, @C("ULONG(*)(ISearchManager*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ISearchManagerVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchManager*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetIndexerVersionStr$VH() {
            return searchapi_h$constants$2.ISearchManagerVtbl$GetIndexerVersionStr$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager*,LPWSTR*)") MemoryAddress GetIndexerVersionStr$get(@C("struct ISearchManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$GetIndexerVersionStr$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager*,LPWSTR*)") MemoryAddress GetIndexerVersionStr$get(@C("struct ISearchManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$GetIndexerVersionStr$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetIndexerVersionStr$set(@C("struct ISearchManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$GetIndexerVersionStr$VH().set(seg, x);
        }
        public static void GetIndexerVersionStr$set(@C("struct ISearchManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$GetIndexerVersionStr$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetIndexerVersion$VH() {
            return searchapi_h$constants$2.ISearchManagerVtbl$GetIndexerVersion$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager*,DWORD*,DWORD*)") MemoryAddress GetIndexerVersion$get(@C("struct ISearchManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$GetIndexerVersion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager*,DWORD*,DWORD*)") MemoryAddress GetIndexerVersion$get(@C("struct ISearchManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$GetIndexerVersion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetIndexerVersion$set(@C("struct ISearchManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager*,DWORD*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$GetIndexerVersion$VH().set(seg, x);
        }
        public static void GetIndexerVersion$set(@C("struct ISearchManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager*,DWORD*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$GetIndexerVersion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParameter$VH() {
            return searchapi_h$constants$2.ISearchManagerVtbl$GetParameter$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager*,LPCWSTR,PROPVARIANT**)") MemoryAddress GetParameter$get(@C("struct ISearchManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$GetParameter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager*,LPCWSTR,PROPVARIANT**)") MemoryAddress GetParameter$get(@C("struct ISearchManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$GetParameter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParameter$set(@C("struct ISearchManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager*,LPCWSTR,PROPVARIANT**)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$GetParameter$VH().set(seg, x);
        }
        public static void GetParameter$set(@C("struct ISearchManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager*,LPCWSTR,PROPVARIANT**)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$GetParameter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetParameter$VH() {
            return searchapi_h$constants$2.ISearchManagerVtbl$SetParameter$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager*,LPCWSTR,const PROPVARIANT*)") MemoryAddress SetParameter$get(@C("struct ISearchManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$SetParameter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager*,LPCWSTR,const PROPVARIANT*)") MemoryAddress SetParameter$get(@C("struct ISearchManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$SetParameter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetParameter$set(@C("struct ISearchManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager*,LPCWSTR,const PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$SetParameter$VH().set(seg, x);
        }
        public static void SetParameter$set(@C("struct ISearchManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager*,LPCWSTR,const PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$SetParameter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_ProxyName$VH() {
            return searchapi_h$constants$2.ISearchManagerVtbl$get_ProxyName$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager*,LPWSTR*)") MemoryAddress get_ProxyName$get(@C("struct ISearchManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$get_ProxyName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager*,LPWSTR*)") MemoryAddress get_ProxyName$get(@C("struct ISearchManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$get_ProxyName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_ProxyName$set(@C("struct ISearchManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$get_ProxyName$VH().set(seg, x);
        }
        public static void get_ProxyName$set(@C("struct ISearchManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$get_ProxyName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_BypassList$VH() {
            return searchapi_h$constants$2.ISearchManagerVtbl$get_BypassList$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager*,LPWSTR*)") MemoryAddress get_BypassList$get(@C("struct ISearchManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$get_BypassList$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager*,LPWSTR*)") MemoryAddress get_BypassList$get(@C("struct ISearchManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$get_BypassList$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_BypassList$set(@C("struct ISearchManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$get_BypassList$VH().set(seg, x);
        }
        public static void get_BypassList$set(@C("struct ISearchManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$get_BypassList$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetProxy$VH() {
            return searchapi_h$constants$2.ISearchManagerVtbl$SetProxy$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager*,PROXY_ACCESS,BOOL,DWORD,LPCWSTR,LPCWSTR)") MemoryAddress SetProxy$get(@C("struct ISearchManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$SetProxy$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager*,PROXY_ACCESS,BOOL,DWORD,LPCWSTR,LPCWSTR)") MemoryAddress SetProxy$get(@C("struct ISearchManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$SetProxy$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetProxy$set(@C("struct ISearchManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager*,PROXY_ACCESS,BOOL,DWORD,LPCWSTR,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$SetProxy$VH().set(seg, x);
        }
        public static void SetProxy$set(@C("struct ISearchManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager*,PROXY_ACCESS,BOOL,DWORD,LPCWSTR,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$SetProxy$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCatalog$VH() {
            return searchapi_h$constants$2.ISearchManagerVtbl$GetCatalog$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager*,LPCWSTR,ISearchCatalogManager**)") MemoryAddress GetCatalog$get(@C("struct ISearchManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$GetCatalog$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager*,LPCWSTR,ISearchCatalogManager**)") MemoryAddress GetCatalog$get(@C("struct ISearchManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$GetCatalog$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCatalog$set(@C("struct ISearchManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager*,LPCWSTR,ISearchCatalogManager**)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$GetCatalog$VH().set(seg, x);
        }
        public static void GetCatalog$set(@C("struct ISearchManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager*,LPCWSTR,ISearchCatalogManager**)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$GetCatalog$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_UserAgent$VH() {
            return searchapi_h$constants$2.ISearchManagerVtbl$get_UserAgent$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager*,LPWSTR*)") MemoryAddress get_UserAgent$get(@C("struct ISearchManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$get_UserAgent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager*,LPWSTR*)") MemoryAddress get_UserAgent$get(@C("struct ISearchManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$get_UserAgent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_UserAgent$set(@C("struct ISearchManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$get_UserAgent$VH().set(seg, x);
        }
        public static void get_UserAgent$set(@C("struct ISearchManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$get_UserAgent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_UserAgent$VH() {
            return searchapi_h$constants$2.ISearchManagerVtbl$put_UserAgent$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager*,LPCWSTR)") MemoryAddress put_UserAgent$get(@C("struct ISearchManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$put_UserAgent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager*,LPCWSTR)") MemoryAddress put_UserAgent$get(@C("struct ISearchManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$put_UserAgent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_UserAgent$set(@C("struct ISearchManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$put_UserAgent$VH().set(seg, x);
        }
        public static void put_UserAgent$set(@C("struct ISearchManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$put_UserAgent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_UseProxy$VH() {
            return searchapi_h$constants$2.ISearchManagerVtbl$get_UseProxy$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager*,PROXY_ACCESS*)") MemoryAddress get_UseProxy$get(@C("struct ISearchManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$get_UseProxy$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager*,PROXY_ACCESS*)") MemoryAddress get_UseProxy$get(@C("struct ISearchManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$get_UseProxy$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_UseProxy$set(@C("struct ISearchManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager*,PROXY_ACCESS*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$get_UseProxy$VH().set(seg, x);
        }
        public static void get_UseProxy$set(@C("struct ISearchManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager*,PROXY_ACCESS*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$get_UseProxy$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_LocalBypass$VH() {
            return searchapi_h$constants$2.ISearchManagerVtbl$get_LocalBypass$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager*,BOOL*)") MemoryAddress get_LocalBypass$get(@C("struct ISearchManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$get_LocalBypass$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager*,BOOL*)") MemoryAddress get_LocalBypass$get(@C("struct ISearchManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$get_LocalBypass$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_LocalBypass$set(@C("struct ISearchManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$get_LocalBypass$VH().set(seg, x);
        }
        public static void get_LocalBypass$set(@C("struct ISearchManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$get_LocalBypass$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_PortNumber$VH() {
            return searchapi_h$constants$2.ISearchManagerVtbl$get_PortNumber$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager*,DWORD*)") MemoryAddress get_PortNumber$get(@C("struct ISearchManagerVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$get_PortNumber$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager*,DWORD*)") MemoryAddress get_PortNumber$get(@C("struct ISearchManagerVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManagerVtbl$get_PortNumber$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_PortNumber$set(@C("struct ISearchManagerVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$get_PortNumber$VH().set(seg, x);
        }
        public static void get_PortNumber$set(@C("struct ISearchManagerVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManagerVtbl$get_PortNumber$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchManagerVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchManagerVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchManagerVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchManagerVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchManagerVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchManagerVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchManagerVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct ISearchManager")public static class ISearchManager {

        /* package-private */ ISearchManager() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$2.ISearchManager$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$2.ISearchManager$lpVtbl$VH();
        }
        public static  @C("struct ISearchManagerVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchManager") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ISearchManagerVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchManager") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ISearchManager") MemorySegment seg, @C("struct ISearchManagerVtbl*") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ISearchManager") MemorySegment seg, long index, @C("struct ISearchManagerVtbl*") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchManager") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchManager") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchManager[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchManager[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchManager*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchManager*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchManager") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemorySegment IID_ISearchManager2$SEGMENT() {
        return searchapi_h$constants$2.IID_ISearchManager2$SEGMENT();
    }
    @C("struct ISearchManager2Vtbl")public static class ISearchManager2Vtbl {

        /* package-private */ ISearchManager2Vtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager2*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager2*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager2*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager2*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ISearchManager2*)") MemoryAddress AddRef$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchManager2*)") MemoryAddress AddRef$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("ULONG(*)(ISearchManager2*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchManager2*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ISearchManager2*)") MemoryAddress Release$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchManager2*)") MemoryAddress Release$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("ULONG(*)(ISearchManager2*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchManager2*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetIndexerVersionStr$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$GetIndexerVersionStr$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPWSTR*)") MemoryAddress GetIndexerVersionStr$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$GetIndexerVersionStr$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPWSTR*)") MemoryAddress GetIndexerVersionStr$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$GetIndexerVersionStr$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetIndexerVersionStr$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager2*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$GetIndexerVersionStr$VH().set(seg, x);
        }
        public static void GetIndexerVersionStr$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager2*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$GetIndexerVersionStr$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetIndexerVersion$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$GetIndexerVersion$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager2*,DWORD*,DWORD*)") MemoryAddress GetIndexerVersion$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$GetIndexerVersion$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager2*,DWORD*,DWORD*)") MemoryAddress GetIndexerVersion$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$GetIndexerVersion$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetIndexerVersion$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager2*,DWORD*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$GetIndexerVersion$VH().set(seg, x);
        }
        public static void GetIndexerVersion$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager2*,DWORD*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$GetIndexerVersion$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetParameter$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$GetParameter$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPCWSTR,PROPVARIANT**)") MemoryAddress GetParameter$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$GetParameter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPCWSTR,PROPVARIANT**)") MemoryAddress GetParameter$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$GetParameter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetParameter$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager2*,LPCWSTR,PROPVARIANT**)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$GetParameter$VH().set(seg, x);
        }
        public static void GetParameter$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager2*,LPCWSTR,PROPVARIANT**)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$GetParameter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetParameter$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$SetParameter$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPCWSTR,const PROPVARIANT*)") MemoryAddress SetParameter$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$SetParameter$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPCWSTR,const PROPVARIANT*)") MemoryAddress SetParameter$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$SetParameter$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetParameter$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager2*,LPCWSTR,const PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$SetParameter$VH().set(seg, x);
        }
        public static void SetParameter$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager2*,LPCWSTR,const PROPVARIANT*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$SetParameter$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_ProxyName$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$get_ProxyName$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPWSTR*)") MemoryAddress get_ProxyName$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$get_ProxyName$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPWSTR*)") MemoryAddress get_ProxyName$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$get_ProxyName$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_ProxyName$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager2*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$get_ProxyName$VH().set(seg, x);
        }
        public static void get_ProxyName$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager2*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$get_ProxyName$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_BypassList$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$get_BypassList$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPWSTR*)") MemoryAddress get_BypassList$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$get_BypassList$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPWSTR*)") MemoryAddress get_BypassList$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$get_BypassList$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_BypassList$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager2*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$get_BypassList$VH().set(seg, x);
        }
        public static void get_BypassList$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager2*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$get_BypassList$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetProxy$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$SetProxy$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager2*,PROXY_ACCESS,BOOL,DWORD,LPCWSTR,LPCWSTR)") MemoryAddress SetProxy$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$SetProxy$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager2*,PROXY_ACCESS,BOOL,DWORD,LPCWSTR,LPCWSTR)") MemoryAddress SetProxy$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$SetProxy$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetProxy$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager2*,PROXY_ACCESS,BOOL,DWORD,LPCWSTR,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$SetProxy$VH().set(seg, x);
        }
        public static void SetProxy$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager2*,PROXY_ACCESS,BOOL,DWORD,LPCWSTR,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$SetProxy$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetCatalog$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$GetCatalog$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPCWSTR,ISearchCatalogManager**)") MemoryAddress GetCatalog$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$GetCatalog$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPCWSTR,ISearchCatalogManager**)") MemoryAddress GetCatalog$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$GetCatalog$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetCatalog$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager2*,LPCWSTR,ISearchCatalogManager**)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$GetCatalog$VH().set(seg, x);
        }
        public static void GetCatalog$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager2*,LPCWSTR,ISearchCatalogManager**)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$GetCatalog$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_UserAgent$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$get_UserAgent$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPWSTR*)") MemoryAddress get_UserAgent$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$get_UserAgent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPWSTR*)") MemoryAddress get_UserAgent$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$get_UserAgent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_UserAgent$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager2*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$get_UserAgent$VH().set(seg, x);
        }
        public static void get_UserAgent$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager2*,LPWSTR*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$get_UserAgent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle put_UserAgent$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$put_UserAgent$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPCWSTR)") MemoryAddress put_UserAgent$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$put_UserAgent$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPCWSTR)") MemoryAddress put_UserAgent$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$put_UserAgent$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void put_UserAgent$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager2*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$put_UserAgent$VH().set(seg, x);
        }
        public static void put_UserAgent$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager2*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$put_UserAgent$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_UseProxy$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$get_UseProxy$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager2*,PROXY_ACCESS*)") MemoryAddress get_UseProxy$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$get_UseProxy$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager2*,PROXY_ACCESS*)") MemoryAddress get_UseProxy$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$get_UseProxy$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_UseProxy$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager2*,PROXY_ACCESS*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$get_UseProxy$VH().set(seg, x);
        }
        public static void get_UseProxy$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager2*,PROXY_ACCESS*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$get_UseProxy$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_LocalBypass$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$get_LocalBypass$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager2*,BOOL*)") MemoryAddress get_LocalBypass$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$get_LocalBypass$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager2*,BOOL*)") MemoryAddress get_LocalBypass$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$get_LocalBypass$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_LocalBypass$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager2*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$get_LocalBypass$VH().set(seg, x);
        }
        public static void get_LocalBypass$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager2*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$get_LocalBypass$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle get_PortNumber$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$get_PortNumber$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager2*,DWORD*)") MemoryAddress get_PortNumber$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$get_PortNumber$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager2*,DWORD*)") MemoryAddress get_PortNumber$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$get_PortNumber$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void get_PortNumber$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager2*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$get_PortNumber$VH().set(seg, x);
        }
        public static void get_PortNumber$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager2*,DWORD*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$get_PortNumber$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CreateCatalog$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$CreateCatalog$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPCWSTR,ISearchCatalogManager**)") MemoryAddress CreateCatalog$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$CreateCatalog$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPCWSTR,ISearchCatalogManager**)") MemoryAddress CreateCatalog$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$CreateCatalog$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void CreateCatalog$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager2*,LPCWSTR,ISearchCatalogManager**)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$CreateCatalog$VH().set(seg, x);
        }
        public static void CreateCatalog$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager2*,LPCWSTR,ISearchCatalogManager**)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$CreateCatalog$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle DeleteCatalog$VH() {
            return searchapi_h$constants$2.ISearchManager2Vtbl$DeleteCatalog$VH();
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPCWSTR)") MemoryAddress DeleteCatalog$get(@C("struct ISearchManager2Vtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$DeleteCatalog$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchManager2*,LPCWSTR)") MemoryAddress DeleteCatalog$get(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2Vtbl$DeleteCatalog$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void DeleteCatalog$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, @C("HRESULT(*)(ISearchManager2*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$DeleteCatalog$VH().set(seg, x);
        }
        public static void DeleteCatalog$set(@C("struct ISearchManager2Vtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchManager2*,LPCWSTR)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2Vtbl$DeleteCatalog$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchManager2Vtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchManager2Vtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchManager2Vtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchManager2Vtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchManager2Vtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchManager2Vtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchManager2Vtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct ISearchManager2")public static class ISearchManager2 {

        /* package-private */ ISearchManager2() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$2.ISearchManager2$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$2.ISearchManager2$lpVtbl$VH();
        }
        public static  @C("struct ISearchManager2Vtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchManager2") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ISearchManager2Vtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchManager2") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchManager2$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ISearchManager2") MemorySegment seg, @C("struct ISearchManager2Vtbl*") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ISearchManager2") MemorySegment seg, long index, @C("struct ISearchManager2Vtbl*") MemoryAddress x) {
            searchapi_h$constants$2.ISearchManager2$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchManager2") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchManager2") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchManager2[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchManager2[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchManager2*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchManager2*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchManager2") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemorySegment CLSID_CSearchLanguageSupport$SEGMENT() {
        return searchapi_h$constants$2.CLSID_CSearchLanguageSupport$SEGMENT();
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0026_v0_0_c_ifspec$LAYOUT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0026_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0026_v0_0_c_ifspec$VH() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0026_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0026_v0_0_c_ifspec$SEGMENT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0026_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0026_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0026_v0_0_c_ifspec$VH().get(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0026_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0026_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0026_v0_0_c_ifspec$VH().set(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0026_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0026_v0_0_s_ifspec$LAYOUT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0026_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0026_v0_0_s_ifspec$VH() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0026_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0026_v0_0_s_ifspec$SEGMENT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0026_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0026_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0026_v0_0_s_ifspec$VH().get(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0026_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0026_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0026_v0_0_s_ifspec$VH().set(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0026_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment IID_ISearchLanguageSupport$SEGMENT() {
        return searchapi_h$constants$2.IID_ISearchLanguageSupport$SEGMENT();
    }
    @C("struct ISearchLanguageSupportVtbl")public static class ISearchLanguageSupportVtbl {

        /* package-private */ ISearchLanguageSupportVtbl() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$2.ISearchLanguageSupportVtbl$struct$LAYOUT();
        }
        public static VarHandle QueryInterface$VH() {
            return searchapi_h$constants$2.ISearchLanguageSupportVtbl$QueryInterface$VH();
        }
        public static  @C("HRESULT(*)(ISearchLanguageSupport*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupportVtbl$QueryInterface$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchLanguageSupport*,const IID*,void**)") MemoryAddress QueryInterface$get(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupportVtbl$QueryInterface$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void QueryInterface$set(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchLanguageSupport*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupportVtbl$QueryInterface$VH().set(seg, x);
        }
        public static void QueryInterface$set(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchLanguageSupport*,const IID*,void**)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupportVtbl$QueryInterface$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle AddRef$VH() {
            return searchapi_h$constants$2.ISearchLanguageSupportVtbl$AddRef$VH();
        }
        public static  @C("ULONG(*)(ISearchLanguageSupport*)") MemoryAddress AddRef$get(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupportVtbl$AddRef$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchLanguageSupport*)") MemoryAddress AddRef$get(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupportVtbl$AddRef$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void AddRef$set(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, @C("ULONG(*)(ISearchLanguageSupport*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupportVtbl$AddRef$VH().set(seg, x);
        }
        public static void AddRef$set(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchLanguageSupport*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupportVtbl$AddRef$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Release$VH() {
            return searchapi_h$constants$2.ISearchLanguageSupportVtbl$Release$VH();
        }
        public static  @C("ULONG(*)(ISearchLanguageSupport*)") MemoryAddress Release$get(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupportVtbl$Release$VH().get(seg);
        }
        public static  @C("ULONG(*)(ISearchLanguageSupport*)") MemoryAddress Release$get(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupportVtbl$Release$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void Release$set(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, @C("ULONG(*)(ISearchLanguageSupport*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupportVtbl$Release$VH().set(seg, x);
        }
        public static void Release$set(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, long index, @C("ULONG(*)(ISearchLanguageSupport*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupportVtbl$Release$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetDiacriticSensitivity$VH() {
            return searchapi_h$constants$2.ISearchLanguageSupportVtbl$SetDiacriticSensitivity$VH();
        }
        public static  @C("HRESULT(*)(ISearchLanguageSupport*,BOOL)") MemoryAddress SetDiacriticSensitivity$get(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupportVtbl$SetDiacriticSensitivity$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchLanguageSupport*,BOOL)") MemoryAddress SetDiacriticSensitivity$get(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupportVtbl$SetDiacriticSensitivity$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void SetDiacriticSensitivity$set(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchLanguageSupport*,BOOL)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupportVtbl$SetDiacriticSensitivity$VH().set(seg, x);
        }
        public static void SetDiacriticSensitivity$set(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchLanguageSupport*,BOOL)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupportVtbl$SetDiacriticSensitivity$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle GetDiacriticSensitivity$VH() {
            return searchapi_h$constants$2.ISearchLanguageSupportVtbl$GetDiacriticSensitivity$VH();
        }
        public static  @C("HRESULT(*)(ISearchLanguageSupport*,BOOL*)") MemoryAddress GetDiacriticSensitivity$get(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupportVtbl$GetDiacriticSensitivity$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchLanguageSupport*,BOOL*)") MemoryAddress GetDiacriticSensitivity$get(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupportVtbl$GetDiacriticSensitivity$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void GetDiacriticSensitivity$set(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchLanguageSupport*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupportVtbl$GetDiacriticSensitivity$VH().set(seg, x);
        }
        public static void GetDiacriticSensitivity$set(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchLanguageSupport*,BOOL*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupportVtbl$GetDiacriticSensitivity$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle LoadWordBreaker$VH() {
            return searchapi_h$constants$2.ISearchLanguageSupportVtbl$LoadWordBreaker$VH();
        }
        public static  @C("HRESULT(*)(ISearchLanguageSupport*,LCID,const IID*,void**,LCID*)") MemoryAddress LoadWordBreaker$get(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupportVtbl$LoadWordBreaker$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchLanguageSupport*,LCID,const IID*,void**,LCID*)") MemoryAddress LoadWordBreaker$get(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupportVtbl$LoadWordBreaker$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void LoadWordBreaker$set(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchLanguageSupport*,LCID,const IID*,void**,LCID*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupportVtbl$LoadWordBreaker$VH().set(seg, x);
        }
        public static void LoadWordBreaker$set(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchLanguageSupport*,LCID,const IID*,void**,LCID*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupportVtbl$LoadWordBreaker$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle LoadStemmer$VH() {
            return searchapi_h$constants$2.ISearchLanguageSupportVtbl$LoadStemmer$VH();
        }
        public static  @C("HRESULT(*)(ISearchLanguageSupport*,LCID,const IID*,void**,LCID*)") MemoryAddress LoadStemmer$get(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupportVtbl$LoadStemmer$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchLanguageSupport*,LCID,const IID*,void**,LCID*)") MemoryAddress LoadStemmer$get(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupportVtbl$LoadStemmer$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void LoadStemmer$set(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchLanguageSupport*,LCID,const IID*,void**,LCID*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupportVtbl$LoadStemmer$VH().set(seg, x);
        }
        public static void LoadStemmer$set(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchLanguageSupport*,LCID,const IID*,void**,LCID*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupportVtbl$LoadStemmer$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle IsPrefixNormalized$VH() {
            return searchapi_h$constants$2.ISearchLanguageSupportVtbl$IsPrefixNormalized$VH();
        }
        public static  @C("HRESULT(*)(ISearchLanguageSupport*,LPCWSTR,ULONG,LPCWSTR,ULONG,ULONG*)") MemoryAddress IsPrefixNormalized$get(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupportVtbl$IsPrefixNormalized$VH().get(seg);
        }
        public static  @C("HRESULT(*)(ISearchLanguageSupport*,LPCWSTR,ULONG,LPCWSTR,ULONG,ULONG*)") MemoryAddress IsPrefixNormalized$get(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupportVtbl$IsPrefixNormalized$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void IsPrefixNormalized$set(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, @C("HRESULT(*)(ISearchLanguageSupport*,LPCWSTR,ULONG,LPCWSTR,ULONG,ULONG*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupportVtbl$IsPrefixNormalized$VH().set(seg, x);
        }
        public static void IsPrefixNormalized$set(@C("struct ISearchLanguageSupportVtbl") MemorySegment seg, long index, @C("HRESULT(*)(ISearchLanguageSupport*,LPCWSTR,ULONG,LPCWSTR,ULONG,ULONG*)") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupportVtbl$IsPrefixNormalized$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchLanguageSupportVtbl") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchLanguageSupportVtbl") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchLanguageSupportVtbl[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchLanguageSupportVtbl[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchLanguageSupportVtbl*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchLanguageSupportVtbl*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchLanguageSupportVtbl") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    @C("struct ISearchLanguageSupport")public static class ISearchLanguageSupport {

        /* package-private */ ISearchLanguageSupport() {}
        public static MemoryLayout $LAYOUT() {
            return searchapi_h$constants$2.ISearchLanguageSupport$struct$LAYOUT();
        }
        public static VarHandle lpVtbl$VH() {
            return searchapi_h$constants$2.ISearchLanguageSupport$lpVtbl$VH();
        }
        public static  @C("struct ISearchLanguageSupportVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchLanguageSupport") MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupport$lpVtbl$VH().get(seg);
        }
        public static  @C("struct ISearchLanguageSupportVtbl*") MemoryAddress lpVtbl$get(@C("struct ISearchLanguageSupport") MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.ISearchLanguageSupport$lpVtbl$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void lpVtbl$set(@C("struct ISearchLanguageSupport") MemorySegment seg, @C("struct ISearchLanguageSupportVtbl*") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupport$lpVtbl$VH().set(seg, x);
        }
        public static void lpVtbl$set(@C("struct ISearchLanguageSupport") MemorySegment seg, long index, @C("struct ISearchLanguageSupportVtbl*") MemoryAddress x) {
            searchapi_h$constants$2.ISearchLanguageSupport$lpVtbl$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static @C("struct ISearchLanguageSupport") MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static @C("struct ISearchLanguageSupport") MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static @C("struct ISearchLanguageSupport[]") MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static @C("struct ISearchLanguageSupport[]") MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static @C("struct ISearchLanguageSupport*") MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static @C("struct ISearchLanguageSupport*") MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static @C("struct ISearchLanguageSupport") MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MemoryLayout __MIDL_itf_searchapi_0000_0027_v0_0_c_ifspec$LAYOUT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0027_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0027_v0_0_c_ifspec$VH() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0027_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0027_v0_0_c_ifspec$SEGMENT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0027_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0027_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0027_v0_0_c_ifspec$VH().get(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0027_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0027_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0027_v0_0_c_ifspec$VH().set(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0027_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0027_v0_0_s_ifspec$LAYOUT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0027_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0027_v0_0_s_ifspec$VH() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0027_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0027_v0_0_s_ifspec$SEGMENT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0027_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0027_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0027_v0_0_s_ifspec$VH().get(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0027_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0027_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0027_v0_0_s_ifspec$VH().set(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0027_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MemorySegment LIBID_SearchAPILib$SEGMENT() {
        return searchapi_h$constants$2.LIBID_SearchAPILib$SEGMENT();
    }
    public static  MemorySegment CLSID_CSearchManager$SEGMENT() {
        return searchapi_h$constants$2.CLSID_CSearchManager$SEGMENT();
    }
    public static  MemorySegment CLSID_CSearchRoot$SEGMENT() {
        return searchapi_h$constants$2.CLSID_CSearchRoot$SEGMENT();
    }
    public static  MemorySegment CLSID_CSearchScopeRule$SEGMENT() {
        return searchapi_h$constants$2.CLSID_CSearchScopeRule$SEGMENT();
    }
    public static  MemorySegment CLSID_FilterRegistration$SEGMENT() {
        return searchapi_h$constants$2.CLSID_FilterRegistration$SEGMENT();
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0028_v0_0_c_ifspec$LAYOUT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0028_v0_0_c_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0028_v0_0_c_ifspec$VH() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0028_v0_0_c_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0028_v0_0_c_ifspec$SEGMENT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0028_v0_0_c_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0028_v0_0_c_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0028_v0_0_c_ifspec$VH().get(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0028_v0_0_c_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0028_v0_0_c_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0028_v0_0_c_ifspec$VH().set(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0028_v0_0_c_ifspec$SEGMENT(), x);
    }
    public static  MemoryLayout __MIDL_itf_searchapi_0000_0028_v0_0_s_ifspec$LAYOUT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0028_v0_0_s_ifspec$LAYOUT();
    }
    public static  VarHandle __MIDL_itf_searchapi_0000_0028_v0_0_s_ifspec$VH() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0028_v0_0_s_ifspec$VH();
    }
    public static  MemorySegment __MIDL_itf_searchapi_0000_0028_v0_0_s_ifspec$SEGMENT() {
        return searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0028_v0_0_s_ifspec$SEGMENT();
    }
    public static @C("RPC_IF_HANDLE") MemoryAddress __MIDL_itf_searchapi_0000_0028_v0_0_s_ifspec$get() {
        return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0028_v0_0_s_ifspec$VH().get(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0028_v0_0_s_ifspec$SEGMENT());
    }
    public static void __MIDL_itf_searchapi_0000_0028_v0_0_s_ifspec$set(@C("RPC_IF_HANDLE") MemoryAddress x) {
        searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0028_v0_0_s_ifspec$VH().set(searchapi_h$constants$2.__MIDL_itf_searchapi_0000_0028_v0_0_s_ifspec$SEGMENT(), x);
    }
    public static  MethodHandle BSTR_UserSize$MH() {
        return searchapi_h$constants$2.BSTR_UserSize$MH();
    }
    public static @C("unsigned long") int BSTR_UserSize (@C("unsigned long*") Addressable x0, @C("unsigned long") int x1, @C("BSTR*") Addressable x2) {
        try {
            return (int)searchapi_h$constants$2.BSTR_UserSize$MH().invokeExact(x0.address(), x1, x2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle BSTR_UserMarshal$MH() {
        return searchapi_h$constants$2.BSTR_UserMarshal$MH();
    }
    public static @C("unsigned char*") MemoryAddress BSTR_UserMarshal (@C("unsigned long*") Addressable x0, @C("unsigned char*") Addressable x1, @C("BSTR*") Addressable x2) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.BSTR_UserMarshal$MH().invokeExact(x0.address(), x1.address(), x2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle BSTR_UserUnmarshal$MH() {
        return searchapi_h$constants$2.BSTR_UserUnmarshal$MH();
    }
    public static @C("unsigned char*") MemoryAddress BSTR_UserUnmarshal (@C("unsigned long*") Addressable x0, @C("unsigned char*") Addressable x1, @C("BSTR*") Addressable x2) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.BSTR_UserUnmarshal$MH().invokeExact(x0.address(), x1.address(), x2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle BSTR_UserFree$MH() {
        return searchapi_h$constants$2.BSTR_UserFree$MH();
    }
    public static void BSTR_UserFree (@C("unsigned long*") Addressable x0, @C("BSTR*") Addressable x1) {
        try {
            searchapi_h$constants$2.BSTR_UserFree$MH().invokeExact(x0.address(), x1.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle LPSAFEARRAY_UserSize$MH() {
        return searchapi_h$constants$2.LPSAFEARRAY_UserSize$MH();
    }
    public static @C("unsigned long") int LPSAFEARRAY_UserSize (@C("unsigned long*") Addressable x0, @C("unsigned long") int x1, @C("LPSAFEARRAY*") Addressable x2) {
        try {
            return (int)searchapi_h$constants$2.LPSAFEARRAY_UserSize$MH().invokeExact(x0.address(), x1, x2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle LPSAFEARRAY_UserMarshal$MH() {
        return searchapi_h$constants$2.LPSAFEARRAY_UserMarshal$MH();
    }
    public static @C("unsigned char*") MemoryAddress LPSAFEARRAY_UserMarshal (@C("unsigned long*") Addressable x0, @C("unsigned char*") Addressable x1, @C("LPSAFEARRAY*") Addressable x2) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.LPSAFEARRAY_UserMarshal$MH().invokeExact(x0.address(), x1.address(), x2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle LPSAFEARRAY_UserUnmarshal$MH() {
        return searchapi_h$constants$2.LPSAFEARRAY_UserUnmarshal$MH();
    }
    public static @C("unsigned char*") MemoryAddress LPSAFEARRAY_UserUnmarshal (@C("unsigned long*") Addressable x0, @C("unsigned char*") Addressable x1, @C("LPSAFEARRAY*") Addressable x2) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.LPSAFEARRAY_UserUnmarshal$MH().invokeExact(x0.address(), x1.address(), x2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle LPSAFEARRAY_UserFree$MH() {
        return searchapi_h$constants$2.LPSAFEARRAY_UserFree$MH();
    }
    public static void LPSAFEARRAY_UserFree (@C("unsigned long*") Addressable x0, @C("LPSAFEARRAY*") Addressable x1) {
        try {
            searchapi_h$constants$2.LPSAFEARRAY_UserFree$MH().invokeExact(x0.address(), x1.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle BSTR_UserSize64$MH() {
        return searchapi_h$constants$2.BSTR_UserSize64$MH();
    }
    public static @C("unsigned long") int BSTR_UserSize64 (@C("unsigned long*") Addressable x0, @C("unsigned long") int x1, @C("BSTR*") Addressable x2) {
        try {
            return (int)searchapi_h$constants$2.BSTR_UserSize64$MH().invokeExact(x0.address(), x1, x2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle BSTR_UserMarshal64$MH() {
        return searchapi_h$constants$2.BSTR_UserMarshal64$MH();
    }
    public static @C("unsigned char*") MemoryAddress BSTR_UserMarshal64 (@C("unsigned long*") Addressable x0, @C("unsigned char*") Addressable x1, @C("BSTR*") Addressable x2) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.BSTR_UserMarshal64$MH().invokeExact(x0.address(), x1.address(), x2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle BSTR_UserUnmarshal64$MH() {
        return searchapi_h$constants$2.BSTR_UserUnmarshal64$MH();
    }
    public static @C("unsigned char*") MemoryAddress BSTR_UserUnmarshal64 (@C("unsigned long*") Addressable x0, @C("unsigned char*") Addressable x1, @C("BSTR*") Addressable x2) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.BSTR_UserUnmarshal64$MH().invokeExact(x0.address(), x1.address(), x2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle BSTR_UserFree64$MH() {
        return searchapi_h$constants$2.BSTR_UserFree64$MH();
    }
    public static void BSTR_UserFree64 (@C("unsigned long*") Addressable x0, @C("BSTR*") Addressable x1) {
        try {
            searchapi_h$constants$2.BSTR_UserFree64$MH().invokeExact(x0.address(), x1.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle LPSAFEARRAY_UserSize64$MH() {
        return searchapi_h$constants$2.LPSAFEARRAY_UserSize64$MH();
    }
    public static @C("unsigned long") int LPSAFEARRAY_UserSize64 (@C("unsigned long*") Addressable x0, @C("unsigned long") int x1, @C("LPSAFEARRAY*") Addressable x2) {
        try {
            return (int)searchapi_h$constants$2.LPSAFEARRAY_UserSize64$MH().invokeExact(x0.address(), x1, x2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle LPSAFEARRAY_UserMarshal64$MH() {
        return searchapi_h$constants$2.LPSAFEARRAY_UserMarshal64$MH();
    }
    public static @C("unsigned char*") MemoryAddress LPSAFEARRAY_UserMarshal64 (@C("unsigned long*") Addressable x0, @C("unsigned char*") Addressable x1, @C("LPSAFEARRAY*") Addressable x2) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.LPSAFEARRAY_UserMarshal64$MH().invokeExact(x0.address(), x1.address(), x2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle LPSAFEARRAY_UserUnmarshal64$MH() {
        return searchapi_h$constants$2.LPSAFEARRAY_UserUnmarshal64$MH();
    }
    public static @C("unsigned char*") MemoryAddress LPSAFEARRAY_UserUnmarshal64 (@C("unsigned long*") Addressable x0, @C("unsigned char*") Addressable x1, @C("LPSAFEARRAY*") Addressable x2) {
        try {
            return (jdk.incubator.foreign.MemoryAddress)searchapi_h$constants$2.LPSAFEARRAY_UserUnmarshal64$MH().invokeExact(x0.address(), x1.address(), x2.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle LPSAFEARRAY_UserFree64$MH() {
        return searchapi_h$constants$2.LPSAFEARRAY_UserFree64$MH();
    }
    public static void LPSAFEARRAY_UserFree64 (@C("unsigned long*") Addressable x0, @C("LPSAFEARRAY*") Addressable x1) {
        try {
            searchapi_h$constants$2.LPSAFEARRAY_UserFree64$MH().invokeExact(x0.address(), x1.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ISearchCrawlScopeManager2_GetVersion_Proxy$MH() {
        return searchapi_h$constants$2.ISearchCrawlScopeManager2_GetVersion_Proxy$MH();
    }
    public static @C("HRESULT") int ISearchCrawlScopeManager2_GetVersion_Proxy (@C("ISearchCrawlScopeManager2*") Addressable This, @C("long**") Addressable plVersion, @C("HANDLE*") Addressable phFileMapping) {
        try {
            return (int)searchapi_h$constants$2.ISearchCrawlScopeManager2_GetVersion_Proxy$MH().invokeExact(This.address(), plVersion.address(), phFileMapping.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
    public static  MethodHandle ISearchCrawlScopeManager2_GetVersion_Stub$MH() {
        return searchapi_h$constants$2.ISearchCrawlScopeManager2_GetVersion_Stub$MH();
    }
    public static @C("HRESULT") int ISearchCrawlScopeManager2_GetVersion_Stub (@C("ISearchCrawlScopeManager2*") Addressable This, @C("long*") Addressable plVersion) {
        try {
            return (int)searchapi_h$constants$2.ISearchCrawlScopeManager2_GetVersion_Stub$MH().invokeExact(This.address(), plVersion.address());
        } catch (Throwable ex) {
            throw new AssertionError(ex);
        }
    }
}


